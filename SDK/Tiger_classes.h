#pragma once

// Name: bbbbbbbbbbbbbbbbbbbbbbblod, Version: 1


/*!!DEFINE!!*/

/*!!HELPER_DEF!!*/

/*!!HELPER_INC!!*/

#ifdef _MSC_VER
	#pragma pack(push, 0x01)
#endif

namespace CG
{
//---------------------------------------------------------------------------
// Classes
//---------------------------------------------------------------------------

// Class Tiger.ChooseNextWaypoint
// 0x0078 (FullSize[0x00E8] - InheritedSize[0x0070])
class UChooseNextWaypoint : public UBTTaskNode
{
public:
	struct FBlackboardKeySelector                      Index;                                                     // 0x0070(0x0028) (Edit, Protected, NativeAccessSpecifierProtected)
	struct FBlackboardKeySelector                      Waypoint;                                                  // 0x0098(0x0028) (Edit, Protected, NativeAccessSpecifierProtected)
	struct FBlackboardKeySelector                      bWaypointDirectionIsForward;                               // 0x00C0(0x0028) (Edit, Protected, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.ChooseNextWaypoint");
		return ptr;
	}



};

// Class Tiger.TigerBuff
// 0x0248 (FullSize[0x0270] - InheritedSize[0x0028])
class UTigerBuff : public UObject
{
public:
	unsigned char                                      UnknownData_CF4R[0x8];                                     // 0x0028(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FTigerCharacterStatModification             StatModification;                                          // 0x0030(0x00B4) (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	struct FTigerStatusEffect                          StatusEffect;                                              // 0x00E4(0x000B) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_P5FY[0x1];                                     // 0x00EF(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              Duration;                                                  // 0x00F0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bDoesTick;                                                 // 0x00F4(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_LQ1W[0x3];                                     // 0x00F5(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              TimeBetweenTicks;                                          // 0x00F8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_PVMZ[0x4];                                     // 0x00FC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FTigerNiagaraAttachment                     ActivatedNiagaraAttachment;                                // 0x0100(0x0048) (Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FTigerNiagaraAttachment                     NiagaraAttachment;                                         // 0x0148(0x0048) (Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<struct FTigerNiagaraAttachment>             AdditionalNiagaraAttachments;                              // 0x0190(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FTigerNiagaraAttachment                     DeactivatedNiagaraAttachment;                              // 0x01A0(0x0048) (Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	bool                                               bOnlySpawnBuffParticleOnLocalPlayer;                       // 0x01E8(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bAttachToMesh;                                             // 0x01E9(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_AWPP[0x2];                                     // 0x01EA(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FName                                       AttachPoint;                                               // 0x01EC(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bBuffParticleTypeAbsoluteRotation;                         // 0x01F4(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_X0JX[0x3];                                     // 0x01F5(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UParticleSystem*                             BuffParticleType;                                          // 0x01F8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bOnlySpawnActivatedParticleOnLocalPlayer;                  // 0x0200(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bAttachActivatedParticle;                                  // 0x0201(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bActivatedParticleTypeAbsoluteRotation;                    // 0x0202(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_QNVU[0x5];                                     // 0x0203(0x0005) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UParticleSystem*                             ActivatedParticleType;                                     // 0x0208(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bOnlySpawnDeactivatedParticleOnLocalPlayer;                // 0x0210(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bAttachDeactivatedParticle;                                // 0x0211(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bDeactivatedParticleTypeAbsoluteRotation;                  // 0x0212(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_IXC1[0x5];                                     // 0x0213(0x0005) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UParticleSystem*                             DeactivatedParticleType;                                   // 0x0218(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       ActivationMontageName;                                     // 0x0220(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               ActivatedSFX;                                              // 0x0228(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               DeactivatedSFX;                                            // 0x0230(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bStacks;                                                   // 0x0238(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bOnlyStackWithDifferentCasters;                            // 0x0239(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_0B5I[0x2];                                     // 0x023A(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                MaxStacks;                                                 // 0x023C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bKeepAfterDeath;                                           // 0x0240(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_67LL[0x3];                                     // 0x0241(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                RemoveBuffOnActions;                                       // 0x0244(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bShowOnUI;                                                 // 0x0248(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_0HJQ[0x7];                                     // 0x0249(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UTexture2D*                                  StatusImage;                                               // 0x0250(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	Tiger_ETigerBuffStatusType                         StatusType;                                                // 0x0258(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	Tiger_ETigerBuffProgressType                       ProgressType;                                              // 0x0259(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_NNWR[0x6];                                     // 0x025A(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UClass*                                      PostProcessEffect;                                         // 0x0260(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint64_t                                           PersistentTelemetryID;                                     // 0x0268(0x0008) (Edit, ZeroConstructor, EditConst, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerBuff");
		return ptr;
	}



	void OnDeactivated(class ATigerCharacter* InBuffOwner, class ATigerCharacter* InBuffCaster);
	void OnActivated(class ATigerCharacter* InBuffOwner, class ATigerCharacter* InBuffCaster);
	class UTigerBuffInstance* FindBuffInstance(class ATigerCharacter* InBuffOwner, class ATigerCharacter* InBuffCaster);
};

// Class Tiger.TigerBuffStun
// 0x0000 (FullSize[0x0270] - InheritedSize[0x0270])
class UTigerBuffStun : public UTigerBuff
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerBuffStun");
		return ptr;
	}



};

// Class Tiger.TigerBuffBlockAILogic
// 0x0000 (FullSize[0x0270] - InheritedSize[0x0270])
class UTigerBuffBlockAILogic : public UTigerBuff
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerBuffBlockAILogic");
		return ptr;
	}



};

// Class Tiger.TigerBuffImmobilize
// 0x0000 (FullSize[0x0270] - InheritedSize[0x0270])
class UTigerBuffImmobilize : public UTigerBuff
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerBuffImmobilize");
		return ptr;
	}



};

// Class Tiger.TigerBuffGround
// 0x0000 (FullSize[0x0270] - InheritedSize[0x0270])
class UTigerBuffGround : public UTigerBuff
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerBuffGround");
		return ptr;
	}



};

// Class Tiger.TigerBuffInvulnerable
// 0x0000 (FullSize[0x0270] - InheritedSize[0x0270])
class UTigerBuffInvulnerable : public UTigerBuff
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerBuffInvulnerable");
		return ptr;
	}



};

// Class Tiger.TigerBuffInvisible
// 0x0000 (FullSize[0x0270] - InheritedSize[0x0270])
class UTigerBuffInvisible : public UTigerBuff
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerBuffInvisible");
		return ptr;
	}



};

// Class Tiger.TigerBuffDisableClimbing
// 0x0000 (FullSize[0x0270] - InheritedSize[0x0270])
class UTigerBuffDisableClimbing : public UTigerBuff
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerBuffDisableClimbing");
		return ptr;
	}



};

// Class Tiger.TigerKeyTextureMapping
// 0x0050 (FullSize[0x0080] - InheritedSize[0x0030])
class UTigerKeyTextureMapping : public UDataAsset
{
public:
	TMap<struct FKey, class UTexture2D*>               KeyTextures;                                               // 0x0030(0x0050) (Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerKeyTextureMapping");
		return ptr;
	}



};

// Class Tiger.PatrolComponent
// 0x0000 (FullSize[0x00B0] - InheritedSize[0x00B0])
class UPatrolComponent : public UActorComponent
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.PatrolComponent");
		return ptr;
	}



};

// Class Tiger.TigerRebuildableActor
// 0x0018 (FullSize[0x0240] - InheritedSize[0x0228])
class ATigerRebuildableActor : public AActor
{
public:
	class USceneComponent*                             Root;                                                      // 0x0228(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class USceneComponent*>                     BuildCreatedComponents;                                    // 0x0230(0x0010) (ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerRebuildableActor");
		return ptr;
	}



	void OnRebuild();
	class USceneComponent* ConvertToBuildComponent(class USceneComponent* BlueprintCreatedComponent);
};

// Class Tiger.TigerActivatedObject
// 0x0038 (FullSize[0x0278] - InheritedSize[0x0240])
class ATigerActivatedObject : public ATigerRebuildableActor
{
public:
	class UStaticMeshComponent*                        BaseMesh;                                                  // 0x0240(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               ActivationAudioEvent;                                      // 0x0248(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bActivationAudioShouldPlay;                                // 0x0250(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bTriggerOnlyOnPlayers;                                     // 0x0251(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bUseAudioActivationRadius;                                 // 0x0252(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_VYKC[0x1];                                     // 0x0253(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              ActivationRadius;                                          // 0x0254(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              AudioFadeOutDuration;                                      // 0x0258(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class UShapeComponent>              WeakCharacterTrigger;                                      // 0x025C(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_8UAN[0x14];                                    // 0x0264(0x0014) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerActivatedObject");
		return ptr;
	}



	void SetCharacterTriggerComponent(class UShapeComponent* TriggerComponent);
	void OnObjectDeactivated();
	void OnObjectActivated();
	void OnEndCharacterOverlap(class ATigerCharacter* OverlappingCharacter, int TotalOverlapCount);
	void OnBeginCharacterOverlap(class ATigerCharacter* OverlappingCharacter, int TotalOverlapCount);
	void EndCharacterOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex);
	void BeginCharacterOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
};

// Class Tiger.TigerActivatedObjectSubsystem
// 0x0090 (FullSize[0x00C0] - InheritedSize[0x0030])
class UTigerActivatedObjectSubsystem : public UGameInstanceSubsystem
{
public:
	unsigned char                                      UnknownData_00NJ[0x90];                                    // 0x0030(0x0090) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerActivatedObjectSubsystem");
		return ptr;
	}



};

// Class Tiger.TigerCameraBehavior
// 0x00C0 (FullSize[0x00E8] - InheritedSize[0x0028])
class UTigerCameraBehavior : public UObject
{
public:
	class UTigerCameraPreset*                          CameraPreset;                                              // 0x0028(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_6132[0xB8];                                    // 0x0030(0x00B8) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerCameraBehavior");
		return ptr;
	}



};

// Class Tiger.TigerActiveCameraBehavior
// 0x0040 (FullSize[0x0128] - InheritedSize[0x00E8])
class UTigerActiveCameraBehavior : public UTigerCameraBehavior
{
public:
	unsigned char                                      UnknownData_R9DN[0x40];                                    // 0x00E8(0x0040) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerActiveCameraBehavior");
		return ptr;
	}



};

// Class Tiger.TigerAdditiveCameraBehavior
// 0x0040 (FullSize[0x0128] - InheritedSize[0x00E8])
class UTigerAdditiveCameraBehavior : public UTigerCameraBehavior
{
public:
	unsigned char                                      UnknownData_K7BX[0x40];                                    // 0x00E8(0x0040) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerAdditiveCameraBehavior");
		return ptr;
	}



};

// Class Tiger.TigerAIAwayFromSuspiciousService
// 0x00D0 (FullSize[0x0140] - InheritedSize[0x0070])
class UTigerAIAwayFromSuspiciousService : public UBTService
{
public:
	struct FBox                                        SearchFleeSpotBox;                                         // 0x0070(0x001C) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_KLFS[0x4];                                     // 0x008C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FBlackboardKeySelector                      FleePoint;                                                 // 0x0090(0x0028) (Edit, Protected, NativeAccessSpecifierProtected)
	struct FBlackboardKeySelector                      CurrentMasqueradeTarget;                                   // 0x00B8(0x0028) (Edit, Protected, NativeAccessSpecifierProtected)
	struct FBlackboardKeySelector                      WantsToReportPlayer;                                       // 0x00E0(0x0028) (Edit, Protected, NativeAccessSpecifierProtected)
	float                                              KeepFleeingFromSpecificPlayerRadiusSquared;                // 0x0108(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              BoxCenterDistanceFromNPCPosition;                          // 0x010C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint32_t                                           NumberOfTimesToRandomForAFleeSpot;                         // 0x0110(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bShowDebugFeatures;                                        // 0x0114(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_NZW0[0x3];                                     // 0x0115(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TWeakObjectPtr<class ATigerPlayer>                 PlayerFleeingFrom;                                         // 0x0118(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_BFAD[0x20];                                    // 0x0120(0x0020) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerAIAwayFromSuspiciousService");
		return ptr;
	}



};

// Class Tiger.TigerAiBarkTask
// 0x0008 (FullSize[0x0078] - InheritedSize[0x0070])
class UTigerAiBarkTask : public UBTTaskNode
{
public:
	struct FTigerNpcVoCategory                         BarkToPlay;                                                // 0x0070(0x0008) (Edit, NoDestructor, Protected, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerAiBarkTask");
		return ptr;
	}



};

// Class Tiger.TigerAiBaseController
// 0x0080 (FullSize[0x03B0] - InheritedSize[0x0330])
class ATigerAiBaseController : public AAIController
{
public:
	struct FVector                                     SpawnPoint;                                                // 0x0330(0x000C) (Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_CSBU[0x4];                                     // 0x033C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UTigerSightConfigAsset*                      SightConfigAsset;                                          // 0x0340(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_T8A7[0x68];                                    // 0x0348(0x0068) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerAiBaseController");
		return ptr;
	}



	void UnregisterMovementTicket();
	float PlayAnimationUnreliable(class UAnimMontage* Animation);
	float PlayAnimationFromNameUnreliable(const struct FName& Animation);
	bool HasPathToLocation(const struct FVector& Location);
	bool GetSightProperties(Tiger_ETigerNPCType NPCType, struct FTigerSightConfigProperties* OutSightProps);
	class UAISenseConfig_Sight* GetSightConfig();
	class ATigerBaseNPC* GetBaseNpcPawn();
	bool FindPointOnAiNavMeshWithinExtent(const struct FVector& Origin, const struct FVector& Extent, struct FVector* OutLocation);
};

// Class Tiger.TigerAIBenchmarkDiablerizeTask
// 0x0010 (FullSize[0x00A8] - InheritedSize[0x0098])
class UTigerAIBenchmarkDiablerizeTask : public UBTTask_BlackboardBase
{
public:
	float                                              MaximumDiablerizeDistance;                                 // 0x0098(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_HOQT[0xC];                                     // 0x009C(0x000C) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerAIBenchmarkDiablerizeTask");
		return ptr;
	}



};

// Class Tiger.TigerAiBenchmarkDisciplineTask
// 0x0040 (FullSize[0x00D8] - InheritedSize[0x0098])
class UTigerAiBenchmarkDisciplineTask : public UBTTask_BlackboardBase
{
public:
	class ATigerLocalAIControllerBase*                 AIControllerBase;                                          // 0x0098(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ATigerPlayerController*                      TigerPlayerController;                                     // 0x00A0(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ATigerCharacter*                             AiTigerCharacter;                                          // 0x00A8(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ATigerPlayer*                                TigerPlayer;                                               // 0x00B0(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTigerDisciplineComponent*                   DisciplineComponent;                                       // 0x00B8(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTigerDisciplineBase*                        CurrentDisciplineBase;                                     // 0x00C0(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_S3QJ[0x10];                                    // 0x00C8(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerAiBenchmarkDisciplineTask");
		return ptr;
	}



};

// Class Tiger.TigerAIBenchmarkFindPlayerTask
// 0x0020 (FullSize[0x00B8] - InheritedSize[0x0098])
class UTigerAIBenchmarkFindPlayerTask : public UBTTask_BlackboardBase
{
public:
	bool                                               bUseHeightenedSensesSearchRadius;                          // 0x0098(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_A7FI[0x3];                                     // 0x0099(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              CustomSearchSphereRadius;                                  // 0x009C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               bDrawSearchSphere;                                         // 0x00A0(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_ZDUP[0x3];                                     // 0x00A1(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              MaxVerticalPositionOffset;                                 // 0x00A4(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              RaycastDistance;                                           // 0x00A8(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int                                                SearchLowLevelThreshold;                                   // 0x00AC(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              SearchLowHealthPercentageThreshold;                        // 0x00B0(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_GH4G[0x4];                                     // 0x00B4(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerAIBenchmarkFindPlayerTask");
		return ptr;
	}



};

// Class Tiger.TigerAiCalculateFiringLocationsScoreService
// 0x0030 (FullSize[0x00A0] - InheritedSize[0x0070])
class UTigerAiCalculateFiringLocationsScoreService : public UBTService
{
public:
	struct FBlackboardKeySelector                      TargetKey;                                                 // 0x0070(0x0028) (Edit, Protected, NativeAccessSpecifierProtected)
	bool                                               bDebugDrawLocations;                                       // 0x0098(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bDebugDrawSweepChecks;                                     // 0x0099(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bDebugDrawInvalidLocationReason;                           // 0x009A(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_Y4FK[0x5];                                     // 0x009B(0x0005) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerAiCalculateFiringLocationsScoreService");
		return ptr;
	}



};

// Class Tiger.TigerAiCanCrouch
// 0x0008 (FullSize[0x0070] - InheritedSize[0x0068])
class UTigerAiCanCrouch : public UBTDecorator
{
public:
	float                                              MinCrouchDistanceBuffer;                                   // 0x0068(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_K9JR[0x4];                                     // 0x006C(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerAiCanCrouch");
		return ptr;
	}



};

// Class Tiger.TigerAiCanFleeDecorator
// 0x0000 (FullSize[0x0068] - InheritedSize[0x0068])
class UTigerAiCanFleeDecorator : public UBTDecorator
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerAiCanFleeDecorator");
		return ptr;
	}



};

// Class Tiger.TigerAICanInvestigateDecorator
// 0x0028 (FullSize[0x0090] - InheritedSize[0x0068])
class UTigerAICanInvestigateDecorator : public UBTDecorator
{
public:
	struct FBlackboardKeySelector                      CurrentSuspiciousTarget;                                   // 0x0068(0x0028) (Edit, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerAICanInvestigateDecorator");
		return ptr;
	}



};

// Class Tiger.TigerAiCanUseWeaponPowerDecorator
// 0x0008 (FullSize[0x0070] - InheritedSize[0x0068])
class UTigerAiCanUseWeaponPowerDecorator : public UBTDecorator
{
public:
	bool                                               bConditionInvertedOnTick;                                  // 0x0068(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_XZUM[0x7];                                     // 0x0069(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerAiCanUseWeaponPowerDecorator");
		return ptr;
	}



};

// Class Tiger.TigerAICAPBase
// 0x0030 (FullSize[0x0258] - InheritedSize[0x0228])
class ATigerAICAPBase : public AActor
{
public:
	TArray<class ATigerNPC*>                           NPCUsingCAP;                                               // 0x0228(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<class UShapeComponent*>                     Colliders;                                                 // 0x0238(0x0010) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	float                                              Cooldown;                                                  // 0x0248(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                NumberOfSlots;                                             // 0x024C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bShouldAdjustTransform;                                    // 0x0250(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bAllowExternalProps;                                       // 0x0251(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_GMU4[0x6];                                     // 0x0252(0x0006) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerAICAPBase");
		return ptr;
	}



	bool OnCheckNPCEligibility(class ATigerNPC* NPC);
	bool CapIsEmpty();
	void BeginOverlappedActor(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
};

// Class Tiger.TigerAICAP
// 0x0010 (FullSize[0x0268] - InheritedSize[0x0258])
class ATigerAICAP : public ATigerAICAPBase
{
public:
	TArray<class UTigerAICommandBase*>                 Commands;                                                  // 0x0258(0x0010) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerAICAP");
		return ptr;
	}



};

// Class Tiger.TigerAiCheckCanDiablerize
// 0x0008 (FullSize[0x0070] - InheritedSize[0x0068])
class UTigerAiCheckCanDiablerize : public UBTDecorator
{
public:
	bool                                               bConditionInvertedOnTick;                                  // 0x0068(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_BOIY[0x7];                                     // 0x0069(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerAiCheckCanDiablerize");
		return ptr;
	}



};

// Class Tiger.TigerAiCheckIsTargetDowned
// 0x0008 (FullSize[0x0070] - InheritedSize[0x0068])
class UTigerAiCheckIsTargetDowned : public UBTDecorator
{
public:
	bool                                               bConditionInvertedOnTick;                                  // 0x0068(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_QHT0[0x7];                                     // 0x0069(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerAiCheckIsTargetDowned");
		return ptr;
	}



};

// Class Tiger.TigerAIClearMasqueradeTargetTask
// 0x0000 (FullSize[0x0070] - InheritedSize[0x0070])
class UTigerAIClearMasqueradeTargetTask : public UBTTaskNode
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerAIClearMasqueradeTargetTask");
		return ptr;
	}



};

// Class Tiger.TigerAICommandBase
// 0x0018 (FullSize[0x0040] - InheritedSize[0x0028])
class UTigerAICommandBase : public UObject
{
public:
	class ATigerAIController*                          Owner;                                                     // 0x0028(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AActor*                                      WorldReferenceActor;                                       // 0x0030(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              FailSafeMaxTime;                                           // 0x0038(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_W1SF[0x4];                                     // 0x003C(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerAICommandBase");
		return ptr;
	}



	void DeactivateCommand(bool bHasFinished);
};

// Class Tiger.TigerAICommandAbandonCAP
// 0x0008 (FullSize[0x0048] - InheritedSize[0x0040])
class UTigerAICommandAbandonCAP : public UTigerAICommandBase
{
public:
	float                                              ChanceToAbandonCAP;                                        // 0x0040(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bShouldFindSpline;                                         // 0x0044(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_J3HW[0x3];                                     // 0x0045(0x0003) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerAICommandAbandonCAP");
		return ptr;
	}



};

// Class Tiger.TigerAICommandComponent
// 0x0090 (FullSize[0x0140] - InheritedSize[0x00B0])
class UTigerAICommandComponent : public UActorComponent
{
public:
	unsigned char                                      UnknownData_CE09[0x40];                                    // 0x00B0(0x0040) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class ATigerAiPermanentCap*                        PermanentCap;                                              // 0x00F0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ATigerNPC*                                   Owner;                                                     // 0x00F8(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTigerAICommandBase*                         ActiveCommand;                                             // 0x0100(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAnimMontage*                                LastPlayedCapMontage;                                      // 0x0108(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FTigerCommandQueue                          CommandQueue;                                              // 0x0110(0x0010) (Protected, NativeAccessSpecifierProtected)
	struct FName                                       ContextBaseIdle;                                           // 0x0120(0x0008) (BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_KLVO[0x18];                                    // 0x0128(0x0018) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerAICommandComponent");
		return ptr;
	}



	void SetContextIdle(const struct FName& ContextName);
	void InterruptAndClearCommands();
	class UTigerAICommandBase* AddCommand(class UTigerAICommandBase* Command, class ATigerAICAPBase* CommandGiver);
};

// Class Tiger.TigerAICommandContextualAction
// 0x0040 (FullSize[0x0080] - InheritedSize[0x0040])
class UTigerAICommandContextualAction : public UTigerAICommandBase
{
public:
	TArray<struct FTigerContextualAnimationWrapper>    ContextualAnimations;                                      // 0x0040(0x0010) (Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	float                                              WaitTimeBefore;                                            // 0x0050(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              WaitTimeBeforeRandomDeviation;                             // 0x0054(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              WaitTimeAfter;                                             // 0x0058(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              WaitTimeAfterRandomDeviation;                              // 0x005C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_4JT3[0x20];                                    // 0x0060(0x0020) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerAICommandContextualAction");
		return ptr;
	}



};

// Class Tiger.TigerAICommandMoveTo
// 0x0028 (FullSize[0x0068] - InheritedSize[0x0040])
class UTigerAICommandMoveTo : public UTigerAICommandBase
{
public:
	struct FTigerAIMoveToLocationData                  MoveToData;                                                // 0x0040(0x0018) (Edit, BlueprintVisible, NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_3IC8[0x10];                                    // 0x0058(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerAICommandMoveTo");
		return ptr;
	}



};

// Class Tiger.TigerAICommandPlayerProximityWait
// 0x0008 (FullSize[0x0048] - InheritedSize[0x0040])
class UTigerAICommandPlayerProximityWait : public UTigerAICommandBase
{
public:
	float                                              SquaredPlayerProximityRadiusRequired;                      // 0x0040(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_8YIV[0x4];                                     // 0x0044(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerAICommandPlayerProximityWait");
		return ptr;
	}



};

// Class Tiger.TigerAICommandWaitForOrder
// 0x0008 (FullSize[0x0048] - InheritedSize[0x0040])
class UTigerAICommandWaitForOrder : public UTigerAICommandBase
{
public:
	unsigned char                                      UnknownData_0IXS[0x8];                                     // 0x0040(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerAICommandWaitForOrder");
		return ptr;
	}



};

// Class Tiger.TigerAIController
// 0x00E8 (FullSize[0x0498] - InheritedSize[0x03B0])
class ATigerAIController : public ATigerAiBaseController
{
public:
	struct FName                                       LureTargetKeyName;                                         // 0x03B0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       CurrentMasqueradeTargetKeyName;                            // 0x03B8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       TargetPositionKeyName;                                     // 0x03C0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       MasqueradeBreachTargetKey;                                 // 0x03C8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       BehaviorIsActiveKeyName;                                   // 0x03D0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       SpawnPointKeyName;                                         // 0x03D8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       ActiveCAPKeyName;                                          // 0x03E0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBehaviorTree*                               LureBehaviorTree;                                          // 0x03E8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBehaviorTree*                               BloodDrainedBehaviorTree;                                  // 0x03F0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBehaviorTree*                               EmptyBehaviorTree;                                         // 0x03F8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTigerFearValueAsset*                        FearValueAsset;                                            // 0x0400(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              OutOfCombatHealthRegenerationDelay;                        // 0x0408(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              OutOfCombatHealthRegenerationTickInterval;                 // 0x040C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              OutOfCombatTickHealthPercentage;                           // 0x0410(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              TimeWhenEnteredBloodDrainedState;                          // 0x0414(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              CheckForPlayerWeaponsInterval;                             // 0x0418(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              CheckForPlayerWeaponsDeviation;                            // 0x041C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              BaseThreatRadiusForEquippedRanged;                         // 0x0420(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              BaseThreatRadiusForEquippedMelee;                          // 0x0424(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              FearValue;                                                 // 0x0428(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              MaxFearValue;                                              // 0x042C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              MinCrouchDistanceFromPlayer;                               // 0x0430(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              ChanceToFleeWhenEnteringThreatenedState;                   // 0x0434(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_YQRZ[0x30];                                    // 0x0438(0x0030) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UTigerNpcMovementRestrictionBoundsData*      MovementRestrictionBoundsData;                             // 0x0468(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTigerNpcMovementRestrictionBoundsData*      TargetMovementRestrictionBoundsData;                       // 0x0470(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_3EFZ[0x20];                                    // 0x0478(0x0020) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerAIController");
		return ptr;
	}



	void SetupData(Tiger_ETigerNPCType InNPCType);
	void SetNewReactionData(const struct FTigerNpcReactionEvent& ReactionEvent);
	struct FTigerNpcReactionEvent SetLastReactionData();
	void SetFearValue(float InFearValue);
	void SetCurrentMasqueradeTarget(class UBlackboardComponent* BBComp, class ATigerCharacter* InLookAtTarget);
	void RunDefaultBehavior();
	void RequestInvestigationTicket(class ATigerPlayer* TigerPlayer);
	bool IsReacting();
	class ATigerNPC* GetTigerPawn();
	float GetMaxFearValue();
	float GetFearValue();
	float GetFearPercentage();
	Tiger_ETigerAIMasqueradeState GetCurrentBehaviorState();
	class ATigerAICAPBase* GetActiveCAP();
	void ClearCurrentMasqueradeTarget(class UBlackboardComponent* BBComp);
	void CancelLureBehavior();
	void AdjustFearValue(float Adjustment);
};

// Class Tiger.TigerAiMovementBudgetAsset
// 0x0050 (FullSize[0x0080] - InheritedSize[0x0030])
class UTigerAiMovementBudgetAsset : public UDataAsset
{
public:
	TMap<struct FName, struct FTigerAiMovementBudget>  MovementBudgets;                                           // 0x0030(0x0050) (Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerAiMovementBudgetAsset");
		return ptr;
	}



};

// Class Tiger.TigerAICoordinator
// 0x0340 (FullSize[0x03F0] - InheritedSize[0x00B0])
class UTigerAICoordinator : public UActorComponent
{
public:
	float                                              SprintTimeUntilReport;                                     // 0x00B0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ClimbTimeUntilReport;                                      // 0x00B4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              AirTimeUntilReport;                                        // 0x00B8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SuspicionStateTime;                                        // 0x00BC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ThreatStateTime;                                           // 0x00C0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SuspiciousStateEscapeRadiusSquared;                        // 0x00C4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ThreatenedStateEscapeRadiusSquared;                        // 0x00C8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MakeNearbyNPCsSuspiciousRadius;                            // 0x00CC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              FearValueDecreasePerSecond;                                // 0x00D0(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              CrimeActionCooldownDistance;                               // 0x00D4(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_VC1Q[0x4];                                     // 0x00D8(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              CrimeActionMasqueradePointThreshold;                       // 0x00DC(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              PatrollingHelicopterEventRadius;                           // 0x00E0(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              PatrollingHelicopterLowestResponseHeight;                  // 0x00E4(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              PatrollingHelicopterEventTimeOut;                          // 0x00E8(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              PatrollingHelicopterTimeBetweenGunfireEventPositionUpdate; // 0x00EC(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              TimeInSmokeUntilRemoval;                                   // 0x00F0(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bUseMovementTickets;                                       // 0x00F4(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_5HYL[0x3];                                     // 0x00F5(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UTigerAiMovementBudgetAsset*                 MovementBudgetAsset;                                       // 0x00F8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bPatrollingHelicotpersAreActive;                           // 0x0100(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_1OT6[0x97];                                    // 0x0101(0x0097) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class ATigerEntityPatrollingHelicopter*>    EntityPatrollingHelicopters;                               // 0x0198(0x0010) (ZeroConstructor, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_F2SW[0x80];                                    // 0x01A8(0x0080) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class UTigerAiEntityPlatoon*>               EntityPlatoons;                                            // 0x0228(0x0010) (ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<class UTigerAiSquad*>                       Squads;                                                    // 0x0238(0x0010) (ZeroConstructor, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_CLPW[0xA0];                                    // 0x0248(0x00A0) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class ATigerPlayerGrid*                            PlayerGrid;                                                // 0x02E8(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_84B3[0xC8];                                    // 0x02F0(0x00C8) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FTigerPlayerActionProcessData>       DelayedPlayerActionProcesses;                              // 0x03B8(0x0010) (ZeroConstructor, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_NGRW[0x28];                                    // 0x03C8(0x0028) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerAICoordinator");
		return ptr;
	}



	void SetNPCSightModifier(float Modifier);
	void SetEnableAICoordinator(bool bEnabled);
	void CacheFearValueThresholds(class UTigerFearValueAsset* CivFearValueAsset, class UTigerFearValueAsset* PolFearValueAsset);
};

// Class Tiger.TigerAiDisciplineTaskBase
// 0x0030 (FullSize[0x00C8] - InheritedSize[0x0098])
class UTigerAiDisciplineTaskBase : public UBTTask_BlackboardBase
{
public:
	class ATigerLocalAIController*                     LocalAIController;                                         // 0x0098(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ATigerCharacter*                             AiTigerCharacter;                                          // 0x00A0(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTigerDisciplineComponent*                   DisciplineComponent;                                       // 0x00A8(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTigerDisciplineBase*                        CurrentDisciplineBase;                                     // 0x00B0(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_0GZJ[0x10];                                    // 0x00B8(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerAiDisciplineTaskBase");
		return ptr;
	}



};

// Class Tiger.TigerAiEntityMovementModeService
// 0x0058 (FullSize[0x00C8] - InheritedSize[0x0070])
class UTigerAiEntityMovementModeService : public UBTService
{
public:
	struct FBlackboardKeySelector                      TargetLocationKey;                                         // 0x0070(0x0028) (Edit, NativeAccessSpecifierPublic)
	struct FBlackboardKeySelector                      bCanShootKey;                                              // 0x0098(0x0028) (Edit, NativeAccessSpecifierPublic)
	float                                              StartSprintDistanceBuffer;                                 // 0x00C0(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_UO5B[0x4];                                     // 0x00C4(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerAiEntityMovementModeService");
		return ptr;
	}



};

// Class Tiger.TigerAiEntityPlatoon
// 0x0030 (FullSize[0x0058] - InheritedSize[0x0028])
class UTigerAiEntityPlatoon : public UObject
{
public:
	unsigned char                                      UnknownData_Q0O2[0x30];                                    // 0x0028(0x0030) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerAiEntityPlatoon");
		return ptr;
	}



};

// Class Tiger.TigerAIEntityReactPlayersService
// 0x0030 (FullSize[0x00A0] - InheritedSize[0x0070])
class UTigerAIEntityReactPlayersService : public UBTService
{
public:
	struct FBlackboardKeySelector                      SuspiciousTarget;                                          // 0x0070(0x0028) (Edit, Protected, NativeAccessSpecifierProtected)
	float                                              ThresholdDistanceSquared;                                  // 0x0098(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_RVV4[0x4];                                     // 0x009C(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerAIEntityReactPlayersService");
		return ptr;
	}



};

// Class Tiger.TigerAiFindFiringLocation
// 0x00A8 (FullSize[0x0118] - InheritedSize[0x0070])
class UTigerAiFindFiringLocation : public UBTTaskNode
{
public:
	struct FBlackboardKeySelector                      TargetKey;                                                 // 0x0070(0x0028) (Edit, Protected, NativeAccessSpecifierProtected)
	struct FBlackboardKeySelector                      FiringLocationKey;                                         // 0x0098(0x0028) (Edit, Protected, NativeAccessSpecifierProtected)
	struct FBlackboardKeySelector                      FiringLocationIndexKey;                                    // 0x00C0(0x0028) (Edit, Protected, NativeAccessSpecifierProtected)
	struct FBlackboardKeySelector                      bCanShootKey;                                              // 0x00E8(0x0028) (Edit, Protected, NativeAccessSpecifierProtected)
	float                                              ClaimedLocationDuration;                                   // 0x0110(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bDebugDraw;                                                // 0x0114(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_8DA1[0x3];                                     // 0x0115(0x0003) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerAiFindFiringLocation");
		return ptr;
	}



};

// Class Tiger.TigerAIFireAtActorTask
// 0x0050 (FullSize[0x00E8] - InheritedSize[0x0098])
class UTigerAIFireAtActorTask : public UBTTask_BlackboardBase
{
public:
	struct FBlackboardKeySelector                      TargetToShootActorKey;                                     // 0x0098(0x0028) (Edit, NativeAccessSpecifierPublic)
	struct FBlackboardKeySelector                      CanShootKey;                                               // 0x00C0(0x0028) (Edit, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerAIFireAtActorTask");
		return ptr;
	}



};

// Class Tiger.TigerAIFleeFromThreatService
// 0x00D0 (FullSize[0x0140] - InheritedSize[0x0070])
class UTigerAIFleeFromThreatService : public UBTService
{
public:
	struct FBox                                        SearchFleeSpotBox;                                         // 0x0070(0x001C) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_8DVS[0x4];                                     // 0x008C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FBlackboardKeySelector                      FleePoint;                                                 // 0x0090(0x0028) (Edit, Protected, NativeAccessSpecifierProtected)
	struct FBlackboardKeySelector                      ClosestThreatPosition;                                     // 0x00B8(0x0028) (Edit, Protected, NativeAccessSpecifierProtected)
	struct FBlackboardKeySelector                      CurrentMasqueradeTarget;                                   // 0x00E0(0x0028) (Edit, Protected, NativeAccessSpecifierProtected)
	float                                              KeepFleeingFromSpecificPlayerRadiusSquared;                // 0x0108(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              BoxCenterDistanceFromNPCPosition;                          // 0x010C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bShowDebugFeatures;                                        // 0x0110(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_OUHU[0x3];                                     // 0x0111(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TWeakObjectPtr<class ATigerPlayer>                 PlayerFleeingFrom;                                         // 0x0114(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_2QFC[0x24];                                    // 0x011C(0x0024) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerAIFleeFromThreatService");
		return ptr;
	}



};

// Class Tiger.TigerAIGetSuspectTargetService
// 0x0058 (FullSize[0x00C8] - InheritedSize[0x0070])
class UTigerAIGetSuspectTargetService : public UBTService
{
public:
	struct FBlackboardKeySelector                      SuspectPosition;                                           // 0x0070(0x0028) (Edit, NativeAccessSpecifierPrivate)
	struct FBlackboardKeySelector                      CurrentSuspectTarget;                                      // 0x0098(0x0028) (Edit, NativeAccessSpecifierPrivate)
	bool                                               bShowDebugFeatures;                                        // 0x00C0(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_X6N4[0x7];                                     // 0x00C1(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerAIGetSuspectTargetService");
		return ptr;
	}



};

// Class Tiger.TigerAiGiveOrderToSquad
// 0x0008 (FullSize[0x0078] - InheritedSize[0x0070])
class UTigerAiGiveOrderToSquad : public UBTTaskNode
{
public:
	Tiger_ETigerNpcSquadOrder                          OrderToGive;                                               // 0x0070(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_I3IX[0x7];                                     // 0x0071(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerAiGiveOrderToSquad");
		return ptr;
	}



};

// Class Tiger.TigerAiSpawningCap
// 0x0038 (FullSize[0x0290] - InheritedSize[0x0258])
class ATigerAiSpawningCap : public ATigerAICAPBase
{
public:
	class USceneComponent*                             SceneComp;                                                 // 0x0258(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UChildActorComponent*                        NPCSpawner;                                                // 0x0260(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FName                                       SpawningGroup;                                             // 0x0268(0x0008) (Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FName                                       SpawnedNpcMovementGroup;                                   // 0x0270(0x0008) (Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGuid                                       SpawningSubGroupId;                                        // 0x0278(0x0010) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_5N9K[0x8];                                     // 0x0288(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerAiSpawningCap");
		return ptr;
	}



};

// Class Tiger.TigerAIGroupCAP
// 0x0010 (FullSize[0x02A0] - InheritedSize[0x0290])
class ATigerAIGroupCAP : public ATigerAiSpawningCap
{
public:
	TArray<struct FTigerAiGroupCapSlot>                CapSlots;                                                  // 0x0290(0x0010) (Edit, BlueprintVisible, ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerAIGroupCAP");
		return ptr;
	}



	bool TriggerNextCommandForSlot(class ATigerNPC* NPC, int CapSlotIndex);
	bool OnRequestNewCommands(class ATigerNPC* NPC);
	bool OnIsAvailableCheck();
	bool IsSlotAvailable(int Index);
	int GetSlotAssignedToNPC(class ATigerNPC* NPC);
	class UTigerAICommandBase* GetNextCommand(struct FTigerAiGroupCapSlot* CapSlot, int CapSlotIndex);
	void CapCommandStarted(int CapSlotIndex, int CommandIndex);
	bool AssignNpcToSlot(int SlotIndex, class ATigerNPC* NPC);
};

// Class Tiger.TigerAiHasCurrentSquadOrder
// 0x0008 (FullSize[0x0070] - InheritedSize[0x0068])
class UTigerAiHasCurrentSquadOrder : public UBTDecorator
{
public:
	Tiger_ETigerNpcSquadOrder                          SquadOrderToCompare;                                       // 0x0068(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_3VEF[0x7];                                     // 0x0069(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerAiHasCurrentSquadOrder");
		return ptr;
	}



};

// Class Tiger.TigerAiHasPlayerInSightDecorator
// 0x0000 (FullSize[0x0068] - InheritedSize[0x0068])
class UTigerAiHasPlayerInSightDecorator : public UBTDecorator
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerAiHasPlayerInSightDecorator");
		return ptr;
	}



};

// Class Tiger.TigerAiIsHeightElevationBlockingVision
// 0x0058 (FullSize[0x00C0] - InheritedSize[0x0068])
class UTigerAiIsHeightElevationBlockingVision : public UBTDecorator
{
public:
	struct FBlackboardKeySelector                      TargetLocationKey;                                         // 0x0068(0x0028) (Edit, Protected, NativeAccessSpecifierProtected)
	struct FBlackboardKeySelector                      bCanSeeTargetKey;                                          // 0x0090(0x0028) (Edit, Protected, NativeAccessSpecifierProtected)
	float                                              MaxVerticalAngleToTarget;                                  // 0x00B8(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              LargeEnoughHeightDifference;                               // 0x00BC(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerAiIsHeightElevationBlockingVision");
		return ptr;
	}



};

// Class Tiger.TigerAiIsInMovementRestrictionBoundsArea
// 0x0008 (FullSize[0x0070] - InheritedSize[0x0068])
class UTigerAiIsInMovementRestrictionBoundsArea : public UBTDecorator
{
public:
	Tiger_ETigerNpcMovementRestrictionBoundsArea       AreaToCompare;                                             // 0x0068(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_0RG7[0x7];                                     // 0x0069(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerAiIsInMovementRestrictionBoundsArea");
		return ptr;
	}



};

// Class Tiger.TigerAiIsMovingOutOfBounds
// 0x0030 (FullSize[0x0098] - InheritedSize[0x0068])
class UTigerAiIsMovingOutOfBounds : public UBTDecorator
{
public:
	struct FBlackboardKeySelector                      TargetPositionKey;                                         // 0x0068(0x0028) (Edit, Protected, NativeAccessSpecifierProtected)
	float                                              OutOfBoundsDistance;                                       // 0x0090(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_53JW[0x4];                                     // 0x0094(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerAiIsMovingOutOfBounds");
		return ptr;
	}



};

// Class Tiger.TigerAIIsReactingDecorator
// 0x0000 (FullSize[0x0068] - InheritedSize[0x0068])
class UTigerAIIsReactingDecorator : public UBTDecorator
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerAIIsReactingDecorator");
		return ptr;
	}



};

// Class Tiger.TigerAiIsSquadCaptain
// 0x0000 (FullSize[0x0068] - InheritedSize[0x0068])
class UTigerAiIsSquadCaptain : public UBTDecorator
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerAiIsSquadCaptain");
		return ptr;
	}



};

// Class Tiger.TigerAiJudgeController
// 0x0040 (FullSize[0x03F0] - InheritedSize[0x03B0])
class ATigerAiJudgeController : public ATigerAiBaseController
{
public:
	class UTigerAiJudgeSmComponent*                    JudgeStateMachineComp;                                     // 0x03B0(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTigerSightConfigProperties                 StandardSightProperties;                                   // 0x03B8(0x001C) (Edit, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FTigerSightConfigProperties                 CombatSightProperties;                                     // 0x03D4(0x001C) (Edit, NoDestructor, Protected, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerAiJudgeController");
		return ptr;
	}



	void PlayTimedAnimationTriggers(TArray<struct FTigerTimedAnimationTrigger> AnimationTriggers);
	class ATigerJudge* GetJudgePawn();
};

// Class Tiger.TigerAiJudgeSmComponent
// 0x00C8 (FullSize[0x0178] - InheritedSize[0x00B0])
class UTigerAiJudgeSmComponent : public UActorComponent
{
public:
	TArray<class ATigerPlayer*>                        CurrentlyPerceivedPlayersBySight;                          // 0x00B0(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<class ATigerPlayer*>                        BloodhuntedPlayersWithinCombatRadius;                      // 0x00C0(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	class UClass*                                      StartingState;                                             // 0x00D0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UClass*                                      DownedState;                                               // 0x00D8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UClass*                                      FeedingState;                                              // 0x00E0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTigerJudgeBaseState*                        ActiveState;                                               // 0x00E8(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TMap<class UClass*, class UTigerJudgeBaseState*>   InstancedStates;                                           // 0x00F0(0x0050) (Protected, NativeAccessSpecifierProtected)
	float                                              CombatRadiusSq;                                            // 0x0140(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bIsSeeingAnyBloodhuntedPlayer;                             // 0x0144(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_NLNE[0x33];                                    // 0x0145(0x0033) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerAiJudgeSmComponent");
		return ptr;
	}



	void SwitchToState(class UClass* NewStateType);
	void AddMasqueradePointsToSeenPlayers(float AdjustAmount, float TimeBetweenAddingPoints);
};

// Class Tiger.TigerAimingCameraBehavior
// 0x0040 (FullSize[0x0168] - InheritedSize[0x0128])
class UTigerAimingCameraBehavior : public UTigerActiveCameraBehavior
{
public:
	unsigned char                                      UnknownData_IGQO[0x18];                                    // 0x0128(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              MaxWorldDistanceForFindingTarget;                          // 0x0140(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              AimAssistStrengthMultiplier;                               // 0x0144(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              PassiveAimAssistStrength;                                  // 0x0148(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              YawRotationMultiplier;                                     // 0x014C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              PitchRotationMultiplier;                                   // 0x0150(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              MaximumFollowDegrees;                                      // 0x0154(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              AimAssistTargetLeadAmount;                                 // 0x0158(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              AimAssistStrengthByVelocityMultiplier;                     // 0x015C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_UPX2[0x8];                                     // 0x0160(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerAimingCameraBehavior");
		return ptr;
	}



};

// Class Tiger.TigerAiMoveAsyncTask
// 0x0008 (FullSize[0x00A0] - InheritedSize[0x0098])
class UTigerAiMoveAsyncTask : public UBTTask_BlackboardBase
{
public:
	float                                              AcceptableRadiusSq;                                        // 0x0098(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ObservedBlackboardValueToleranceSq;                        // 0x009C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerAiMoveAsyncTask");
		return ptr;
	}



};

// Class Tiger.TigerAiMoveToTask
// 0x0008 (FullSize[0x00B8] - InheritedSize[0x00B0])
class UTigerAiMoveToTask : public UBTTask_MoveTo
{
public:
	bool                                               bResetMoveTargetOnEnd;                                     // 0x00B0(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_OOT4[0x7];                                     // 0x00B1(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerAiMoveToTask");
		return ptr;
	}



};

// Class Tiger.TigerAiPathToTargetService
// 0x00E8 (FullSize[0x0158] - InheritedSize[0x0070])
class UTigerAiPathToTargetService : public UBTService
{
public:
	struct FBlackboardKeySelector                      TargetLocationKey;                                         // 0x0070(0x0028) (Edit, NativeAccessSpecifierPublic)
	struct FBlackboardKeySelector                      SuitableEdgeLocationKey;                                   // 0x0098(0x0028) (Edit, NativeAccessSpecifierPublic)
	struct FBlackboardKeySelector                      IsTargetOutOfBoundsKey;                                    // 0x00C0(0x0028) (Edit, NativeAccessSpecifierPublic)
	struct FBlackboardKeySelector                      HasPathToTargetKey;                                        // 0x00E8(0x0028) (Edit, NativeAccessSpecifierPublic)
	struct FBlackboardKeySelector                      IsPathOutOfBoundsKey;                                      // 0x0110(0x0028) (Edit, NativeAccessSpecifierPublic)
	float                                              OutOfBoundsDistance;                                       // 0x0138(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              HeightDifferenceOutOfBounds;                               // 0x013C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bDebugDraw;                                                // 0x0140(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_CX37[0x17];                                    // 0x0141(0x0017) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerAiPathToTargetService");
		return ptr;
	}



};

// Class Tiger.TigerAIPerceptionSystem
// 0x0000 (FullSize[0x0130] - InheritedSize[0x0130])
class UTigerAIPerceptionSystem : public UAIPerceptionSystem
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerAIPerceptionSystem");
		return ptr;
	}



};

// Class Tiger.TigerAiPerfBenchUseWeapon
// 0x0020 (FullSize[0x0090] - InheritedSize[0x0070])
class UTigerAiPerfBenchUseWeapon : public UBTTaskNode
{
public:
	unsigned char                                      UnknownData_M351[0x10];                                    // 0x0070(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class ATigerLocalAIControllerBase*                 LocalAIController;                                         // 0x0080(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class ATigerPlayerController*                      PlayerController;                                          // 0x0088(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerAiPerfBenchUseWeapon");
		return ptr;
	}



};

// Class Tiger.TigerAiPermanentCap
// 0x0038 (FullSize[0x02C8] - InheritedSize[0x0290])
class ATigerAiPermanentCap : public ATigerAiSpawningCap
{
public:
	TArray<class UTigerAICommandBase*>                 Commands;                                                  // 0x0290(0x0010) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	Tiger_ETigerCivilianEmotionalState                 EmotionalState;                                            // 0x02A0(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_PJT7[0x3];                                     // 0x02A1(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FName                                       CapContextBase;                                            // 0x02A4(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                CapContextStartingIndex;                                   // 0x02AC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTigerNPCAsset*                              NpcAssetToSpawn;                                           // 0x02B0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                LoopingStartIndex;                                         // 0x02B8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class ATigerNPC>                    PermanentNpc;                                              // 0x02BC(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_698U[0x4];                                     // 0x02C4(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerAiPermanentCap");
		return ptr;
	}



};

// Class Tiger.TigerAIPetClearPathToMaster
// 0x0000 (FullSize[0x0070] - InheritedSize[0x0070])
class UTigerAIPetClearPathToMaster : public UBTTaskNode
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerAIPetClearPathToMaster");
		return ptr;
	}



};

// Class Tiger.TigerAIPetComponent
// 0x0040 (FullSize[0x00F0] - InheritedSize[0x00B0])
class UTigerAIPetComponent : public UActorComponent
{
public:
	unsigned char                                      UnknownData_EB4V[0x40];                                    // 0x00B0(0x0040) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerAIPetComponent");
		return ptr;
	}



	bool HasGotEndPoint();
	TArray<struct FVector> GetMasterPlayersStoredPath();
	struct FVector GetEndPoint();
};

// Class Tiger.TigerAIPetFindEndOfMastersPath
// 0x0028 (FullSize[0x0098] - InheritedSize[0x0070])
class UTigerAIPetFindEndOfMastersPath : public UBTTaskNode
{
public:
	struct FBlackboardKeySelector                      MasterPlayer;                                              // 0x0070(0x0028) (Edit, Protected, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerAIPetFindEndOfMastersPath");
		return ptr;
	}



};

// Class Tiger.TigerAIPetPreparePathContinuing
// 0x0028 (FullSize[0x0098] - InheritedSize[0x0070])
class UTigerAIPetPreparePathContinuing : public UBTTaskNode
{
public:
	struct FBlackboardKeySelector                      MasterPlayer;                                              // 0x0070(0x0028) (Edit, Protected, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerAIPetPreparePathContinuing");
		return ptr;
	}



};

// Class Tiger.TigerAIPetStoreValidMasterPos
// 0x0028 (FullSize[0x0098] - InheritedSize[0x0070])
class UTigerAIPetStoreValidMasterPos : public UBTTaskNode
{
public:
	struct FBlackboardKeySelector                      MasterPlayer;                                              // 0x0070(0x0028) (Edit, Protected, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerAIPetStoreValidMasterPos");
		return ptr;
	}



};

// Class Tiger.TigerAIPlayAnimationTask
// 0x0058 (FullSize[0x00C8] - InheritedSize[0x0070])
class UTigerAIPlayAnimationTask : public UBTTaskNode
{
public:
	class UAnimMontage*                                AnimationToPlay;                                           // 0x0070(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FBlackboardKeySelector                      ContextualActionPointKey;                                  // 0x0078(0x0028) (Edit, NativeAccessSpecifierPrivate)
	class UBehaviorTreeComponent*                      MyOwnerComp;                                               // 0x00A0(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_L3P6[0x20];                                    // 0x00A8(0x0020) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerAIPlayAnimationTask");
		return ptr;
	}



};

// Class Tiger.TigerAiPlayerAtWpRangeDecorator
// 0x0008 (FullSize[0x0070] - InheritedSize[0x0068])
class UTigerAiPlayerAtWpRangeDecorator : public UBTDecorator
{
public:
	bool                                               bConditionInvertedOnTick;                                  // 0x0068(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_QUIH[0x7];                                     // 0x0069(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerAiPlayerAtWpRangeDecorator");
		return ptr;
	}



};

// Class Tiger.TigerAIPlayerClearPrioritiesTask
// 0x0000 (FullSize[0x0098] - InheritedSize[0x0098])
class UTigerAIPlayerClearPrioritiesTask : public UBTTask_BlackboardBase
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerAIPlayerClearPrioritiesTask");
		return ptr;
	}



};

// Class Tiger.TigerAIPlayerClimbIfPossibleTask
// 0x0060 (FullSize[0x00D0] - InheritedSize[0x0070])
class UTigerAIPlayerClimbIfPossibleTask : public UBTTaskNode
{
public:
	class ATigerLocalAIControllerBase*                 LocalAIController;                                         // 0x0070(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class ATigerPlayerController*                      PlayerController;                                          // 0x0078(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class ATigerPlayerCameraManager*                   PlayerCamera;                                              // 0x0080(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class ATigerPlayer*                                CurrentPawn;                                               // 0x0088(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTigerCharacterMovementComponent*            PlayerMovementComponent;                                   // 0x0090(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTigerTraversalClimbState*                   ClimbState;                                                // 0x0098(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTigerTraversalStateClimbingConfig*          ClimbConfig;                                               // 0x00A0(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              AngleFromForward;                                          // 0x00A8(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_QH5D[0x24];                                    // 0x00AC(0x0024) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerAIPlayerClimbIfPossibleTask");
		return ptr;
	}



};

// Class Tiger.TigerAiPlayerCombatService
// 0x0070 (FullSize[0x00E0] - InheritedSize[0x0070])
class UTigerAiPlayerCombatService : public UBTService
{
public:
	TMap<Tiger_ETigerWeaponType, struct FWeaponDistanceDesc> WeaponRanges;                                              // 0x0070(0x0050) (Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	class ATigerLocalAIController*                     LocalAIController;                                         // 0x00C0(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AActor*                                      CurrentLureTarget;                                         // 0x00C8(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_7YHS[0x10];                                    // 0x00D0(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerAiPlayerCombatService");
		return ptr;
	}



};

// Class Tiger.TigerAiPlayerDiablerizeTask
// 0x0028 (FullSize[0x00C0] - InheritedSize[0x0098])
class UTigerAiPlayerDiablerizeTask : public UBTTask_BlackboardBase
{
public:
	float                                              MaximumDiablerizeDistance;                                 // 0x0098(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_EOTJ[0x24];                                    // 0x009C(0x0024) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerAiPlayerDiablerizeTask");
		return ptr;
	}



};

// Class Tiger.TigerAIPlayerFeeding
// 0x0008 (FullSize[0x00A0] - InheritedSize[0x0098])
class UTigerAIPlayerFeeding : public UBTTask_BlackboardBase
{
public:
	float                                              MaximumFeedingDistance;                                    // 0x0098(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_X5PC[0x4];                                     // 0x009C(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerAIPlayerFeeding");
		return ptr;
	}



};

// Class Tiger.TigerAIPlayerFindBloodHuntedTask
// 0x0000 (FullSize[0x0070] - InheritedSize[0x0070])
class UTigerAIPlayerFindBloodHuntedTask : public UBTTaskNode
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerAIPlayerFindBloodHuntedTask");
		return ptr;
	}



};

// Class Tiger.TigerAIPlayerFindCivilianTask
// 0x0020 (FullSize[0x00B8] - InheritedSize[0x0098])
class UTigerAIPlayerFindCivilianTask : public UBTTask_BlackboardBase
{
public:
	bool                                               bUseHeightenedSensesSearchRadius;                          // 0x0098(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_9U7W[0x3];                                     // 0x0099(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              CustomSearchSphereRadius;                                  // 0x009C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               bDrawSearchSphere;                                         // 0x00A0(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_QQNM[0x3];                                     // 0x00A1(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              MaxVerticalPositionOffset;                                 // 0x00A4(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              RaycastDistance;                                           // 0x00A8(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int                                                SearchLowResonanceThreshold;                               // 0x00AC(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              SearchLowHealthPercentageThreshold;                        // 0x00B0(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_BYF8[0x4];                                     // 0x00B4(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerAIPlayerFindCivilianTask");
		return ptr;
	}



};

// Class Tiger.TigerAIPlayerFindClosestItemTask
// 0x0020 (FullSize[0x00B8] - InheritedSize[0x0098])
class UTigerAIPlayerFindClosestItemTask : public UBTTask_BlackboardBase
{
public:
	float                                              MaxVerticalPositionOffset;                                 // 0x0098(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              RaycastDistance;                                           // 0x009C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              SearchSphereRadius;                                        // 0x00A0(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_IOLT[0x14];                                    // 0x00A4(0x0014) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerAIPlayerFindClosestItemTask");
		return ptr;
	}



};

// Class Tiger.TigerAIPlayerFindNewPointTask
// 0x0018 (FullSize[0x00B0] - InheritedSize[0x0098])
class UTigerAIPlayerFindNewPointTask : public UBTTask_BlackboardBase
{
public:
	float                                              NavigablePointRadius;                                      // 0x0098(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              MaxCenterDistance;                                         // 0x009C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_GFET[0x10];                                    // 0x00A0(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerAIPlayerFindNewPointTask");
		return ptr;
	}



};

// Class Tiger.TigerAiPlayerMainStateService
// 0x0058 (FullSize[0x00C8] - InheritedSize[0x0070])
class UTigerAiPlayerMainStateService : public UBTService
{
public:
	class ATigerLocalAIController*                     LocalAIController;                                         // 0x0070(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class ATigerPlayer*                                AiPlayer;                                                  // 0x0078(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class ATigerCharacter*                             TargetCharacter;                                           // 0x0080(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTigerInventoryComponent*                    LocalAiInventory;                                          // 0x0088(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class ATigerCharacter*                             CharacterFromWhichFleeing;                                 // 0x0090(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_G0UA[0x18];                                    // 0x0098(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              FleeAttackDistance;                                        // 0x00B0(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_FZ9A[0x14];                                    // 0x00B4(0x0014) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerAiPlayerMainStateService");
		return ptr;
	}



	void OnPerceptionUpdated(class AActor* InActor, const struct FAIStimulus& InStimulus);
	void OnDiablerizeStateChanged(bool InIsDiablerizeActive, bool InIsTarget);
};

// Class Tiger.TigerAIPlayerMoveToTask
// 0x00A0 (FullSize[0x0150] - InheritedSize[0x00B0])
class UTigerAIPlayerMoveToTask : public UBTTask_MoveTo
{
public:
	unsigned char                                      UnknownData_XL8E[0x8];                                     // 0x00B0(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UTigerAIPlayerClimbIfPossibleTask*           ClimbTask;                                                 // 0x00B8(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTigerAIPlayerSlideIfPossibleTask*           SlideTask;                                                 // 0x00C0(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTigerAIPlayerWallGrindTask*                 WallGrindTask;                                             // 0x00C8(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              CheckStuckDelay;                                           // 0x00D0(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_48MM[0x4];                                     // 0x00D4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              CheckClimbTaskTransitionsDelay;                            // 0x00D8(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_OJYO[0x4];                                     // 0x00DC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              CheckSlideTaskTransitionsDelay;                            // 0x00E0(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_LRNY[0x4];                                     // 0x00E4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              JumpGapTransitionsDelay;                                   // 0x00E8(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_S0ZV[0x4];                                     // 0x00EC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class ATigerLocalAIControllerBase*                 LocalAIController;                                         // 0x00F0(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ATigerPlayer*                                CurrentTigerPlayer;                                        // 0x00F8(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_2TT4[0x50];                                    // 0x0100(0x0050) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerAIPlayerMoveToTask");
		return ptr;
	}



	void OnLifeStatusChanged(Tiger_ETigerPlayerLifeStatus InNewLifeStatus);
};

// Class Tiger.TigerAIPlayerPickPriorityTask
// 0x0008 (FullSize[0x00A0] - InheritedSize[0x0098])
class UTigerAIPlayerPickPriorityTask : public UBTTask_BlackboardBase
{
public:
	float                                              MaxVerticalPositionOffset;                                 // 0x0098(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              RaycastDistance;                                           // 0x009C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerAIPlayerPickPriorityTask");
		return ptr;
	}



};

// Class Tiger.TigerAIPlayerPickUpItemTask
// 0x0028 (FullSize[0x00C0] - InheritedSize[0x0098])
class UTigerAIPlayerPickUpItemTask : public UBTTask_BlackboardBase
{
public:
	float                                              MaximumLootingDistance;                                    // 0x0098(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_GQ0K[0x24];                                    // 0x009C(0x0024) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerAIPlayerPickUpItemTask");
		return ptr;
	}



};

// Class Tiger.TigerAIPlayerSlideIfPossibleTask
// 0x0030 (FullSize[0x00A0] - InheritedSize[0x0070])
class UTigerAIPlayerSlideIfPossibleTask : public UBTTaskNode
{
public:
	float                                              MinimumSlideDistanceSqrd;                                  // 0x0070(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_R8EA[0x4];                                     // 0x0074(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class ATigerLocalAIController*                     LocalAIController;                                         // 0x0078(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class ATigerPlayerController*                      PlayerController;                                          // 0x0080(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class ATigerPlayer*                                CurrentPawn;                                               // 0x0088(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTigerCharacterMovementComponent*            PlayerMovementComponent;                                   // 0x0090(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTigerTraversalSlideState*                   SlideState;                                                // 0x0098(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerAIPlayerSlideIfPossibleTask");
		return ptr;
	}



};

// Class Tiger.TigerAIPlayerTravelBloodVeinTask
// 0x0040 (FullSize[0x00D8] - InheritedSize[0x0098])
class UTigerAIPlayerTravelBloodVeinTask : public UBTTask_BlackboardBase
{
public:
	class UCurveFloat*                                 JumpProbabilityDistribution;                               // 0x0098(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_ENJL[0x8];                                     // 0x00A0(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	Tiger_ETigerJumpDistribution                       JumpDistributionType;                                      // 0x00A8(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_W2HR[0x2F];                                    // 0x00A9(0x002F) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerAIPlayerTravelBloodVeinTask");
		return ptr;
	}



};

// Class Tiger.TigerAIPlayerUseHealingItem
// 0x0020 (FullSize[0x0090] - InheritedSize[0x0070])
class UTigerAIPlayerUseHealingItem : public UBTTaskNode
{
public:
	unsigned char                                      UnknownData_CWCR[0x10];                                    // 0x0070(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class ATigerLocalAIControllerBase*                 LocalAIController;                                         // 0x0080(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class ATigerPlayerController*                      PlayerController;                                          // 0x0088(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerAIPlayerUseHealingItem");
		return ptr;
	}



};

// Class Tiger.TigerAiPlayerUseWeapon
// 0x0020 (FullSize[0x0090] - InheritedSize[0x0070])
class UTigerAiPlayerUseWeapon : public UBTTaskNode
{
public:
	unsigned char                                      UnknownData_6628[0x10];                                    // 0x0070(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class ATigerLocalAIControllerBase*                 LocalAIController;                                         // 0x0080(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class ATigerPlayerController*                      PlayerController;                                          // 0x0088(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerAiPlayerUseWeapon");
		return ptr;
	}



};

// Class Tiger.TigerAiPlayerUseWeaponPower
// 0x0028 (FullSize[0x0098] - InheritedSize[0x0070])
class UTigerAiPlayerUseWeaponPower : public UBTTaskNode
{
public:
	unsigned char                                      UnknownData_QOGU[0x10];                                    // 0x0070(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class ATigerLocalAIControllerBase*                 LocalAIController;                                         // 0x0080(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class ATigerPlayerController*                      PlayerController;                                          // 0x0088(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTigerDisciplineBase*                        WeaponAbility;                                             // 0x0090(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerAiPlayerUseWeaponPower");
		return ptr;
	}



};

// Class Tiger.TigerAIPlayerWallGrindTask
// 0x0030 (FullSize[0x00A0] - InheritedSize[0x0070])
class UTigerAIPlayerWallGrindTask : public UBTTaskNode
{
public:
	unsigned char                                      UnknownData_65IX[0x8];                                     // 0x0070(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class ATigerLocalAIController*                     LocalAIController;                                         // 0x0078(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class ATigerPlayerController*                      PlayerController;                                          // 0x0080(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class ATigerPlayer*                                CurrentPawn;                                               // 0x0088(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTigerCharacterMovementComponent*            PlayerMovementComponent;                                   // 0x0090(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTigerTraversalWallGrindState*               GrindState;                                                // 0x0098(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerAIPlayerWallGrindTask");
		return ptr;
	}



};

// Class Tiger.TigerAiReloadWeaponTask
// 0x0010 (FullSize[0x0080] - InheritedSize[0x0070])
class UTigerAiReloadWeaponTask : public UBTTaskNode
{
public:
	unsigned char                                      UnknownData_G870[0x10];                                    // 0x0070(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerAiReloadWeaponTask");
		return ptr;
	}



	void OnReloadAborted();
};

// Class Tiger.TigerAiReportNewThreatTask
// 0x0028 (FullSize[0x0098] - InheritedSize[0x0070])
class UTigerAiReportNewThreatTask : public UBTTaskNode
{
public:
	struct FBlackboardKeySelector                      PlayerToReportKey;                                         // 0x0070(0x0028) (Edit, Protected, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerAiReportNewThreatTask");
		return ptr;
	}



};

// Class Tiger.TigerAIReportSuspciousPlayer
// 0x0078 (FullSize[0x00E8] - InheritedSize[0x0070])
class UTigerAIReportSuspciousPlayer : public UBTTaskNode
{
public:
	struct FBlackboardKeySelector                      PoliceTarget;                                              // 0x0070(0x0028) (Edit, Protected, NativeAccessSpecifierProtected)
	struct FBlackboardKeySelector                      CurrentMasqueradeTarget;                                   // 0x0098(0x0028) (Edit, Protected, NativeAccessSpecifierProtected)
	struct FBlackboardKeySelector                      PlayerNeedsToBeReported;                                   // 0x00C0(0x0028) (Edit, Protected, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerAIReportSuspciousPlayer");
		return ptr;
	}



};

// Class Tiger.TigerAiRequestOutOfBoundsPursuitSquad
// 0x0030 (FullSize[0x00A0] - InheritedSize[0x0070])
class UTigerAiRequestOutOfBoundsPursuitSquad : public UBTTaskNode
{
public:
	struct FBlackboardKeySelector                      TargetPlayer;                                              // 0x0070(0x0028) (Edit, Protected, NativeAccessSpecifierProtected)
	float                                              NearbySquadDistance;                                       // 0x0098(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_3JKG[0x4];                                     // 0x009C(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerAiRequestOutOfBoundsPursuitSquad");
		return ptr;
	}



};

// Class Tiger.TigerAISense_Masquerade
// 0x0010 (FullSize[0x0090] - InheritedSize[0x0080])
class UTigerAISense_Masquerade : public UAISense
{
public:
	TArray<struct FTigerAIMasqueradeEvent>             MasqueradeEvents;                                          // 0x0080(0x0010) (ZeroConstructor, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerAISense_Masquerade");
		return ptr;
	}



	void STATIC_ReportPlayerAction(class ATigerPlayer* Instigator, const struct FTigerAIPlayerAction& PlayerAction);
};

// Class Tiger.TigerAISenseConfig_Masquerade
// 0x0008 (FullSize[0x0050] - InheritedSize[0x0048])
class UTigerAISenseConfig_Masquerade : public UAISenseConfig
{
public:
	class UClass*                                      Implementation;                                            // 0x0048(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, DisableEditOnInstance, NoClear, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerAISenseConfig_Masquerade");
		return ptr;
	}



};

// Class Tiger.TigerAISense_Sight
// 0x0000 (FullSize[0x0170] - InheritedSize[0x0170])
class UTigerAISense_Sight : public UAISense_Sight
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerAISense_Sight");
		return ptr;
	}



};

// Class Tiger.TigerAISenseConfig_Sight
// 0x0030 (FullSize[0x0078] - InheritedSize[0x0048])
class UTigerAISenseConfig_Sight : public UAISenseConfig
{
public:
	class UClass*                                      Implementation;                                            // 0x0048(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, DisableEditOnInstance, NoClear, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SightRadius;                                               // 0x0050(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              LoseSightRadius;                                           // 0x0054(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              PeripheralVisionAngleDegrees;                              // 0x0058(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              CloseSightRadius;                                          // 0x005C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              CloseLoseSightRadius;                                      // 0x0060(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ClosePeripheralVisionAngleDegrees;                         // 0x0064(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              HeightDifference;                                          // 0x0068(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAISenseAffiliationFilter                   DetectionByAffiliation;                                    // 0x006C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	float                                              AutoSuccessRangeFromLastSeenLocation;                      // 0x0070(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_ARBL[0x4];                                     // 0x0074(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerAISenseConfig_Sight");
		return ptr;
	}



};

// Class Tiger.TigerSightConfigAsset
// 0x0050 (FullSize[0x0080] - InheritedSize[0x0030])
class UTigerSightConfigAsset : public UDataAsset
{
public:
	TMap<Tiger_ETigerNPCType, struct FTigerSightConfigData> SightData;                                                 // 0x0030(0x0050) (Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerSightConfigAsset");
		return ptr;
	}



};

// Class Tiger.TigerAiSetCrouchedTask
// 0x0008 (FullSize[0x0078] - InheritedSize[0x0070])
class UTigerAiSetCrouchedTask : public UBTTaskNode
{
public:
	bool                                               bShouldCrouch;                                             // 0x0070(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_SZ5N[0x7];                                     // 0x0071(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerAiSetCrouchedTask");
		return ptr;
	}



};

// Class Tiger.TigerAiSetMovementMode
// 0x0008 (FullSize[0x0078] - InheritedSize[0x0070])
class UTigerAiSetMovementMode : public UBTTaskNode
{
public:
	Tiger_ETigerAIAnimationMode                        MovementMode;                                              // 0x0070(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_408R[0x7];                                     // 0x0071(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerAiSetMovementMode");
		return ptr;
	}



};

// Class Tiger.TigerAiShouldFireFleeDecorator
// 0x0008 (FullSize[0x0098] - InheritedSize[0x0090])
class UTigerAiShouldFireFleeDecorator : public UBTDecorator_BlackboardBase
{
public:
	unsigned char                                      UnknownData_BQ3I[0x8];                                     // 0x0090(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerAiShouldFireFleeDecorator");
		return ptr;
	}



};

// Class Tiger.TigerAiShouldReloadDecorator
// 0x0008 (FullSize[0x0070] - InheritedSize[0x0068])
class UTigerAiShouldReloadDecorator : public UBTDecorator
{
public:
	bool                                               bBaseUponFullAmmoPercentage;                               // 0x0068(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_VZ2W[0x3];                                     // 0x0069(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              ReloadAmmoPercentage;                                      // 0x006C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerAiShouldReloadDecorator");
		return ptr;
	}



};

// Class Tiger.TigerAiShouldReportNewThreatDecorator
// 0x0028 (FullSize[0x0090] - InheritedSize[0x0068])
class UTigerAiShouldReportNewThreatDecorator : public UBTDecorator
{
public:
	struct FBlackboardKeySelector                      PlayerToReportKey;                                         // 0x0068(0x0028) (Edit, Protected, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerAiShouldReportNewThreatDecorator");
		return ptr;
	}



};

// Class Tiger.TigerAiShouldRequestOutOfBoundsPursuitSquad
// 0x0030 (FullSize[0x0098] - InheritedSize[0x0068])
class UTigerAiShouldRequestOutOfBoundsPursuitSquad : public UBTDecorator
{
public:
	struct FBlackboardKeySelector                      CurrentTargetKey;                                          // 0x0068(0x0028) (Edit, NativeAccessSpecifierPublic)
	float                                              MaxDistanceFromCurrentSquad;                               // 0x0090(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_ZQW6[0x4];                                     // 0x0094(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerAiShouldRequestOutOfBoundsPursuitSquad");
		return ptr;
	}



};

// Class Tiger.TigerAiShouldUseDisciplineBase
// 0x0030 (FullSize[0x0098] - InheritedSize[0x0068])
class UTigerAiShouldUseDisciplineBase : public UBTDecorator
{
public:
	float                                              LowHealthPercentage;                                       // 0x0068(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_IMXR[0x4];                                     // 0x006C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class ATigerLocalAIController*                     LocalAIController;                                         // 0x0070(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ATigerPlayerController*                      LocalAiPlayerController;                                   // 0x0078(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ATigerPlayer*                                AiTigerPlayer;                                             // 0x0080(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTigerDisciplineComponent*                   DisciplineComponent;                                       // 0x0088(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ATigerCharacter*                             AiTigerCharacter;                                          // 0x0090(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerAiShouldUseDisciplineBase");
		return ptr;
	}



};

// Class Tiger.TigerAiShouldUseArchDiscipline
// 0x0018 (FullSize[0x00B0] - InheritedSize[0x0098])
class UTigerAiShouldUseArchDiscipline : public UTigerAiShouldUseDisciplineBase
{
public:
	float                                              ShockwavePunchMinimumTargetDistance;                       // 0x0098(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              EarthshockUseWithoutJumpChance;                            // 0x009C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              TrapsAndScoutsUseNearLootDistance;                         // 0x00A0(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              ScoutsRedeployChance;                                      // 0x00A4(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              RejuvenatingVoiceLowHealthPercentage;                      // 0x00A8(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_9GA0[0x4];                                     // 0x00AC(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerAiShouldUseArchDiscipline");
		return ptr;
	}



};

// Class Tiger.TigerAiShouldUseClanDiscipline
// 0x0010 (FullSize[0x00A8] - InheritedSize[0x0098])
class UTigerAiShouldUseClanDiscipline : public UTigerAiShouldUseDisciplineBase
{
public:
	float                                              SoaringLeapRayClearance;                                   // 0x0098(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              VanishCombatUseChance;                                     // 0x009C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              ProjectionDashUseDistance;                                 // 0x00A0(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_1ICQ[0x4];                                     // 0x00A4(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerAiShouldUseClanDiscipline");
		return ptr;
	}



};

// Class Tiger.TigerNPCSpawningBase
// 0x0038 (FullSize[0x0260] - InheritedSize[0x0228])
class ATigerNPCSpawningBase : public AActor
{
public:
	class ATigerAISplinePath*                          AISplinePath;                                              // 0x0228(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       SpawningGroup;                                             // 0x0230(0x0008) (Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                SpawnAmount;                                               // 0x0238(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGuid                                       SpawningSubGroupId;                                        // 0x023C(0x0010) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              Prio;                                                      // 0x024C(0x0004) (Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bShouldBeManuallyActivated;                                // 0x0250(0x0001) (Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_HIPQ[0x3];                                     // 0x0251(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FName                                       MovementGroup;                                             // 0x0254(0x0008) (Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_O7GG[0x4];                                     // 0x025C(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerNPCSpawningBase");
		return ptr;
	}



	TArray<class ATigerBaseNPC*> ManuallySpawnNPCs(int Budget, int OverrideSpawnAmount);
};

// Class Tiger.TigerAISpawner
// 0x0008 (FullSize[0x0268] - InheritedSize[0x0260])
class ATigerAISpawner : public ATigerNPCSpawningBase
{
public:
	class UTigerNPCAsset*                              NPCAsset;                                                  // 0x0260(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerAISpawner");
		return ptr;
	}



};

// Class Tiger.TigerAISplinePath
// 0x00A8 (FullSize[0x02D0] - InheritedSize[0x0228])
class ATigerAISplinePath : public AActor
{
public:
	struct FTigerAISplinePathData                      PathData;                                                  // 0x0228(0x00A0) (Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_3ZEX[0x8];                                     // 0x02C8(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerAISplinePath");
		return ptr;
	}



};

// Class Tiger.TigerAiSplinePathHub
// 0x0018 (FullSize[0x0240] - InheritedSize[0x0228])
class ATigerAiSplinePathHub : public AActor
{
public:
	TArray<struct FTigerAISplinePathConnection>        SplineConnections;                                         // 0x0228(0x0010) (Edit, ZeroConstructor, EditConst, Protected, NativeAccessSpecifierProtected)
	float                                              ConnectionRadius;                                          // 0x0238(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_00I5[0x4];                                     // 0x023C(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerAiSplinePathHub");
		return ptr;
	}



};

// Class Tiger.TigerAiSquad
// 0x0040 (FullSize[0x0068] - InheritedSize[0x0028])
class UTigerAiSquad : public UObject
{
public:
	unsigned char                                      UnknownData_YYI9[0x40];                                    // 0x0028(0x0040) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerAiSquad");
		return ptr;
	}



};

// Class Tiger.TigerAiSquadFormationService
// 0x0040 (FullSize[0x00B0] - InheritedSize[0x0070])
class UTigerAiSquadFormationService : public UBTService
{
public:
	struct FBlackboardKeySelector                      FormationLocationKey;                                      // 0x0070(0x0028) (Edit, Protected, NativeAccessSpecifierProtected)
	bool                                               bDebugDraw;                                                // 0x0098(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_BHKX[0x17];                                    // 0x0099(0x0017) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerAiSquadFormationService");
		return ptr;
	}



};

// Class Tiger.TigerAIsRespondingToRoar
// 0x0000 (FullSize[0x0068] - InheritedSize[0x0068])
class UTigerAIsRespondingToRoar : public UBTDecorator
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerAIsRespondingToRoar");
		return ptr;
	}



};

// Class Tiger.TigerAiStopActiveCapTask
// 0x0000 (FullSize[0x0070] - InheritedSize[0x0070])
class UTigerAiStopActiveCapTask : public UBTTaskNode
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerAiStopActiveCapTask");
		return ptr;
	}



};

// Class Tiger.TigerAiTargetOutOfBounds
// 0x0078 (FullSize[0x00E0] - InheritedSize[0x0068])
class UTigerAiTargetOutOfBounds : public UBTDecorator
{
public:
	struct FBlackboardKeySelector                      IsTargetOutOfBoundsKey;                                    // 0x0068(0x0028) (Edit, Protected, NativeAccessSpecifierProtected)
	struct FBlackboardKeySelector                      HasPathToTargetKey;                                        // 0x0090(0x0028) (Edit, Protected, NativeAccessSpecifierProtected)
	struct FBlackboardKeySelector                      IsPathOutOfBoundsKey;                                      // 0x00B8(0x0028) (Edit, Protected, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerAiTargetOutOfBounds");
		return ptr;
	}



};

// Class Tiger.TigerAIThreateningTargetService
// 0x00D8 (FullSize[0x0148] - InheritedSize[0x0070])
class UTigerAIThreateningTargetService : public UBTService
{
public:
	struct FBlackboardKeySelector                      ThreatPosition;                                            // 0x0070(0x0028) (Edit, Protected, NativeAccessSpecifierProtected)
	struct FBlackboardKeySelector                      CurrentThreatTarget;                                       // 0x0098(0x0028) (Edit, Protected, NativeAccessSpecifierProtected)
	struct FBlackboardKeySelector                      SuggestedNonObstructedPosition;                            // 0x00C0(0x0028) (Edit, Protected, NativeAccessSpecifierProtected)
	struct FBlackboardKeySelector                      bIsAllowedToChaseKey;                                      // 0x00E8(0x0028) (Edit, Protected, NativeAccessSpecifierProtected)
	struct FBlackboardKeySelector                      bCanShoot;                                                 // 0x0110(0x0028) (Edit, Protected, NativeAccessSpecifierProtected)
	bool                                               bUseAttackPermissions;                                     // 0x0138(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bShowDebugFeatures;                                        // 0x0139(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_JVR6[0xE];                                     // 0x013A(0x000E) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerAIThreateningTargetService");
		return ptr;
	}



};

// Class Tiger.TigerAIThreateningTargetEntityService
// 0x0028 (FullSize[0x0170] - InheritedSize[0x0148])
class UTigerAIThreateningTargetEntityService : public UTigerAIThreateningTargetService
{
public:
	struct FBlackboardKeySelector                      MasqueradeBreachTargetKey;                                 // 0x0148(0x0028) (Edit, Protected, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerAIThreateningTargetEntityService");
		return ptr;
	}



};

// Class Tiger.TigerAiTryFindLocationAgainstElevatedTarget
// 0x0060 (FullSize[0x00D0] - InheritedSize[0x0070])
class UTigerAiTryFindLocationAgainstElevatedTarget : public UBTTaskNode
{
public:
	struct FBlackboardKeySelector                      TargetLocationKey;                                         // 0x0070(0x0028) (Edit, Protected, NativeAccessSpecifierProtected)
	struct FBlackboardKeySelector                      SuggestedLocationKey;                                      // 0x0098(0x0028) (Edit, Protected, NativeAccessSpecifierProtected)
	float                                              MaxStepbackDistance;                                       // 0x00C0(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              MinStepbackDistance;                                       // 0x00C4(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              DesiredMaxVerticalAngle;                                   // 0x00C8(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_5HA1[0x4];                                     // 0x00CC(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerAiTryFindLocationAgainstElevatedTarget");
		return ptr;
	}



};

// Class Tiger.TigerAIUpdateBloodDrainedService
// 0x0008 (FullSize[0x0078] - InheritedSize[0x0070])
class UTigerAIUpdateBloodDrainedService : public UBTService
{
public:
	float                                              MaxTimeInBloodDrainedState;                                // 0x0070(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_I4E6[0x4];                                     // 0x0074(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerAIUpdateBloodDrainedService");
		return ptr;
	}



};

// Class Tiger.TigerAIUpdateWaypoint
// 0x0080 (FullSize[0x00F0] - InheritedSize[0x0070])
class UTigerAIUpdateWaypoint : public UBTService
{
public:
	struct FBlackboardKeySelector                      Index;                                                     // 0x0070(0x0028) (Edit, NativeAccessSpecifierPublic)
	struct FBlackboardKeySelector                      Waypoint;                                                  // 0x0098(0x0028) (Edit, NativeAccessSpecifierPublic)
	struct FBlackboardKeySelector                      bWaypointDirectionIsForward;                               // 0x00C0(0x0028) (Edit, NativeAccessSpecifierPublic)
	float                                              Distance;                                                  // 0x00E8(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_80OQ[0x4];                                     // 0x00EC(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerAIUpdateWaypoint");
		return ptr;
	}



};

// Class Tiger.TigerAiUseArchetypeDisciplineTask
// 0x0000 (FullSize[0x00C8] - InheritedSize[0x00C8])
class UTigerAiUseArchetypeDisciplineTask : public UTigerAiDisciplineTaskBase
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerAiUseArchetypeDisciplineTask");
		return ptr;
	}



};

// Class Tiger.TigerAiUseClanDisciplineTask
// 0x0000 (FullSize[0x00C8] - InheritedSize[0x00C8])
class UTigerAiUseClanDisciplineTask : public UTigerAiDisciplineTaskBase
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerAiUseClanDisciplineTask");
		return ptr;
	}



};

// Class Tiger.TigerFearValueAsset
// 0x0050 (FullSize[0x0080] - InheritedSize[0x0030])
class UTigerFearValueAsset : public UDataAsset
{
public:
	TMap<Tiger_ETigerAIMasqueradeState, float>         FearValueThresholds;                                       // 0x0030(0x0050) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerFearValueAsset");
		return ptr;
	}



};

// Class Tiger.TigerNpcPropAsset
// 0x0028 (FullSize[0x0058] - InheritedSize[0x0030])
class UTigerNpcPropAsset : public UDataAsset
{
public:
	TArray<struct FName>                               TagsToAddToNpc;                                            // 0x0030(0x0010) (Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	class UTigerAnimationSetAsset*                     PropAnimationSet;                                          // 0x0040(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FName>                               HeldPropAttachments;                                       // 0x0048(0x0010) (Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerNpcPropAsset");
		return ptr;
	}



};

// Class Tiger.TigerNPCVisualAsset
// 0x0120 (FullSize[0x0150] - InheritedSize[0x0030])
class UTigerNPCVisualAsset : public UDataAsset
{
public:
	struct FName                                       MainTag;                                                   // 0x0030(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FName>                               AdditionalTags;                                            // 0x0038(0x0010) (Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	class USkeletalMesh*                               SkeletalMesh;                                              // 0x0048(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class USkeletalMesh*>                       HeadSkeletalMeshes;                                        // 0x0050(0x0010) (Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class USkeletalMesh*>                       HairSkeletalMeshes;                                        // 0x0060(0x0010) (Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class UTigerColorSetAsset*>                 ColorSetAssets;                                            // 0x0070(0x0010) (Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class UTigerLinearColorSetAsset*>           HairColorSetAssets;                                        // 0x0080(0x0010) (Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	class UMaterialInstance*                           DefaultMaterial;                                           // 0x0090(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bShowHeart;                                                // 0x0098(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	Tiger_ETigerGender                                 Gender;                                                    // 0x0099(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_B8WM[0x6];                                     // 0x009A(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UClass*                                      HairAnimationBlueprint;                                    // 0x00A0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bUseCharacterPreset;                                       // 0x00A8(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_PH1C[0x7];                                     // 0x00A9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	unsigned char                                      CharacterPreset[0x28];                                     // 0x00A9(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	class UClass*                                      AnimationInstanceClass;                                    // 0x00D8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	Tiger_ETigerCivilianEmotionalState                 EmotionalState;                                            // 0x00E0(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_IPF8[0x3];                                     // 0x00E1(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              ChanceForProp;                                             // 0x00E4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<class UTigerNpcPropAsset*, float>             PossibleNpcProps;                                          // 0x00E8(0x0050) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	float                                              WalkSpeed;                                                 // 0x0138(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              WalkTurnSpeed;                                             // 0x013C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SprintSpeed;                                               // 0x0140(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SprintTurnSpeed;                                           // 0x0144(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              StrafeSpeed;                                               // 0x0148(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              StrafeTurnSpeed;                                           // 0x014C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerNPCVisualAsset");
		return ptr;
	}



};

// Class Tiger.TigerNPCBehaviorAsset
// 0x01F8 (FullSize[0x0228] - InheritedSize[0x0030])
class UTigerNPCBehaviorAsset : public UDataAsset
{
public:
	class UClass*                                      NPCBlueprint;                                              // 0x0030(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      MasqueradeActionResponseClass;                             // 0x0038(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBehaviorTree*                               DefaultBehaviorTree;                                       // 0x0040(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<Tiger_ETigerAIMasqueradeState, class UBehaviorTree*> BehaviorTrees;                                             // 0x0048(0x0050) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	TArray<class UClass*>                              AdditionalComponentClasses;                                // 0x0098(0x0010) (Edit, BlueprintVisible, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	class UClass*                                      WeaponClass;                                               // 0x00A8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	Tiger_ETigerNPCType                                NPCType;                                                   // 0x00B0(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	Tiger_ETigerAIAnimationMode                        AnimationMode;                                             // 0x00B1(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_DPWR[0x2];                                     // 0x00B2(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FTigerCharacterStatModification             BaseStatModifications;                                     // 0x00B4(0x00B4) (Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FTigerCharacterStatModification             BaseGroupStatModifications;                                // 0x0168(0x00B4) (Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	bool                                               bUseGroupStats;                                            // 0x021C(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_GMVE[0x3];                                     // 0x021D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              OverrideBaseMaxHealth;                                     // 0x0220(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_VHDN[0x4];                                     // 0x0224(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerNPCBehaviorAsset");
		return ptr;
	}



};

// Class Tiger.TigerNPCAsset
// 0x0020 (FullSize[0x0050] - InheritedSize[0x0030])
class UTigerNPCAsset : public UDataAsset
{
public:
	TArray<struct FTigerRandomVisualAsset>             NormalizedVisualAssets;                                    // 0x0030(0x0010) (ZeroConstructor, NativeAccessSpecifierPublic)
	class UTigerNPCBehaviorAsset*                      BehaviorAsset;                                             // 0x0040(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTigerGrimoireEntry*                         GrimoireEntry;                                             // 0x0048(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerNPCAsset");
		return ptr;
	}



};

// Class Tiger.TigerColorSetAsset
// 0x00A0 (FullSize[0x00D0] - InheritedSize[0x0030])
class UTigerColorSetAsset : public UDataAsset
{
public:
	TMap<struct FName, struct FCoreUObject_FColor>     ColorSets;                                                 // 0x0030(0x0050) (Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TMap<struct FName, float>                          ScalarParameters;                                          // 0x0080(0x0050) (Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerColorSetAsset");
		return ptr;
	}



};

// Class Tiger.TigerNPCCheatCommandsAsset
// 0x0050 (FullSize[0x0080] - InheritedSize[0x0030])
class UTigerNPCCheatCommandsAsset : public UDataAsset
{
public:
	TMap<struct FName, class UTigerNPCAsset*>          Commands;                                                  // 0x0030(0x0050) (Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerNPCCheatCommandsAsset");
		return ptr;
	}



};

// Class Tiger.TigerLinearColorSetAsset
// 0x00A0 (FullSize[0x00D0] - InheritedSize[0x0030])
class UTigerLinearColorSetAsset : public UDataAsset
{
public:
	TMap<struct FName, struct FLinearColor>            ColorSets;                                                 // 0x0030(0x0050) (Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TMap<struct FName, float>                          ScalarParameters;                                          // 0x0080(0x0050) (Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerLinearColorSetAsset");
		return ptr;
	}



};

// Class Tiger.TigerAIWithinMovementBoundsServices
// 0x0028 (FullSize[0x0098] - InheritedSize[0x0070])
class UTigerAIWithinMovementBoundsServices : public UBTService
{
public:
	struct FBlackboardKeySelector                      TargetLocationKey;                                         // 0x0070(0x0028) (Edit, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerAIWithinMovementBoundsServices");
		return ptr;
	}



};

// Class Tiger.TigerDisciplineMetaData
// 0x0008 (FullSize[0x0030] - InheritedSize[0x0028])
class UTigerDisciplineMetaData : public UAnimMetaData
{
public:
	Tiger_ETigerDisciplinesEnum                        DisicplineType;                                            // 0x0028(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bAllowRotationLerp;                                        // 0x0029(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_76XI[0x6];                                     // 0x002A(0x0006) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerDisciplineMetaData");
		return ptr;
	}



};

// Class Tiger.TigerAnimationSet
// 0x0338 (FullSize[0x0360] - InheritedSize[0x0028])
class UTigerAnimationSet : public UObject
{
public:
	TArray<class UTigerAnimationSetAsset*>             ParentSets;                                                // 0x0028(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TMap<struct FName, class UAnimSequence*>           Sequences;                                                 // 0x0038(0x0050) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TMap<struct FName, class UAnimMontage*>            Montages;                                                  // 0x0088(0x0050) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TMap<struct FName, class UTigerMontageList*>       MontageLists;                                              // 0x00D8(0x0050) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	TMap<struct FName, class UBlendSpace*>             BlendSpaces;                                               // 0x0128(0x0050) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TMap<struct FName, class UBlendSpace1D*>           BlendSpaces1D;                                             // 0x0178(0x0050) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TMap<struct FName, class UTigerRandomSequenceList*> RandomSequenceLists;                                       // 0x01C8(0x0050) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	TMap<struct FName, class UTigerCustomSequenceList*> CustomSequences;                                           // 0x0218(0x0050) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	TMap<struct FName, class UTigerCustomMontageList*> CustomMontages;                                            // 0x0268(0x0050) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	TMap<struct FName, class UTigerCustomBlendSpaceList*> CustomBlendSpaces;                                         // 0x02B8(0x0050) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	TMap<struct FName, class UTigerCustomBlendSpace1DList*> CustomBlendSpaces1D;                                       // 0x0308(0x0050) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	int                                                Priority;                                                  // 0x0358(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_9KSQ[0x4];                                     // 0x035C(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerAnimationSet");
		return ptr;
	}



};

// Class Tiger.TigerAnimationSetAsset
// 0x0008 (FullSize[0x0038] - InheritedSize[0x0030])
class UTigerAnimationSetAsset : public UDataAsset
{
public:
	class UTigerAnimationSet*                          Set;                                                       // 0x0030(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerAnimationSetAsset");
		return ptr;
	}



};

// Class Tiger.TigerAnimationSetCollection
// 0x0018 (FullSize[0x0040] - InheritedSize[0x0028])
class UTigerAnimationSetCollection : public UObject
{
public:
	class UTigerAnimationSet*                          ResultSet;                                                 // 0x0028(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class UTigerAnimationSet*>                  AnimationSets;                                             // 0x0030(0x0010) (ZeroConstructor, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerAnimationSetCollection");
		return ptr;
	}



	void AddSet(class UTigerAnimationSetAsset* Asset);
};

// Class Tiger.TigerMontageList
// 0x0010 (FullSize[0x0038] - InheritedSize[0x0028])
class UTigerMontageList : public UObject
{
public:
	TArray<class UAnimMontage*>                        MontageList;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerMontageList");
		return ptr;
	}



	class UAnimMontage* GetRandomMontage();
};

// Class Tiger.TigerCustomSequenceList
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class UTigerCustomSequenceList : public UObject
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerCustomSequenceList");
		return ptr;
	}



};

// Class Tiger.TigerCustomSequenceListClan
// 0x0018 (FullSize[0x0040] - InheritedSize[0x0028])
class UTigerCustomSequenceListClan : public UTigerCustomSequenceList
{
public:
	class UAnimSequence*                               Sequences[0x3];                                            // 0x0028(0x0018) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerCustomSequenceListClan");
		return ptr;
	}



};

// Class Tiger.TigerCustomSequenceListGender
// 0x0010 (FullSize[0x0038] - InheritedSize[0x0028])
class UTigerCustomSequenceListGender : public UTigerCustomSequenceList
{
public:
	class UAnimSequence*                               Sequences[0x2];                                            // 0x0028(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerCustomSequenceListGender");
		return ptr;
	}



};

// Class Tiger.TigerCustomSequenceListClanAndGender
// 0x0030 (FullSize[0x0058] - InheritedSize[0x0028])
class UTigerCustomSequenceListClanAndGender : public UTigerCustomSequenceList
{
public:
	struct FTigerPlayerSequenceByClan                  SequencesByClan[0x2];                                      // 0x0028(0x0030) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerCustomSequenceListClanAndGender");
		return ptr;
	}



};

// Class Tiger.TigerCustomMontageList
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class UTigerCustomMontageList : public UObject
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerCustomMontageList");
		return ptr;
	}



};

// Class Tiger.TigerCustomMontageListClan
// 0x0018 (FullSize[0x0040] - InheritedSize[0x0028])
class UTigerCustomMontageListClan : public UTigerCustomMontageList
{
public:
	class UAnimMontage*                                Montages[0x3];                                             // 0x0028(0x0018) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerCustomMontageListClan");
		return ptr;
	}



};

// Class Tiger.TigerCustomMontageListGender
// 0x0010 (FullSize[0x0038] - InheritedSize[0x0028])
class UTigerCustomMontageListGender : public UTigerCustomMontageList
{
public:
	class UAnimMontage*                                Montages[0x2];                                             // 0x0028(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerCustomMontageListGender");
		return ptr;
	}



};

// Class Tiger.TigerCustomMontageListClanAndGender
// 0x0030 (FullSize[0x0058] - InheritedSize[0x0028])
class UTigerCustomMontageListClanAndGender : public UTigerCustomMontageList
{
public:
	struct FTigerPlayerMontageByClan                   MontagesByClan[0x2];                                       // 0x0028(0x0030) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerCustomMontageListClanAndGender");
		return ptr;
	}



};

// Class Tiger.TigerCustomMontageListMeleeWeapon
// 0x0050 (FullSize[0x0078] - InheritedSize[0x0028])
class UTigerCustomMontageListMeleeWeapon : public UTigerCustomMontageList
{
public:
	TMap<class UClass*, class UAnimMontage*>           Montages;                                                  // 0x0028(0x0050) (Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerCustomMontageListMeleeWeapon");
		return ptr;
	}



};

// Class Tiger.TigerCustomBlendSpaceList
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class UTigerCustomBlendSpaceList : public UObject
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerCustomBlendSpaceList");
		return ptr;
	}



};

// Class Tiger.TigerCustomBlendSpaceListClan
// 0x0018 (FullSize[0x0040] - InheritedSize[0x0028])
class UTigerCustomBlendSpaceListClan : public UTigerCustomBlendSpaceList
{
public:
	class UBlendSpace*                                 BlendSpaces[0x3];                                          // 0x0028(0x0018) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerCustomBlendSpaceListClan");
		return ptr;
	}



};

// Class Tiger.TigerCustomBlendSpaceListGender
// 0x0010 (FullSize[0x0038] - InheritedSize[0x0028])
class UTigerCustomBlendSpaceListGender : public UTigerCustomBlendSpaceList
{
public:
	class UBlendSpace*                                 BlendSpaces[0x2];                                          // 0x0028(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerCustomBlendSpaceListGender");
		return ptr;
	}



};

// Class Tiger.TigerCustomBlendSpaceListClanAndGender
// 0x0030 (FullSize[0x0058] - InheritedSize[0x0028])
class UTigerCustomBlendSpaceListClanAndGender : public UTigerCustomBlendSpaceList
{
public:
	struct FTigerPlayerBlendSpaceByClan                BlendSpacesByClan[0x2];                                    // 0x0028(0x0030) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerCustomBlendSpaceListClanAndGender");
		return ptr;
	}



};

// Class Tiger.TigerCustomBlendSpace1DList
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class UTigerCustomBlendSpace1DList : public UObject
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerCustomBlendSpace1DList");
		return ptr;
	}



};

// Class Tiger.TigerCustomBlendSpace1DListClan
// 0x0018 (FullSize[0x0040] - InheritedSize[0x0028])
class UTigerCustomBlendSpace1DListClan : public UTigerCustomBlendSpace1DList
{
public:
	class UBlendSpace1D*                               BlendSpaces[0x3];                                          // 0x0028(0x0018) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerCustomBlendSpace1DListClan");
		return ptr;
	}



};

// Class Tiger.TigerCustomBlendSpace1DListGender
// 0x0010 (FullSize[0x0038] - InheritedSize[0x0028])
class UTigerCustomBlendSpace1DListGender : public UTigerCustomBlendSpace1DList
{
public:
	class UBlendSpace1D*                               BlendSpaces[0x2];                                          // 0x0028(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerCustomBlendSpace1DListGender");
		return ptr;
	}



};

// Class Tiger.TigerCustomBlendSpace1DListClanAndGender
// 0x0030 (FullSize[0x0058] - InheritedSize[0x0028])
class UTigerCustomBlendSpace1DListClanAndGender : public UTigerCustomBlendSpace1DList
{
public:
	struct FTigerPlayerBlendSpace1DByClan              BlendSpacesByClan[0x2];                                    // 0x0028(0x0030) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerCustomBlendSpace1DListClanAndGender");
		return ptr;
	}



};

// Class Tiger.TigerAnimIKWindow
// 0x0048 (FullSize[0x0078] - InheritedSize[0x0030])
class UTigerAnimIKWindow : public UAnimNotifyState
{
public:
	struct FName                                       SocketName;                                                // 0x0030(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FName                                       SocketToLineTraceFrom;                                     // 0x0038(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	Tiger_ETigerIKDirection                            IKSearchDirection;                                         // 0x0040(0x0001) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_RNFZ[0x3];                                     // 0x0041(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FName                                       TargetJoint;                                               // 0x0044(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              TargetJointVerticalOffsetAmount;                           // 0x004C(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              TargetJointHorizontalOffsetAmount;                         // 0x0050(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              TargetJointDepthOffsetAmount;                              // 0x0054(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              IKResultVerticalAdjustment;                                // 0x0058(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              IKResultHorizontalAdjustment;                              // 0x005C(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              IKResultDepthAdjustment;                                   // 0x0060(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              IKResultAlpha;                                             // 0x0064(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               bIKShouldRemainActiveWhenAnimationLoops;                   // 0x0068(0x0001) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_PFQC[0x3];                                     // 0x0069(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              InOutBlendSpeed;                                           // 0x006C(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               bShouldBlendInAndOut;                                      // 0x0070(0x0001) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_EOMS[0x7];                                     // 0x0071(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerAnimIKWindow");
		return ptr;
	}



};

// Class Tiger.TigerFaceCurvesAnimationMap
// 0x00A0 (FullSize[0x00C8] - InheritedSize[0x0028])
class UTigerFaceCurvesAnimationMap : public UObject
{
public:
	TMap<struct FName, class UAnimSequence*>           CurveAnimations;                                           // 0x0028(0x0050) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TMap<struct FName, class UAnimMontage*>            FaceMontages;                                              // 0x0078(0x0050) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerFaceCurvesAnimationMap");
		return ptr;
	}



};

// Class Tiger.TigerAnimInstance
// 0x0100 (FullSize[0x03B8] - InheritedSize[0x02B8])
class UTigerAnimInstance : public UAnimInstance
{
public:
	unsigned char                                      UnknownData_J6UO[0x8];                                     // 0x02B8(0x0008) Fix Super Size
	class UPoseAsset*                                  FacePoseAsset;                                             // 0x02C0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                               FacePoseAnimation;                                         // 0x02C8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBlendSpace*                                 BlockStanceBlendSpace;                                     // 0x02D0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_5BQ4[0x50];                                    // 0x02D8(0x0050) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UTigerAnimationSetAsset*                     DefaultAnimationSet;                                       // 0x0328(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UClass*                                      FaceCurvesAnimationMap;                                    // 0x0330(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FName>                               AvailableFaceCurves;                                       // 0x0338(0x0010) (Edit, BlueprintVisible, ZeroConstructor, Transient, EditConst, Protected, NativeAccessSpecifierProtected)
	class UTigerAnimationFilter*                       FacialAnimationFilter;                                     // 0x0348(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTigerAnimationSetCollection*                AnimationSetCollection;                                    // 0x0350(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTigerAnimationSetCollection*                PreviousAnimationSetCollection;                            // 0x0358(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAnimMontage*                                LatestFacialAnim;                                          // 0x0360(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                                     Velocity;                                                  // 0x0368(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                                     PreviousVelocity;                                          // 0x0374(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              Speed;                                                     // 0x0380(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              Direction;                                                 // 0x0384(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              AimAnglePitch;                                             // 0x0388(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              AimAngleYaw;                                               // 0x038C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_NY36[0x4];                                     // 0x0390(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               bIsDead;                                                   // 0x0394(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bShooting;                                                 // 0x0395(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bIsBlocking;                                               // 0x0396(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bIsMontagePlaying;                                         // 0x0397(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_WF6C[0x4];                                     // 0x0398(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              MaxRootYawOffset;                                          // 0x039C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              MaxAimingRootYawOffset;                                    // 0x03A0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              RootYawOffset;                                             // 0x03A4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              SmoothCharacterYaw;                                        // 0x03A8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              CharacterYawLastTick;                                      // 0x03AC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              CharacterYawChangeOverFrame;                               // 0x03B0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              CharacterDeltaYawSmooth;                                   // 0x03B4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerAnimInstance");
		return ptr;
	}



	void WeaponTypeBranch(Tiger_ETigerEquippedWeaponType* WeaponType);
	void UpdateAnimNotifyIKAlphaBlendOnBones(float DeltaTime);
	void TurnInPlace(bool bInIsStandingOnGround);
	void OnSuccessfulMeleeHit();
	void OnSettle(const struct FTigerSettleEvent& SettleEvent);
	void OnMeleeAttack(int InAttackIndex);
	void OnInitiateAnimationBlueprint();
	void OnFootstep(bool bIsLeftFoot, float FootstepDuration);
	void OnFiredWeapon(bool bInSecondaryWeaponFired);
	void OnChangeAnimationSet();
	bool IsActiveMontageRootMotion();
	class UAnimSequence* GetSequence(const struct FName& SequenceName);
	class UAnimMontage* GetRandomMontage(const struct FName& MontageListName);
	class UTigerRandomSequenceList* GetRandomAnimationSequenceList(const struct FName& SequenceListName);
	class UTigerRandomSequenceList* GetPreviousRandomAnimationSequenceList(const struct FName& SequenceListName);
	class UBlendSpace* GetPreviousBlendSpace(const struct FName& BlendSpaceName);
	class UAnimMontage* GetMontage(const struct FName& InMontageName);
	void GetFaceAnimSlotsWithActiveCurves(struct FName* OutSlot0, struct FName* OutSlot1, struct FName* OutSlot2, struct FName* OutSlot3);
	class UAnimSequence* GetFaceAnimationForCurve(const struct FName& CurveName);
	class UBlendSpace1D* GetBlendSpace1D(const struct FName& BlendSpace1DName);
	class UBlendSpace* GetBlendSpace(const struct FName& BlendSpaceName);
	class UTigerAnimationSetAsset* GetAnimSetAssetFromWeaponClass(class UClass* InWeaponClass);
	bool GetAnimNotifyIKDataForBone(const struct FName& BoneName, struct FTigerAnimNotifyIKData* IKData);
	void AddSets(class UTigerAnimationSetCollection* SetCollection);
	void AbortFacialAnimCallback();
};

// Class Tiger.TigerAnimNotiftyStateFlying
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UTigerAnimNotiftyStateFlying : public UAnimNotifyState
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerAnimNotiftyStateFlying");
		return ptr;
	}



};

// Class Tiger.TigerAnimNotify_AddProps
// 0x0018 (FullSize[0x0050] - InheritedSize[0x0038])
class UTigerAnimNotify_AddProps : public UAnimNotify
{
public:
	class UClass*                                      PropDummyClass;                                            // 0x0038(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FName>                               PropsToSpawn;                                              // 0x0040(0x0010) (Edit, BlueprintReadOnly, ZeroConstructor, Protected, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerAnimNotify_AddProps");
		return ptr;
	}



};

// Class Tiger.TigerAnimNotify_CameraAnimation
// 0x0010 (FullSize[0x0048] - InheritedSize[0x0038])
class UTigerAnimNotify_CameraAnimation : public UAnimNotify
{
public:
	class UCameraAnim*                                 CameraAnimation;                                           // 0x0038(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              AnimationRate;                                             // 0x0040(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_HLAG[0x4];                                     // 0x0044(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerAnimNotify_CameraAnimation");
		return ptr;
	}



};

// Class Tiger.TigerAnimNotify_CameraShake
// 0x0010 (FullSize[0x0048] - InheritedSize[0x0038])
class UTigerAnimNotify_CameraShake : public UAnimNotify
{
public:
	class UClass*                                      ShakeType;                                                 // 0x0038(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ShakeScale;                                                // 0x0040(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_VMP1[0x4];                                     // 0x0044(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerAnimNotify_CameraShake");
		return ptr;
	}



};

// Class Tiger.TigerAnimNotify_Discipline
// 0x0008 (FullSize[0x0040] - InheritedSize[0x0038])
class UTigerAnimNotify_Discipline : public UAnimNotify
{
public:
	Tiger_ETigerDisciplinesEnum                        Discipline;                                                // 0x0038(0x0001) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	Tiger_ETigerDisciplineEvent                        DisciplineEvent;                                           // 0x0039(0x0001) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_EQO5[0x6];                                     // 0x003A(0x0006) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerAnimNotify_Discipline");
		return ptr;
	}



};

// Class Tiger.TigerAnimNotify_DropProps
// 0x0000 (FullSize[0x0038] - InheritedSize[0x0038])
class UTigerAnimNotify_DropProps : public UAnimNotify
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerAnimNotify_DropProps");
		return ptr;
	}



};

// Class Tiger.TigerAnimNotify_Footstep
// 0x0008 (FullSize[0x0040] - InheritedSize[0x0038])
class UTigerAnimNotify_Footstep : public UAnimNotify
{
public:
	bool                                               bIsLeftFoot;                                               // 0x0038(0x0001) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_YQUP[0x3];                                     // 0x0039(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              FootstepDuration;                                          // 0x003C(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerAnimNotify_Footstep");
		return ptr;
	}



	void SetData(bool bIsLeftFootIn, float FootstepDurationIn);
};

// Class Tiger.TigerAnimNotify_Melee
// 0x0008 (FullSize[0x0040] - InheritedSize[0x0038])
class UTigerAnimNotify_Melee : public UAnimNotify
{
public:
	struct FName                                       EventName;                                                 // 0x0038(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerAnimNotify_Melee");
		return ptr;
	}



};

// Class Tiger.TigerAnimNotify_NiagaraEffect
// 0x0048 (FullSize[0x0080] - InheritedSize[0x0038])
class UTigerAnimNotify_NiagaraEffect : public UAnimNotify
{
public:
	struct FSoftObjectPath                             NiagaraPath;                                               // 0x0038(0x0018) (Edit, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UNiagaraSystem*                              CachedNiagaraEffect;                                       // 0x0050(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FName                                       AttachPointName;                                           // 0x0058(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FVector                                     EffectLocation;                                            // 0x0060(0x000C) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FRotator                                    EffectRotation;                                            // 0x006C(0x000C) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPrivate)
	TEnumAsByte<Engine_EAttachLocation>                AttachLocationRule;                                        // 0x0078(0x0001) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               bOnlySpawnOnLocalPlayer;                                   // 0x0079(0x0001) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_FMZB[0x6];                                     // 0x007A(0x0006) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerAnimNotify_NiagaraEffect");
		return ptr;
	}



};

// Class Tiger.TigerAnimNotify_ParticleEffect
// 0x0040 (FullSize[0x00D0] - InheritedSize[0x0090])
class UTigerAnimNotify_ParticleEffect : public UAnimNotify_PlayParticleEffect
{
public:
	class UParticleSystem*                             IndoorPSTemplate;                                          // 0x0090(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystem*                             OutdoorPSTemplate;                                         // 0x0098(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	Tiger_ETigerPlayOnClients                          PlayOnClients;                                             // 0x00A0(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_EU0S[0x1F];                                    // 0x00A1(0x001F) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UTigerParticleStrategyChooseSystem*          ChooseParticleSystemOverride;                              // 0x00C0(0x0008) (Edit, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTigerParticleStrategyPostSpawn*             ParticlePostSpawnModification;                             // 0x00C8(0x0008) (Edit, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerAnimNotify_ParticleEffect");
		return ptr;
	}



};

// Class Tiger.TigerAnimNotify_PlayCharEffect
// 0x0010 (FullSize[0x0048] - InheritedSize[0x0038])
class UTigerAnimNotify_PlayCharEffect : public UAnimNotify
{
public:
	class UClass*                                      Effect;                                                    // 0x0038(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FName                                       SocketToUse;                                               // 0x0040(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerAnimNotify_PlayCharEffect");
		return ptr;
	}



};

// Class Tiger.TigerAnimNotify_PlayVoEvent
// 0x0008 (FullSize[0x0040] - InheritedSize[0x0038])
class UTigerAnimNotify_PlayVoEvent : public UAnimNotify
{
public:
	struct FTigerNpcVoCategory                         VoCategory;                                                // 0x0038(0x0008) (Edit, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerAnimNotify_PlayVoEvent");
		return ptr;
	}



};

// Class Tiger.TigerAnimNotify_PrimeWeapon
// 0x0000 (FullSize[0x0038] - InheritedSize[0x0038])
class UTigerAnimNotify_PrimeWeapon : public UAnimNotify
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerAnimNotify_PrimeWeapon");
		return ptr;
	}



};

// Class Tiger.TigerAnimNotify_Ragdoll
// 0x0010 (FullSize[0x0048] - InheritedSize[0x0038])
class UTigerAnimNotify_Ragdoll : public UAnimNotify
{
public:
	struct FName                                       RagdollOnlyBelowBone;                                      // 0x0038(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bIncludeNamedBone;                                         // 0x0040(0x0001) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_HC3N[0x3];                                     // 0x0041(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              VelocityScale;                                             // 0x0044(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerAnimNotify_Ragdoll");
		return ptr;
	}



};

// Class Tiger.TigerAnimNotify_Recklessness
// 0x0008 (FullSize[0x0040] - InheritedSize[0x0038])
class UTigerAnimNotify_Recklessness : public UAnimNotify
{
public:
	bool                                               bActivate;                                                 // 0x0038(0x0001) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_EIEM[0x7];                                     // 0x0039(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerAnimNotify_Recklessness");
		return ptr;
	}



};

// Class Tiger.TigerAnimNotify_ReloadComplete
// 0x0000 (FullSize[0x0038] - InheritedSize[0x0038])
class UTigerAnimNotify_ReloadComplete : public UAnimNotify
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerAnimNotify_ReloadComplete");
		return ptr;
	}



};

// Class Tiger.TigerAnimNotify_ReloadFull
// 0x0000 (FullSize[0x0038] - InheritedSize[0x0038])
class UTigerAnimNotify_ReloadFull : public UAnimNotify
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerAnimNotify_ReloadFull");
		return ptr;
	}



};

// Class Tiger.TigerAnimNotify_ReloadSingle
// 0x0000 (FullSize[0x0038] - InheritedSize[0x0038])
class UTigerAnimNotify_ReloadSingle : public UAnimNotify
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerAnimNotify_ReloadSingle");
		return ptr;
	}



};

// Class Tiger.TigerAnimNotify_SetCapContext
// 0x0008 (FullSize[0x0040] - InheritedSize[0x0038])
class UTigerAnimNotify_SetCapContext : public UAnimNotify
{
public:
	struct FName                                       ContextName;                                               // 0x0038(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerAnimNotify_SetCapContext");
		return ptr;
	}



};

// Class Tiger.TigerAnimNotify_SpawnMesh
// 0x0038 (FullSize[0x0070] - InheritedSize[0x0038])
class UTigerAnimNotify_SpawnMesh : public UAnimNotify
{
public:
	class UStaticMesh*                                 MeshToSpawn;                                               // 0x0038(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       SocketToSpawnFrom;                                         // 0x0040(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     Direction[0x2];                                            // 0x0048(0x0018) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              Speed[0x2];                                                // 0x0060(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              RandomAngularImpulseStrength;                              // 0x0068(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bShowInEditor;                                             // 0x006C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_ZK7R[0x3];                                     // 0x006D(0x0003) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerAnimNotify_SpawnMesh");
		return ptr;
	}



};

// Class Tiger.TigerAnimNotify_TriggerUpdateWpnAppearance
// 0x0000 (FullSize[0x0038] - InheritedSize[0x0038])
class UTigerAnimNotify_TriggerUpdateWpnAppearance : public UAnimNotify
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerAnimNotify_TriggerUpdateWpnAppearance");
		return ptr;
	}



};

// Class Tiger.TigerAnimNotifyState_AbortAnimationOnInput
// 0x0008 (FullSize[0x0038] - InheritedSize[0x0030])
class UTigerAnimNotifyState_AbortAnimationOnInput : public UAnimNotifyState
{
public:
	float                                              BlendOutTime;                                              // 0x0030(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bShouldAbortOnMovement;                                    // 0x0034(0x0001) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bShouldAbortOnHeldBlock;                                   // 0x0035(0x0001) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_NHFD[0x2];                                     // 0x0036(0x0002) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerAnimNotifyState_AbortAnimationOnInput");
		return ptr;
	}



};

// Class Tiger.TigerAnimNotifyState_CameraPresetOverride
// 0x0008 (FullSize[0x0038] - InheritedSize[0x0030])
class UTigerAnimNotifyState_CameraPresetOverride : public UAnimNotifyState
{
public:
	class UClass*                                      CameraPreset;                                              // 0x0030(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerAnimNotifyState_CameraPresetOverride");
		return ptr;
	}



};

// Class Tiger.TigerAnimNotifyState_CancelReactionIfThreatened
// 0x0008 (FullSize[0x0038] - InheritedSize[0x0030])
class UTigerAnimNotifyState_CancelReactionIfThreatened : public UAnimNotifyState
{
public:
	Tiger_ETigerAIAnimationMode                        StateToCancelFor;                                          // 0x0030(0x0001) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_N5ZQ[0x7];                                     // 0x0031(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerAnimNotifyState_CancelReactionIfThreatened");
		return ptr;
	}



	void OnReactionCanceled(class ATigerNPC* NPC);
};

// Class Tiger.TigerAnimNotifyState_DamageImmunity
// 0x0010 (FullSize[0x0040] - InheritedSize[0x0030])
class UTigerAnimNotifyState_DamageImmunity : public UAnimNotifyState
{
public:
	TArray<class UClass*>                              ImmunityTo;                                                // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerAnimNotifyState_DamageImmunity");
		return ptr;
	}



};

// Class Tiger.TigerAnimNotifyState_EnableTurnStart
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UTigerAnimNotifyState_EnableTurnStart : public UAnimNotifyState
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerAnimNotifyState_EnableTurnStart");
		return ptr;
	}



};

// Class Tiger.TigerAnimNotifyState_EnableWeaponHitbox
// 0x0020 (FullSize[0x0050] - InheritedSize[0x0030])
class UTigerAnimNotifyState_EnableWeaponHitbox : public UAnimNotifyState
{
public:
	unsigned char                                      UnknownData_W1TJ[0x10];                                    // 0x0030(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UCurveFloat*                                 pitchOffsetCurve;                                          // 0x0040(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int                                                WeaponIndex;                                               // 0x0048(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_LJEQ[0x4];                                     // 0x004C(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerAnimNotifyState_EnableWeaponHitbox");
		return ptr;
	}



};

// Class Tiger.TigerAnimNotifyState_FaceCameraDirection
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UTigerAnimNotifyState_FaceCameraDirection : public UAnimNotifyState
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerAnimNotifyState_FaceCameraDirection");
		return ptr;
	}



};

// Class Tiger.TigerAnimNotifyState_HeavyAttackRange
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UTigerAnimNotifyState_HeavyAttackRange : public UAnimNotifyState
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerAnimNotifyState_HeavyAttackRange");
		return ptr;
	}



	void OnChargeUpEnded(class ATigerPlayer* Player, class UTigerMeleeWeapon* EquippedWeapon, float ChargeUpRatio);
	class UTigerMeleeWeapon* GetEquippedWeapon(class USkeletalMeshComponent* MeshComp);
};

// Class Tiger.TigerAnimNotifyState_HideWeapon
// 0x0008 (FullSize[0x0038] - InheritedSize[0x0030])
class UTigerAnimNotifyState_HideWeapon : public UAnimNotifyState
{
public:
	Tiger_ETigerTriggerUpdateWpnAppearance             WeaponAppearanceUpdate;                                    // 0x0030(0x0001) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_NASU[0x7];                                     // 0x0031(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerAnimNotifyState_HideWeapon");
		return ptr;
	}



};

// Class Tiger.TigerAnimNotifyState_Invulnerability
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UTigerAnimNotifyState_Invulnerability : public UAnimNotifyState
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerAnimNotifyState_Invulnerability");
		return ptr;
	}



};

// Class Tiger.TigerAnimNotifyState_LockOwner
// 0x0008 (FullSize[0x0038] - InheritedSize[0x0030])
class UTigerAnimNotifyState_LockOwner : public UAnimNotifyState
{
public:
	bool                                               bStopActiveMovement;                                       // 0x0030(0x0001) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_GJ0A[0x7];                                     // 0x0031(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerAnimNotifyState_LockOwner");
		return ptr;
	}



};

// Class Tiger.TigerAnimNotifyState_MeleeRecoveryEnableMove
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UTigerAnimNotifyState_MeleeRecoveryEnableMove : public UAnimNotifyState
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerAnimNotifyState_MeleeRecoveryEnableMove");
		return ptr;
	}



};

// Class Tiger.TigerAnimNotifyState_OverrideCanInteractInDodge
// 0x0008 (FullSize[0x0038] - InheritedSize[0x0030])
class UTigerAnimNotifyState_OverrideCanInteractInDodge : public UAnimNotifyState
{
public:
	class UClass*                                      RequiredWeapon;                                            // 0x0030(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerAnimNotifyState_OverrideCanInteractInDodge");
		return ptr;
	}



};

// Class Tiger.TigerAnimNotifyState_RangedHitAnimInterruptRange
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UTigerAnimNotifyState_RangedHitAnimInterruptRange : public UAnimNotifyState
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerAnimNotifyState_RangedHitAnimInterruptRange");
		return ptr;
	}



};

// Class Tiger.TigerAnimNotifyState_ResetCloth
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UTigerAnimNotifyState_ResetCloth : public UAnimNotifyState
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerAnimNotifyState_ResetCloth");
		return ptr;
	}



};

// Class Tiger.TigerAnimNotifyState_TimedIndoorOutDoorParticleEffect
// 0x0048 (FullSize[0x0078] - InheritedSize[0x0030])
class UTigerAnimNotifyState_TimedIndoorOutDoorParticleEffect : public UAnimNotifyState
{
public:
	class UParticleSystem*                             IndoorPSTemplate;                                          // 0x0030(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UParticleSystem*                             OutdoorPSTemplate;                                         // 0x0038(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	Tiger_ETigerPlayOnClients                          PlayOnClients;                                             // 0x0040(0x0001) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_RDU1[0x3];                                     // 0x0041(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FName                                       SocketName;                                                // 0x0044(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FVector                                     LocationOffset;                                            // 0x004C(0x000C) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FRotator                                    RotationOffset;                                            // 0x0058(0x000C) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPrivate)
	bool                                               bDestroyAtEnd;                                             // 0x0064(0x0001) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_4A3D[0x3];                                     // 0x0065(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UTigerParticleStrategyChooseSystem*          ChooseParticleSystemOverride;                              // 0x0068(0x0008) (Edit, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTigerParticleStrategyPostSpawn*             ParticlePostSpawnModification;                             // 0x0070(0x0008) (Edit, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerAnimNotifyState_TimedIndoorOutDoorParticleEffect");
		return ptr;
	}



};

// Class Tiger.TigerAnimNotifyState_WallGrindFX
// 0x0010 (FullSize[0x0040] - InheritedSize[0x0030])
class UTigerAnimNotifyState_WallGrindFX : public UAnimNotifyState
{
public:
	TArray<struct FName>                               SocketsToUse;                                              // 0x0030(0x0010) (Edit, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerAnimNotifyState_WallGrindFX");
		return ptr;
	}



};

// Class Tiger.TigerAnimNotifyState_WeaponGlow
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UTigerAnimNotifyState_WeaponGlow : public UAnimNotifyState
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerAnimNotifyState_WeaponGlow");
		return ptr;
	}



	void OnWeaponGlowEnd(class USkeletalMeshComponent* WeaponMeshComponent, class UTigerMeleeWeaponTrailConfig* WeaponEffectsConfig);
	void OnWeaponGlowBegin(class USkeletalMeshComponent* WeaponMeshComponent, class UTigerMeleeWeaponTrailConfig* WeaponEffectsConfig);
};

// Class Tiger.TigerAnimNotifyState_WeaponTrail
// 0x0028 (FullSize[0x0058] - InheritedSize[0x0030])
class UTigerAnimNotifyState_WeaponTrail : public UAnimNotifyState
{
public:
	int                                                WeaponIndex;                                               // 0x0030(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_5HHO[0x4];                                     // 0x0034(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UParticleSystem*                             PSTemplate;                                                // 0x0038(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FName                                       FirstSocketName;                                           // 0x0040(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FName                                       SecondSocketName;                                          // 0x0048(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TEnumAsByte<Engine_ETrailWidthMode>                WidthScaleMode;                                            // 0x0050(0x0001) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_19TX[0x3];                                     // 0x0051(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              WidthScale;                                                // 0x0054(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerAnimNotifyState_WeaponTrail");
		return ptr;
	}



	void OnWeaponTrailsEnd(class USkeletalMeshComponent* WeaponMeshComponent, class UParticleSystemComponent* TrailParticleSystemComponent, class ATigerCharacter* Character);
	void OnWeaponTrailsBegin(class USkeletalMeshComponent* WeaponMeshComponent, class UParticleSystemComponent* TrailParticleSystemComponent, class ATigerCharacter* Character, class UTigerMeleeWeaponTrailConfig* WeaponTrailConfig);
};

// Class Tiger.TigerAnimNotifyStateAttachMesh
// 0x0018 (FullSize[0x0048] - InheritedSize[0x0030])
class UTigerAnimNotifyStateAttachMesh : public UAnimNotifyState
{
public:
	class UStaticMesh*                                 MeshToSpawn;                                               // 0x0030(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FName                                       SocketName;                                                // 0x0038(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bShowInEditor;                                             // 0x0040(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_WEPL[0x3];                                     // 0x0041(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              PropTimeout;                                               // 0x0044(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerAnimNotifyStateAttachMesh");
		return ptr;
	}



};

// Class Tiger.TigerAnimNotifyStateJdgSword
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UTigerAnimNotifyStateJdgSword : public UAnimNotifyState
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerAnimNotifyStateJdgSword");
		return ptr;
	}



};

// Class Tiger.TigerANS_DeltaCorrectionWindow
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UTigerANS_DeltaCorrectionWindow : public UAnimNotifyState
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerANS_DeltaCorrectionWindow");
		return ptr;
	}



};

// Class Tiger.TigerAnsSidewaysClimbBlocker
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UTigerAnsSidewaysClimbBlocker : public UAnimNotifyState
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerAnsSidewaysClimbBlocker");
		return ptr;
	}



};

// Class Tiger.TigerApartmentArchetype
// 0x0028 (FullSize[0x0250] - InheritedSize[0x0228])
class ATigerApartmentArchetype : public AActor
{
public:
	class USceneComponent*                             Root;                                                      // 0x0228(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USceneComponent*                             Min;                                                       // 0x0230(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USceneComponent*                             Max;                                                       // 0x0238(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UMaterialInterface*>                  PossibleWallpapers;                                        // 0x0240(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerApartmentArchetype");
		return ptr;
	}



};

// Class Tiger.TigerApartmentLight
// 0x0000 (FullSize[0x0228] - InheritedSize[0x0228])
class ATigerApartmentLight : public AActor
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerApartmentLight");
		return ptr;
	}



};

// Class Tiger.TigerWidget
// 0x0020 (FullSize[0x0280] - InheritedSize[0x0260])
class UTigerWidget : public UUserWidget
{
public:
	unsigned char                                      UnknownData_KK49[0x8];                                     // 0x0260(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UTigerTooltipWidget*                         TigerTooltipWidget;                                        // 0x0268(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FTigerTooltipAction>                 TooltipActions;                                            // 0x0270(0x0010) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, ContainsInstancedReference, Protected, ExposeOnSpawn, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerWidget");
		return ptr;
	}



	void UpdateScrollOffsetFromGamepadInput(class UScrollBox* ScrollBox);
	bool ShouldIgnoreVisibilityChanges();
	class UTigerTooltipWidget* ReuseOrCreateNewTooltipWidget(class UClass* InTooltipClass);
	void PostAkEvent(class UAkAudioEvent* AudioEvent);
	void OnPlayerStateReceived(class ATigerPlayerState* InPlayerState);
	bool IsSharkmobAccountLoginsEnabled();
	void IncrementCollapseVisibility();
	class ATigerPlayer* GetViewTargetTigerPlayer();
	class ATigerSpectatorPawn* GetTigerSpectator();
	class ATigerPlayerState* GetTigerPlayerState();
	class ATigerPlayerController* GetTigerPlayerController();
	class ATigerPlayer* GetTigerPlayer();
	class UTigerPersistentPlayerState* GetTigerPersistentPlayerState();
	class ATigerMatchHUD* GetTigerMatchHUD();
	class ATigerMatchGameState* GetTigerMatchGameState();
	class ATigerElysiumHUD* GetTigerElysiumHUD();
	class ATigerHUD* GetTigerBaseHUD();
	class ATigerPlayer* GetSpectatedTigerPlayer();
	float GetScrollOffsetFromGamepadInput();
	class UWidget* GetRootWidget();
	class UTigerPartyManager* GetPartyManager();
	void DecrementCollapseVisibility();
	class UTigerTooltipWidget* ConstructTooltipWidget();
	void CallReleasedForAction(const struct FName& InputAction);
	void CallPressedForAction(const struct FName& InputAction);
	void AddTooltipAction(const struct FTigerTooltipAction& NewTooltipAction, const struct FScriptDelegate& OnPressed, const struct FScriptDelegate& OnReleased);
};

// Class Tiger.TigerArchetypeLevelWidget
// 0x0010 (FullSize[0x0290] - InheritedSize[0x0280])
class UTigerArchetypeLevelWidget : public UTigerWidget
{
public:
	int                                                ArchetypeLevel;                                            // 0x0280(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class ATigerPlayer>                 RepresentedPlayer;                                         // 0x0284(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_3M6Q[0x4];                                     // 0x028C(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerArchetypeLevelWidget");
		return ptr;
	}



	void UpdateArchetypeLevel();
	void OnSelectedCharacterChanged(class UTigerPersistentPlayerState* InPersistentPlayerState);
	void OnArchetypeChanged(class UTigerPlayerClanData* InClanData, class UTigerPowerKit* InArchetypeData);
	void Init(class ATigerPlayer* InRepresentedPlayer);
};

// Class Tiger.TigerMenuWidget
// 0x0010 (FullSize[0x0290] - InheritedSize[0x0280])
class UTigerMenuWidget : public UTigerWidget
{
public:
	class UTigerSharedMouseCursor*                     SharedMouseCursor;                                         // 0x0280(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bStopPlayerInteractionsOnOpen;                             // 0x0288(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_X81T[0x1];                                     // 0x0289(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               bShouldCloseOtherMenusOnOpen;                              // 0x028A(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_2XZ2[0x5];                                     // 0x028B(0x0005) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerMenuWidget");
		return ptr;
	}



	bool TryMakeDateTime(int InYear, int InMonth, int InDay, struct FDateTime* OutDateTime);
	void Open();
	void OnPersistentPlayerStateInitialized(class UTigerPersistentPlayerState* InPersistentPlayerState);
	void OnPersistentPlayerInitialized(class ATigerPlayerController* InPlayerController);
	void OnOpen();
	void OnClose();
	bool IsOpen();
	void Close();
};

// Class Tiger.TigerIngameSubmenuWidget
// 0x0028 (FullSize[0x02B8] - InheritedSize[0x0290])
class UTigerIngameSubmenuWidget : public UTigerMenuWidget
{
public:
	struct FText                                       MenuName;                                                  // 0x0290(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class UTigerIngameMenuWidget*                      MenuContainer;                                             // 0x02A8(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, InstancedReference, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               InGameMenuEnabled;                                         // 0x02B0(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	Tiger_ETigerNewNotificationMenuOptions             NewNotificationMenuOption;                                 // 0x02B1(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_L5E5[0x6];                                     // 0x02B2(0x0006) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerIngameSubmenuWidget");
		return ptr;
	}



	void UnregisterSharedInputs();
	void RegisterSharedInputs();
};

// Class Tiger.TigerSceneBackgroundUI
// 0x00F8 (FullSize[0x03B0] - InheritedSize[0x02B8])
class UTigerSceneBackgroundUI : public UTigerIngameSubmenuWidget
{
public:
	unsigned char                                      DefaultSubLevel[0x28];                                     // 0x02B8(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	unsigned char                                      UnknownData_AOO6[0x8];                                     // 0x02E0(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UTigerSubLevelList*                          SubLevelList;                                              // 0x02E8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FName                                       DefaultCameraTag;                                          // 0x02F0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FName                                       SpawnLocationTag;                                          // 0x02F8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FViewTargetTransitionParams                 CameraTransitionParams;                                    // 0x0300(0x0010) (Edit, NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      ItemPreviews[0x28];                                        // 0x0310(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	struct FName                                       ItemParentTag;                                             // 0x0338(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ATigerSingleChildActor*                      ItemParentActor;                                           // 0x0340(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      CurrentPreviewItem[0x28];                                  // 0x0348(0x0028) UNKNOWN PROPERTY: SoftClassProperty
	TArray<class ACineCameraActor*>                    CinematicCameras;                                          // 0x0370(0x0010) (ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_O7XX[0x20];                                    // 0x0380(0x0020) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnBackgroundShown;                                         // 0x03A0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerSceneBackgroundUI");
		return ptr;
	}



	bool TransitionToCameraWithTag(const struct FName& CameraTag, bool bUseCameraTransition);
	void ShowDefaultBackgroundScene();
	void ShowBackgroundScene(int InSubLevelIndex);
	void RetryPreviewItem();
	void PreviewReward(const struct FTigerItemId& ItemId);
	void PreviewItem();
	void OnPreviewItemUpdated(class UTigerInventoryItemBase* InPreviewItem, class ATigerBattlepassRewardPreview* InPreviewActor, class UTigerInventoryItemBase* InCombinedItemParent);
	void OnBackgroundSceneShownNative();
	void OnBackgroundSceneShown();
	void HidePreviewItem();
	TArray<class AActor*> GetCurrentPaperDollArray(const struct FName& InBattlePassSubLevelName);
};

// Class Tiger.TigerArchetypeSelectElysiumUI
// 0x0020 (FullSize[0x03D0] - InheritedSize[0x03B0])
class UTigerArchetypeSelectElysiumUI : public UTigerSceneBackgroundUI
{
public:
	TArray<struct FTigerPersistentPlayerCharacter>     PlayerCharacters;                                          // 0x03B0(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	struct FTigerItemId                                AdditionalCharacterSlotItem;                               // 0x03C0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      NumCharacterSlots;                                         // 0x03C8(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_4IBM[0x7];                                     // 0x03C9(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerArchetypeSelectElysiumUI");
		return ptr;
	}



	void SelectCharacter(const struct FTigerPersistentCharacterID& InCharacterId);
	void OnSelectedCharacterChanged(class UTigerPersistentPlayerState* InPersistentPlayerState);
	void OnPlayerInventoryChanged(class UTigerPersistentPlayerState* InPersistentPlayerState);
	void OnGotPlayerCharacters(TArray<struct FTigerPersistentPlayerCharacter> InCharacters, const struct FString& InErrorString);
	void OnBuyCharacterSlotServerResponse(bool bInSuccess, const struct FTigerItemId& InItemId, const struct FString& InErrorMessage);
	void OnBuyCharacterSlotResults(bool bInSuccess, const struct FString& InErrorString);
	void OnArchetypeChanged(class UTigerPowerKit* InArchetypeData, TArray<int> InPlayerArchetypeCharacterIndices);
	struct FTigerItemIdWithPrice GetAdditionalSlotPrice();
	void CreateNewCharacter(class UTigerPowerKit* InArchetypeData);
	void ChangeArchetype(class UTigerPowerKit* InArchetypeData);
	void BuyAdditionalCharacterSlot();
};

// Class Tiger.TigerArchetypeSelectPragueUI
// 0x0068 (FullSize[0x02F8] - InheritedSize[0x0290])
class UTigerArchetypeSelectPragueUI : public UTigerMenuWidget
{
public:
	int                                                GroupSize;                                                 // 0x0290(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                PreGameStateEndTime;                                       // 0x0294(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FString                                     PreHighlightTag;                                           // 0x0298(0x0010) (Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              TimeLeftUntilStateChange;                                  // 0x02A8(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	Tiger_ETigerArchetypeSelectUiState                 UiState;                                                   // 0x02AC(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_KNNT[0x3];                                     // 0x02AD(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FTigerPersistentPlayerCharacter>     PlayerCharacters;                                          // 0x02B0(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	Tiger_ETigerPowerKitType                           SelectedArchetypeType;                                     // 0x02C0(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_ATGT[0x7];                                     // 0x02C1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UTigerPreMatchPaperDollComponent*            PreMatchPaperDollComp;                                     // 0x02C8(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_4D8Y[0x28];                                    // 0x02D0(0x0028) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerArchetypeSelectPragueUI");
		return ptr;
	}



	void SelectCharacterForArchetype(class UTigerPowerKit* InArchetypeData);
	void OnUiStateChanged(Tiger_ETigerArchetypeSelectUiState InPreviousUiState);
	void OnPlayerCharactersReceived(TArray<struct FTigerPersistentPlayerCharacter> InCharacters, const struct FString& InErrorString);
	void OnPlayerChangedSelection(class ATigerPlayerState* InPlayerState);
	void OnGroupMembersChanged(class UTigerGroupStateComponent* InGroupStateComponent, TArray<class ATigerPlayerState*> InPreviousGroupMembers);
	void OnArchetypeSelectionLocked(class ATigerPlayerState* InPlayerState, Tiger_ETigerPowerKitType InArchetype);
	float GetSecondsLeftUntilPlayerSelection(Tiger_ETigerArchetypeSelectUiState InPlayerUiState);
	void EnablePaperDollHighlight(class ATigerPaperDoll* InPaperDoll, bool bInEnable);
};

// Class Tiger.TigerAreaEffect
// 0x0298 (FullSize[0x04C0] - InheritedSize[0x0228])
class ATigerAreaEffect : public AActor
{
public:
	class UParticleSystem*                             StartParticleType;                                         // 0x0228(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UParticleSystem*                             LoopedParticleType;                                        // 0x0230(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UParticleSystem*                             EndParticleType;                                           // 0x0238(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UClass*                                      DamageType;                                                // 0x0240(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	Tiger_ETigerDamageCauser                           DamageCauserType;                                          // 0x0248(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_5P71[0x7];                                     // 0x0249(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FRuntimeFloatCurve                          TimeDamageModifierCurve;                                   // 0x0250(0x0088) (Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FRuntimeFloatCurve                          RangeDamageModifierCurve;                                  // 0x02D8(0x0088) (Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FRuntimeFloatCurve                          TimeHealingModifierCurve;                                  // 0x0360(0x0088) (Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FRuntimeFloatCurve                          RangeHealingModifierCurve;                                 // 0x03E8(0x0088) (Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	float                                              Range;                                                     // 0x0470(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              InitialDamageAmount;                                       // 0x0474(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              DamageAmount;                                              // 0x0478(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              InitialHealAmount;                                         // 0x047C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              HealAmount;                                                // 0x0480(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              TickRate;                                                  // 0x0484(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              Duration;                                                  // 0x0488(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              Delay;                                                     // 0x048C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bShouldAffectCivilians;                                    // 0x0490(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_78RE[0x7];                                     // 0x0491(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UParticleSystemComponent*                    LoopedParticleComponent;                                   // 0x0498(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_AY2U[0x20];                                    // 0x04A0(0x0020) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerAreaEffect");
		return ptr;
	}



	void Trigger();
	void OnVehicleHit(class AActor* InActor);
	void OnTriggerClient();
};

// Class Tiger.TigerSimpleTextPrompt
// 0x0028 (FullSize[0x02A8] - InheritedSize[0x0280])
class UTigerSimpleTextPrompt : public UTigerWidget
{
public:
	struct FText                                       DisplayText;                                               // 0x0280(0x0018) (BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	float                                              PromptLifetimeFailsafe;                                    // 0x0298(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bIsVisible;                                                // 0x029C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_Z3DS[0xB];                                     // 0x029D(0x000B) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerSimpleTextPrompt");
		return ptr;
	}



	void SetText(const struct FText& Text);
	void OnShowPrompt();
	void OnHidePrompt();
	void Hide();
	void FailsafeHide();
	bool CanBeShown();
};

// Class Tiger.TigerArtifactPickedupPrompt
// 0x0008 (FullSize[0x02B0] - InheritedSize[0x02A8])
class UTigerArtifactPickedupPrompt : public UTigerSimpleTextPrompt
{
public:
	class UTigerArtifactAsset*                         ArtifactAsset;                                             // 0x02A8(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerArtifactPickedupPrompt");
		return ptr;
	}



	void OnArtifactAssetSet(class UTigerArtifactAsset* InArtifactAsset);
};

// Class Tiger.TigerAsyncChooseNextWaypoint
// 0x0088 (FullSize[0x00F8] - InheritedSize[0x0070])
class UTigerAsyncChooseNextWaypoint : public UBTTaskNode
{
public:
	struct FBlackboardKeySelector                      Index;                                                     // 0x0070(0x0028) (Edit, Protected, NativeAccessSpecifierProtected)
	struct FBlackboardKeySelector                      Waypoint;                                                  // 0x0098(0x0028) (Edit, Protected, NativeAccessSpecifierProtected)
	struct FBlackboardKeySelector                      bWaypointDirectionIsForward;                               // 0x00C0(0x0028) (Edit, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_7V8G[0x10];                                    // 0x00E8(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerAsyncChooseNextWaypoint");
		return ptr;
	}



};

// Class Tiger.TigerAudioVisualizationSpawnerComponent
// 0x0028 (FullSize[0x00D8] - InheritedSize[0x00B0])
class UTigerAudioVisualizationSpawnerComponent : public UActorComponent
{
public:
	class UParticleSystem*                             ParticleSystemToSpawn;                                     // 0x00B0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                MaxSimultaneousVisualizations;                             // 0x00B8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_78HT[0x4];                                     // 0x00BC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FTigerHeightenedSensesAudioVisualization> ActiveVisualizations;                                      // 0x00C0(0x0010) (ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_TNOJ[0x8];                                     // 0x00D0(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerAudioVisualizationSpawnerComponent");
		return ptr;
	}



	void VisualizeAudioEvent(const struct FVector& InLocation, bool InShowOnlyInHeightenedSenses);
};

// Class Tiger.TigerAuthenticationManager
// 0x0130 (FullSize[0x0168] - InheritedSize[0x0038])
class UTigerAuthenticationManager : public UTigerAuthenticationManagerBase
{
public:
	unsigned char                                      UnknownData_8TI7[0x30];                                    // 0x0038(0x0030) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               bEnableSharkmobAccountLogin;                               // 0x0068(0x0001) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_SMJD[0x7];                                     // 0x0069(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UTigerGameInstance*                          GameInstance;                                              // 0x0070(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_28BP[0xF0];                                    // 0x0078(0x00F0) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerAuthenticationManager");
		return ptr;
	}



	bool IsSharkmobAccountLoginsEnabled();
	struct FString GetUserLocation();
	Shark_EShAccountChannel GetAuthenticatedChannel();
};

// Class Tiger.TigerBalconyVolumeDefaultValues
// 0x0010 (FullSize[0x0040] - InheritedSize[0x0030])
class UTigerBalconyVolumeDefaultValues : public UDataAsset
{
public:
	TArray<struct FTigerBuildingSystemBalconyVolumeDefaults> DefaultBalconyVolumeSets;                                  // 0x0030(0x0010) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerBalconyVolumeDefaultValues");
		return ptr;
	}



};

// Class Tiger.TigerNPCFacePoseMap
// 0x0010 (FullSize[0x0038] - InheritedSize[0x0028])
class UTigerNPCFacePoseMap : public UObject
{
public:
	TArray<struct FTigerFacePoseData>                  HeadMeshsPoseAssets;                                       // 0x0028(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerNPCFacePoseMap");
		return ptr;
	}



};

// Class Tiger.TigerCharacter
// 0x02C8 (FullSize[0x0780] - InheritedSize[0x04B8])
class ATigerCharacter : public ACharacter
{
public:
	unsigned char                                      UnknownData_R4LS[0x8];                                     // 0x04B8(0x0008) Fix Super Size
	class UTigerCharacterMeshManager*                  MeshManager;                                               // 0x04C0(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTigerRangedWeaponComponent*                 RangedWeaponComponent;                                     // 0x04C8(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTigerMeleeWeaponComponent*                  MeleeWeaponComponent;                                      // 0x04D0(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTigerCombatComponent*                       CombatComponent;                                           // 0x04D8(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTigerFeedingComponent*                      FeedingComponent;                                          // 0x04E0(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTigerBuffComponent*                         BuffComponent;                                             // 0x04E8(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTigerOutlineComponent*                      OutlineComponent;                                          // 0x04F0(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkComponent*                                AudioComponent;                                            // 0x04F8(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkComponent*                                NonOccludedAudioComponent;                                 // 0x0500(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USceneComponent*                             AdditionalMeshes;                                          // 0x0508(0x0008) (Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USkeletalMeshComponent*                      HeadMesh;                                                  // 0x0510(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USkeletalMeshComponent*                      HoodieMesh;                                                // 0x0518(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USkeletalMeshComponent*                      HairMesh;                                                  // 0x0520(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USkeletalMeshComponent*                      HeadgearMesh;                                              // 0x0528(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USkeletalMeshComponent*                      EyewearMesh;                                               // 0x0530(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USkeletalMeshComponent*                      BodyAdditionalMesh;                                        // 0x0538(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_HQNF[0x18];                                    // 0x0540(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnCharacterAction;                                         // 0x0558(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	bool                                               bIsRootMotionDisabled;                                     // 0x0568(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_KEBV[0x3];                                     // 0x0569(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              BaseMaxHealth;                                             // 0x056C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USkeletalMeshComponent*                      ThirdPersonWeaponMeshRef;                                  // 0x0570(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USkeletalMeshComponent*                      SecondaryWeaponMeshRef;                                    // 0x0578(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USceneComponent*                             ProjectileSpawnRef;                                        // 0x0580(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USceneComponent*                             SecondaryProjectileSpawnRef;                               // 0x0588(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FTigerReplicatedCharacterStats              ReplicatedCharacterStats;                                  // 0x0590(0x0018) (Net, NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_W16Z[0x9C];                                    // 0x05A8(0x009C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               bBlueprintReferencesSetup;                                 // 0x0644(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bShouldRestrictOffensiveActionsInElysium;                  // 0x0645(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_INSV[0x2];                                     // 0x0646(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnCharacterDeath;                                          // 0x0648(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_LJEW[0x30];                                    // 0x0658(0x0030) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              CurrentHealth;                                             // 0x0688(0x0004) (Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_L9OJ[0x4];                                     // 0x068C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnMaxShieldReplicated;                                     // 0x0690(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	uint16_t                                           MaxShield;                                                 // 0x06A0(0x0002) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint16_t                                           CurrentShield;                                             // 0x06A2(0x0002) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              LowHealthThreshold;                                        // 0x06A4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_6J95[0x4];                                     // 0x06A8(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              HitAnimationInterval;                                      // 0x06AC(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_IWK9[0xC];                                     // 0x06B0(0x000C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FVector                                     HealthBarOffset;                                           // 0x06BC(0x000C) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	Tiger_ETigerGender                                 BodyType;                                                  // 0x06C8(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bIsKindred;                                                // 0x06C9(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	Tiger_ETigerCharacterType                          CharacterType;                                             // 0x06CA(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_HWH8[0x1];                                     // 0x06CB(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FName                                       RangedHitAnimationListName;                                // 0x06CC(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FName                                       MeleeHitAnimationListName;                                 // 0x06D4(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_L14K[0x4];                                     // 0x06DC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UPhysicsAsset*                               HitboxPhysicsAsset;                                        // 0x06E0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPhysicsAsset*                               RagdollPhysicsAsset;                                       // 0x06E8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_02ZO[0x10];                                    // 0x06F0(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FTimerHandle                                RagdollTimer;                                              // 0x0700(0x0008) (NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAnimMontage*                                TimedMontageLoop;                                          // 0x0708(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FTimerHandle                                TimedMontageLoopTimer;                                     // 0x0710(0x0008) (NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_K0G9[0x10];                                    // 0x0718(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<TWeakObjectPtr<class ATigerCharacter>>      CharmedByCharacters;                                       // 0x0728(0x0010) (ZeroConstructor, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	bool                                               bIsDodging;                                                // 0x0738(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_Q76K[0x7];                                     // 0x0739(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              SmoothYawInterpSpeed;                                      // 0x0740(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_DI3X[0x4];                                     // 0x0744(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UWidgetComponent*                            HealthBarComponent;                                        // 0x0748(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USkeletalMeshSocket*                         WidgetSocket;                                              // 0x0750(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_RM6F[0x28];                                    // 0x0758(0x0028) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerCharacter");
		return ptr;
	}



	void TriggerLimitedHitAnimation(bool bIsRangedHit);
	float TriggerHitAnimation(bool bInIsRangedHit);
	float TriggerAnimationByName(const struct FName& AnimationMontageName, float PlayRate);
	void TigerOnMaxShieldReplicated__DelegateSignature();
	void TigerOnCharacterDeath__DelegateSignature();
	void TigerOnCharacterAction__DelegateSignature(Tiger_ETigerCharacterAction InCharacterAction);
	void SpawnBloodDecal();
	bool ShouldHealthbarBeVisible();
	void SetBaseMaxHealth(float NewMaxHealth);
	void ReportCharacterAction(Tiger_ETigerCharacterAction Action);
	void RefreshCharacterStats();
	int PostAkEvent(class UAkAudioEvent* AudioEvent, bool bEnableOcclusion);
	void OnWeaponVisualChangedEvent();
	void OnWeaponFired(bool bSecondaryWeaponFired);
	void OnShowDamageAmount(const struct FVector& InHitLocation, const struct FLinearColor& InDamageColor, int InTotalDamageAmount, int InHealthDamageAmount, bool bInHasExtraHealth, bool bInHasShield, float InRangedDamageFalloffPercent);
	void OnRep_MaxShieldChanged(uint16_t InOldMaxShield);
	void OnRep_CurrentShieldChanged();
	void OnRep_CurrentHealth(float InOldHealth);
	void OnPlayMeleeHitEffects(class UTigerMeleeWeapon* WeaponHitBy, const struct FVector& ImpactLocation, const struct FVector& HitDirection);
	void OnLocalDisciplineUseFailed(const struct FDisciplineUse& DisciplineUse);
	void OnLocalDisciplineUse(const struct FDisciplineUse& DisciplineUse, float ExpectedDuration);
	void OnLocalDisciplineReleaseFailed(const struct FDisciplineUse& DisciplineUse);
	void OnLocalDisciplineRelease(const struct FDisciplineUse& DisciplineUse, float ExpectedDuration);
	void OnDodged(bool IsControllingPlayer, bool bLaunchedInAir, const struct FVector& LaunchDirection, unsigned char DodgeStage);
	void OnDisciplineUseSucceeded(const struct FDisciplineUse& DisciplineUse);
	void OnDisciplineReleaseSucceeded(const struct FDisciplineUse& DisciplineUse);
	void OnChangedAkAlignment(Tiger_ETigerCharacterAkAlignmentType InAlignment);
	void Multicast_SetRagdollDeath(bool bEnableRagdoll);
	void Multicast_PostAkEvent(class UAkAudioEvent* AudioEvent, bool bSkipLocallyControlled);
	void Multicast_PlaySoundAtActorLocation(class USoundBase* SoundBase);
	void Multicast_PlayAnimationBroadcastUnreliable(class UAnimMontage* Animation, bool bSkipLocallyControlled);
	void Multicast_PlayAnimationBroadcast(class UAnimMontage* Animation, bool bSkipLocallyControlled);
	void Multicast_OnJumped(int InJumpCount);
	void Multicast_ApplyEffectWithTarget(class UClass* Effect, class ATigerCharacter* Target);
	void Multicast_ApplyEffectWithSocket(class UClass* Effect, const struct FName& SocketName);
	void Multicast_ApplyEffect(class UClass* Effect);
	void Multicast_AbortAnimationBroadcastUnreliable(class UAnimMontage* Animation, bool bSkipLocallyControlled);
	void Multicast_AbortAnimationBroadcast(class UAnimMontage* Animation, bool bSkipLocallyControlled);
	void LocalApplyEffectWithTarget(class UClass* Effect, class ATigerCharacter* Target);
	void LocalApplyEffectWithSocket(class UClass* Effect, const struct FName& SocketName);
	void LocalApplyEffect(class UClass* Effect);
	bool IsSprinting();
	bool IsSimulatedProxy();
	bool IsPlayingAnimationMontage();
	bool IsInvulnerable();
	bool IsInJump();
	bool IsInAir();
	bool IsFriendlyWith(class ATigerCharacter* OtherCharacter);
	bool IsDowned();
	bool IsDead();
	bool IsClimbing();
	bool IsCharacterVisible();
	bool IsBelowLowHealthThreshold(float InHealthOffset);
	class UTigerCharacterMovementComponent* GetTigerCharacterMovement();
	class UTigerAnimInstance* GetTigerAnimInstance();
	float GetSmoothYaw();
	struct FTigerReplicatedCharacterStats GetReplicatedStats();
	struct FTigerNonReplicatedCharacterStats GetNonReplicatedStats();
	float GetMaxShield();
	float GetMaxHealth();
	float GetHeartVisibility();
	float GetCurrentShield();
	float GetCurrentHealthPercentage();
	float GetCurrentHealth();
	float GetBaseMaxHealth();
	Tiger_ETigerCharacterAkAlignmentType GetAkCharacterAlignment();
	struct FRotator GetAimRotation();
	float GetAimAnglePitch();
	float ChangeHealth(float InHealAmount, bool bInOnlyHealRecentDamage);
	void CalculateCharacterStats(struct FTigerCharacterStatModification* AccumulatedStats);
	void AuthorityApplyEffectWithTarget(class UClass* Effect, class ATigerCharacter* Target);
	void AuthorityApplyEffectWithSocket(class UClass* Effect, const struct FName& SocketName);
	void AuthorityApplyEffect(class UClass* Effect);
};

// Class Tiger.TigerBaseNPC
// 0x0220 (FullSize[0x09A0] - InheritedSize[0x0780])
class ATigerBaseNPC : public ATigerCharacter
{
public:
	unsigned char                                      UnknownData_36L4[0x10];                                    // 0x0780(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UTigerHSensesTargetComponent*                HeightenedSensesTargetComponent;                           // 0x0790(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTigerNPCAsset*                              NPCAsset;                                                  // 0x0798(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTigerBloodPotencyComponent*                 BloodPotencyComponent;                                     // 0x07A0(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTigerNPCVisualAsset*                        VisualAsset;                                               // 0x07A8(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTigerNpcPropAsset*                          PropAsset;                                                 // 0x07B0(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      MasqueradeActionResponse;                                  // 0x07B8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      HeadMeshsPoseAssetsClass;                                  // 0x07C0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	Tiger_ETigerNPCType                                NPCType;                                                   // 0x07C8(0x0001) (BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_JHBQ[0x7];                                     // 0x07C9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UTigerInteractiveNpcComponent*               InteractiveNpcComponent;                                   // 0x07D0(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTigerMeshCollection                        ReplicatedMeshCollection;                                  // 0x07D8(0x00F0) (Net, RepNotify, Protected, NativeAccessSpecifierProtected)
	class UClass*                                      ReplicatedAnimationInstanceClass;                          // 0x08C8(0x0008) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ATigerAISplinePath*                          ActiveSplinePath;                                          // 0x08D0(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ATigerNPCSpawningBase*                       Spawner;                                                   // 0x08D8(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USkeletalMeshComponent*                      HeightenedSensesHeartMesh;                                 // 0x08E0(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USkeletalMeshComponent*                      InWorldHeartMesh;                                          // 0x08E8(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              LastTimeReactingToLocalPlayerAction;                       // 0x08F0(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                LastPlayedVoEventId;                                       // 0x08F4(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bHasSightOfLocalPlayer;                                    // 0x08F8(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_OV2X[0x7];                                     // 0x08F9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	Tiger_ETigerBloodType                              BloodType;                                                 // 0x0900(0x0001) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	Tiger_ETigerBloodPotency                           BloodPotency;                                              // 0x0901(0x0001) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_HP23[0x6];                                     // 0x0902(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class ATigerAISplinePath*>                  StoredSplines;                                             // 0x0908(0x0010) (ZeroConstructor, NativeAccessSpecifierPrivate)
	class ATigerWorldCompositionGrid*                  StreamingGrid;                                             // 0x0918(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_Q8PO[0x80];                                    // 0x0920(0x0080) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerBaseNPC");
		return ptr;
	}



	void QueueVoEvent(const struct FName& InVoCategory, bool bInShouldMulticast);
	void PickHeartMeshes();
	void OverrideBloodPotency(Tiger_ETigerBloodPotency InNewBloodPotency);
	void OnStoppedBeingClosestNpcWithPotencyInHeightenedSenses();
	void OnSawLocalPlayerBreachMasquerade();
	void OnRep_ReplicatedAnimationInstanceClassChanged();
	void OnRep_BloodType();
	void OnRep_BloodPotency();
	void OnRep_AdditionalMeshCollectionChanged();
	void OnLostSightOfLocalPlayer(class ATigerPlayer* InPlayer);
	void OnGainedSightOfLocalPlayer(class ATigerPlayer* InPlayer);
	void OnBloodTypeChanged(Tiger_ETigerBloodType InBloodType);
	void OnBloodPotencyChanged(Tiger_ETigerBloodPotency InBloodPotency);
	void OnBecameClosestNpcWithPotencyInHeightenedSenses();
	void Multicast_VerifySimulationLocation(const struct FVector& InAuthorityLocation);
	void Multicast_QueueVoEvent(int8_t InVoCategoryIndex);
	void Multicast_ChangeBlood(Tiger_ETigerBloodPotency InNewBloodPotency, Tiger_ETigerBloodType InNewBloodType);
	class ATigerAiBaseController* GetTigerAiBaseController();
	Tiger_ETigerBloodType GetBloodType();
	Tiger_ETigerBloodPotency GetBloodPotency();
	void DeactivateHeightenedSensesVisualization();
	void AuthoritySetBloodType(Tiger_ETigerBloodType InBloodType);
	void AuthoritySetBloodPotency(Tiger_ETigerBloodPotency InNewBloodPotency);
	void AuthoritySetBlood(Tiger_ETigerBloodPotency InNewBloodPotency, Tiger_ETigerBloodType InNewBloodType);
	void ActivateHeightenedSensesVisualization();
};

// Class Tiger.TigerBaseThrallData
// 0x0098 (FullSize[0x00C8] - InheritedSize[0x0030])
class UTigerBaseThrallData : public UDataAsset
{
public:
	Tiger_ETigerThrallId                               ThrallId;                                                  // 0x0030(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_CCU3[0x7];                                     // 0x0031(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FText                                       ThrallName;                                                // 0x0038(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FText                                       ThrallDescription;                                         // 0x0050(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FText                                       ThrallHintText;                                            // 0x0068(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<class UTexture2D*>                          ThrallPortraits;                                           // 0x0080(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FText                                       ThrallKeepsakeName;                                        // 0x0090(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class UTexture2D*                                  ThrallKeepsakePortrait;                                    // 0x00A8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTigerThrallStats                           StartingStats;                                             // 0x00B0(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class UTigerGrimoireEntry*                         GrimoireEntry;                                             // 0x00C0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerBaseThrallData");
		return ptr;
	}



};

// Class Tiger.TigerBattlepassUI
// 0x0030 (FullSize[0x03E0] - InheritedSize[0x03B0])
class UTigerBattlepassUI : public UTigerSceneBackgroundUI
{
public:
	int                                                MaxPageItems;                                              // 0x03B0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_980W[0x4];                                     // 0x03B4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<int>                                        PageSizes;                                                 // 0x03B8(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	int                                                CurrentPageIndex;                                          // 0x03C8(0x0004) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_GNEG[0x4];                                     // 0x03CC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class UTigerClientSeasonalRewardTier*>      RewardTiers;                                               // 0x03D0(0x0010) (BlueprintVisible, ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerBattlepassUI");
		return ptr;
	}



	void GetPageItemIndices(int PageIndex, int* FirstItemIndex, int* LastItemIndex);
};

// Class Tiger.TigerBelowBalconyEntryTrigger
// 0x0008 (FullSize[0x0268] - InheritedSize[0x0260])
class ATigerBelowBalconyEntryTrigger : public ATriggerVolume
{
public:
	struct FName                                       EnterBalconyFromBelowAnimName;                             // 0x0260(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerBelowBalconyEntryTrigger");
		return ptr;
	}



};

// Class Tiger.TigerBlindingBeautyEffectActor
// 0x0010 (FullSize[0x0238] - InheritedSize[0x0228])
class ATigerBlindingBeautyEffectActor : public AActor
{
public:
	class ATigerPlayer*                                Player;                                                    // 0x0228(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              TriggerTime;                                               // 0x0230(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_KZ8H[0x4];                                     // 0x0234(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerBlindingBeautyEffectActor");
		return ptr;
	}



	void OnDashExit(bool bInShouldTrigger);
	void OnDashEnter();
};

// Class Tiger.TigerBloodDecalTrail
// 0x0008 (FullSize[0x0230] - InheritedSize[0x0228])
class ATigerBloodDecalTrail : public AActor
{
public:
	unsigned char                                      UnknownData_41WO[0x8];                                     // 0x0228(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerBloodDecalTrail");
		return ptr;
	}



};

// Class Tiger.TigerBloodPotencyVisualizationConfig
// 0x0050 (FullSize[0x0080] - InheritedSize[0x0030])
class UTigerBloodPotencyVisualizationConfig : public UDataAsset
{
public:
	TArray<class UMaterialInstance*>                   HeartMeshMaterialTarget;                                   // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	unsigned char                                      NiagaraPath[0x28];                                         // 0x0040(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	class UParticleSystem*                             ParticleSystem;                                            // 0x0068(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       ParticleSystemAttachmentSocket;                            // 0x0070(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bParticleSystemAbsoluteRotation;                           // 0x0078(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_XDEC[0x7];                                     // 0x0079(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerBloodPotencyVisualizationConfig");
		return ptr;
	}



};

// Class Tiger.TigerBloodPotencyComponent
// 0x0170 (FullSize[0x0220] - InheritedSize[0x00B0])
class UTigerBloodPotencyComponent : public UActorComponent
{
public:
	float                                              BloodTypeWeights[0x4];                                     // 0x00B0(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bEnableBloodTypeEffects;                                   // 0x00C0(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_STWO[0x7];                                     // 0x00C1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UTigerBloodPotencyVisualizationConfig*       CurrentHeightenedSensesConfig;                             // 0x00C8(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTigerBloodPotencyVisualizationConfig*       CurrentInWorldConfig;                                      // 0x00D0(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTigerBloodPotencyVisualizationConfig*       HeightenedSensesVisualConfiguration[0x4];                  // 0x00D8(0x0020) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTigerBloodPotencyVisualizationConfig*       HeightenedSensesVisualConfigurationByBloodType[0x4];       // 0x00F8(0x0020) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTigerBloodPotencyVisualizationConfig*       InWorldVisualConfiguration[0x4];                           // 0x0118(0x0020) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTigerBloodPotencyVisualizationConfig*       InWorldVisualConfigurationByBloodType[0x4];                // 0x0138(0x0020) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FName                                       HeartMeshMaximumVisibilityDistanceName;                    // 0x0158(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class UMaterialInstance*>                   HsMeshPreviousMaterials;                                   // 0x0160(0x0010) (ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<class UMaterialInstance*>                   HsMeshTargetMaterials;                                     // 0x0170(0x0010) (ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<class UMaterialInstanceDynamic*>            HsMeshCurrentMaterials;                                    // 0x0180(0x0010) (ZeroConstructor, NativeAccessSpecifierPrivate)
	class USkeletalMeshComponent*                      HsSkeletalMeshComponent;                                   // 0x0190(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UParticleSystemComponent*                    HsParticleSystemComponent;                                 // 0x0198(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UNiagaraComponent*                           HsNiagaraComponent;                                        // 0x01A0(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class UMaterialInstance*>                   InWorldMeshPreviousMaterials;                              // 0x01A8(0x0010) (ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<class UMaterialInstance*>                   InWorldMeshTargetMaterials;                                // 0x01B8(0x0010) (ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<class UMaterialInstanceDynamic*>            InWorldMeshCurrentMaterials;                               // 0x01C8(0x0010) (ZeroConstructor, NativeAccessSpecifierPrivate)
	class USkeletalMeshComponent*                      InWorldSkeletalMeshComponent;                              // 0x01D8(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UParticleSystemComponent*                    InWorldParticleSystemComponent;                            // 0x01E0(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UNiagaraComponent*                           InWorldNiagaraComponent;                                   // 0x01E8(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class ATigerBaseNPC*                               NpcOwner;                                                  // 0x01F0(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_DIKO[0x10];                                    // 0x01F8(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              MaterialInterpolationDuration;                             // 0x0208(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_OXMN[0x14];                                    // 0x020C(0x0014) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerBloodPotencyComponent");
		return ptr;
	}



	void RefreshBloodPotencyVisualization(bool bInForceRefresh);
};

// Class Tiger.TigerBloodResonanceAsset
// 0x01C8 (FullSize[0x01F8] - InheritedSize[0x0030])
class UTigerBloodResonanceAsset : public UDataAsset
{
public:
	struct FText                                       ResonanceName;                                             // 0x0030(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FText                                       InventoryLevel1Description;                                // 0x0048(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FText                                       InventoryLevel2Description;                                // 0x0060(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FText                                       InventoryLevel3Description;                                // 0x0078(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FText                                       FeedRewardLevel1Description;                               // 0x0090(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FText                                       FeedRewardLevel2Description;                               // 0x00A8(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FText                                       FeedRewardLevel3Description;                               // 0x00C0(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FCoreUObject_FColor                         ResonanceColor;                                            // 0x00D8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_7T20[0x4];                                     // 0x00DC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	unsigned char                                      ResonanceLevel1[0x28];                                     // 0x00DC(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	unsigned char                                      ResonanceLevel2[0x28];                                     // 0x0108(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	unsigned char                                      ResonanceLevel3[0x28];                                     // 0x0130(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	unsigned char                                      SlotLevel1[0x28];                                          // 0x0158(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	unsigned char                                      SlotLevel2[0x28];                                          // 0x0180(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	unsigned char                                      SlotLevel3[0x28];                                          // 0x01A8(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	unsigned char                                      ResonanceVfx[0x28];                                        // 0x01D0(0x0028) UNKNOWN PROPERTY: SoftObjectProperty


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerBloodResonanceAsset");
		return ptr;
	}



};

// Class Tiger.TigerBloodResonanceComponent
// 0x0140 (FullSize[0x01F0] - InheritedSize[0x00B0])
class UTigerBloodResonanceComponent : public UActorComponent
{
public:
	struct FScriptMulticastDelegate                    OnBloodResonanceBlockedByCap;                              // 0x00B0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	float                                              BloodCapIncreasePerEvent[0x1D];                            // 0x00C0(0x0074) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_SBWH[0x4];                                     // 0x0134(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FTigerBloodResonanceBuffs                   BloodResonanceBuffs[0x4];                                  // 0x0138(0x0040) (Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	int                                                StartingBloodCap;                                          // 0x0178(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                BloodTypeCap;                                              // 0x017C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                MaxBloodCap;                                               // 0x0180(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                CurrentBloodCap;                                           // 0x0184(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnBloodCapChanged;                                         // 0x0188(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPrivate)
	struct FScriptMulticastDelegate                    OnBloodResonanceAdded;                                     // 0x0198(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_UXHQ[0x48];                                    // 0x01A8(0x0048) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerBloodResonanceComponent");
		return ptr;
	}



	void OnPlayerEvent(Tiger_ETigerPlayerEvent InEvent, class ATigerCharacter* InEventTiedCharacter);
	void OnLifeStatusChanged(Tiger_ETigerPlayerLifeStatus InNewLifeStatus);
	int GetTotalBloodResonanceNum();
	int GetMaxBloodCap();
	int GetCurrentBloodResonanceOfType(Tiger_ETigerBloodType InBloodType);
	TArray<Tiger_ETigerBloodType> GetCurrentBloodResonance();
	int GetCurrentBloodCap();
	void Client_IncreaseBloodCap(float InBloodCapIncrease);
	void Client_AddBloodResonance(Tiger_ETigerBloodType InBloodType);
};

// Class Tiger.TigerPassiveConfig
// 0x0108 (FullSize[0x0138] - InheritedSize[0x0030])
class UTigerPassiveConfig : public UDataAsset
{
public:
	struct FText                                       Name;                                                      // 0x0030(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FText                                       Description;                                               // 0x0048(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class UTexture2D*                                  Icon;                                                      // 0x0060(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMediaSource*                                PreviewVideo;                                              // 0x0068(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      CustomWidget;                                              // 0x0070(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      LogicComponent;                                            // 0x0078(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTigerCharacterStatModification             PassiveStatChanges;                                        // 0x0080(0x00B4) (Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      PowerIncrease;                                             // 0x0134(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_9H01[0x3];                                     // 0x0135(0x0003) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerPassiveConfig");
		return ptr;
	}



};

// Class Tiger.TigerBloodTrackPassiveConfig
// 0x0008 (FullSize[0x0140] - InheritedSize[0x0138])
class UTigerBloodTrackPassiveConfig : public UTigerPassiveConfig
{
public:
	Tiger_ETigerBloodTrackPassiveCategory              Category;                                                  // 0x0138(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bCanBeMoved;                                               // 0x0139(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_5KNK[0x6];                                     // 0x013A(0x0006) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerBloodTrackPassiveConfig");
		return ptr;
	}



};

// Class Tiger.TigerBloodTrackPreset
// 0x0010 (FullSize[0x0040] - InheritedSize[0x0030])
class UTigerBloodTrackPreset : public UDataAsset
{
public:
	struct FTigerBloodTrack                            BloodTrack;                                                // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerBloodTrackPreset");
		return ptr;
	}



	bool VerifyCustomization(const struct FTigerBloodTrack& Customization, class UTigerPowerKit* PowerKit);
	TArray<int> STATIC_CalculateBloodTrackSlotMovement(TArray<class UTigerBloodTrackPassiveConfig*> BloodTrackToModify, int IndexToMove, int IndexToMoveTo);
};

// Class Tiger.TigerBloodTrackPassiveList
// 0x0010 (FullSize[0x0040] - InheritedSize[0x0030])
class UTigerBloodTrackPassiveList : public UDataAsset
{
public:
	TArray<class UTigerBloodTrackPassiveConfig*>       PassivesAvailableToAll;                                    // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerBloodTrackPassiveList");
		return ptr;
	}



};

// Class Tiger.TigerBloodTrackHealthUpgradePassiveConfig
// 0x0000 (FullSize[0x0140] - InheritedSize[0x0140])
class UTigerBloodTrackHealthUpgradePassiveConfig : public UTigerBloodTrackPassiveConfig
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerBloodTrackHealthUpgradePassiveConfig");
		return ptr;
	}



};

// Class Tiger.TigerBloodTrackPassiveUltimatePredatorConfig
// 0x0000 (FullSize[0x0140] - InheritedSize[0x0140])
class UTigerBloodTrackPassiveUltimatePredatorConfig : public UTigerBloodTrackPassiveConfig
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerBloodTrackPassiveUltimatePredatorConfig");
		return ptr;
	}



};

// Class Tiger.TigerBloodTrackPassiveUnlockPowersConfig
// 0x0000 (FullSize[0x0140] - InheritedSize[0x0140])
class UTigerBloodTrackPassiveUnlockPowersConfig : public UTigerBloodTrackPassiveConfig
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerBloodTrackPassiveUnlockPowersConfig");
		return ptr;
	}



};

// Class Tiger.TigerBloodVein
// 0x0050 (FullSize[0x0278] - InheritedSize[0x0228])
class ATigerBloodVein : public AActor
{
public:
	struct FScriptMulticastDelegate                    OnEndOfVeinReached;                                        // 0x0228(0x0010) (ZeroConstructor, Transient, InstancedReference, NativeAccessSpecifierPublic)
	class USplineComponent*                            Spline;                                                    // 0x0238(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USceneComponent*                             CurrentPlayerSpot;                                         // 0x0240(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              EarliestDisconnectPoint;                                   // 0x0248(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              LatestDisconnectPoint;                                     // 0x024C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              VeinMovementSpeed;                                         // 0x0250(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bIsVeinActive;                                             // 0x0254(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_E2L8[0x3];                                     // 0x0255(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class ATigerHolyIncense*                           HolyIncense;                                               // 0x0258(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_PZY6[0xC];                                     // 0x0260(0x000C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              StartSynchronizedTime;                                     // 0x026C(0x0004) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_4EMB[0x8];                                     // 0x0270(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerBloodVein");
		return ptr;
	}



	void TigerOnEndOfVeinReached__DelegateSignature();
	void OnVeinActivated();
	void OnRep_IsVeinActive();
	void Multicast_StartMovement(float ServerTime);
	void MatchStateChanged(Tiger_ETigerMatchState OldMatchState, Tiger_ETigerMatchState NewMatchState);
	struct FVector GetCurrentPlayerLocation();
	struct FVector GetCurrentPlayerDirection();
};

// Class Tiger.TigerBloodVeinBranch
// 0x0060 (FullSize[0x0288] - InheritedSize[0x0228])
class ATigerBloodVeinBranch : public AActor
{
public:
	struct FScriptMulticastDelegate                    OnReachedEndOfBloodVeinBranch;                             // 0x0228(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UStaticMesh*                                 VeinSplineMesh;                                            // 0x0238(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ATigerBloodVeinPawn*                         ControllingPawn;                                           // 0x0240(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USceneComponent*                             CurrentPlayerSpot;                                         // 0x0248(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              LandSoundEventTimeOffset;                                  // 0x0250(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              SplineMeshDistance;                                        // 0x0254(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              SplineScale;                                               // 0x0258(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_FK2G[0x4];                                     // 0x025C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class USplineMeshComponent*>                GeneratedSplineMeshes;                                     // 0x0260(0x0010) (ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	class UTigerBloodVeinBranchMovementComponent*      MovementComponent;                                         // 0x0270(0x0008) (Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_YPF2[0x10];                                    // 0x0278(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerBloodVeinBranch");
		return ptr;
	}



	void TigerDelegateReachedEndOfBloodVeinBranch__DelegateSignature();
	void PostLandingSoundEvent();
	bool IsLocalPlayerInThisBranch();
	void HitGround();
	void HideGeneratedMeshes();
	TArray<class USplineMeshComponent*> GetGeneratedSplineMeshes();
};

// Class Tiger.TigerBloodVeinBranchMovementComponent
// 0x00C0 (FullSize[0x0170] - InheritedSize[0x00B0])
class UTigerBloodVeinBranchMovementComponent : public UActorComponent
{
public:
	unsigned char                                      UnknownData_HBHL[0x10];                                    // 0x00B0(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UClass*                                      PlayerPawn;                                                // 0x00C0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class ATigerGameState*                             GameState;                                                 // 0x00C8(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FVector>                             MovementTargets;                                           // 0x00D0(0x0010) (Net, ZeroConstructor, NativeAccessSpecifierPrivate)
	float                                              StartSimulationTime;                                       // 0x00E0(0x0004) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               bHitGround;                                                // 0x00E4(0x0001) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_893F[0x3];                                     // 0x00E5(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              SecondsPerStep;                                            // 0x00E8(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FTigerBloodVeinBranchMovementSettings       PrimaryMovementSettings;                                   // 0x00EC(0x0024) (Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPrivate)
	struct FTigerBloodVeinBranchMovementSettings       SecondaryMovementSettings;                                 // 0x0110(0x0024) (Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_KW8A[0xC];                                     // 0x0134(0x000C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class ATigerBloodVeinBranch*                       Branch;                                                    // 0x0140(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class ATigerHolyIncense*                           HolyIncense;                                               // 0x0148(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_KH1D[0x20];                                    // 0x0150(0x0020) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerBloodVeinBranchMovementComponent");
		return ptr;
	}



	void TigerDelegateBloodVeinBranchHitGround__DelegateSignature();
	void Multicast_AddBranchPoint(const struct FVector& InNewTarget);
	void HitGround();
};

// Class Tiger.TigerBloodVeinPawn
// 0x0070 (FullSize[0x02F8] - InheritedSize[0x0288])
class ATigerBloodVeinPawn : public APawn
{
public:
	struct FScriptMulticastDelegate                    OnIsCoterieNavigatorChanged;                               // 0x0288(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class ATigerBloodVein*                             BloodVein;                                                 // 0x0298(0x0008) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bIsCoterieNavigator;                                       // 0x02A0(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bWantsToLaunchSolo;                                        // 0x02A1(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_R9N1[0x6];                                     // 0x02A2(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UStaticMeshComponent*                        StaticMesh;                                                // 0x02A8(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTigerSpringArmComponent*                    SpringArm;                                                 // 0x02B0(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCameraComponent*                            Camera;                                                    // 0x02B8(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	Tiger_ETigerBloodVeinAlternateAction               AlternateAction;                                           // 0x02C0(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_C1VR[0x17];                                    // 0x02C1(0x0017) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UClass*                                      BranchClass;                                               // 0x02D8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              AlternateActionHoldTime;                                   // 0x02E0(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_IECL[0x14];                                    // 0x02E4(0x0014) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerBloodVeinPawn");
		return ptr;
	}



	void SpawnPlayer();
	void Server_SetLaunchSolo(bool bInWantsToLaunchSolo);
	void Server_SendInputData(unsigned char InPackedInputVector, unsigned char InCompressedCameraYaw, unsigned char InCompressedCameraPitch);
	void Server_PassCoterieNavigator();
	void Server_LaunchBranch(const struct FRotator& InCameraRotation);
	void OnRep_IsCoterieNavigator();
	void OnRep_BloodVein();
	void OnMatchStateChanged(Tiger_ETigerMatchState InOldState, Tiger_ETigerMatchState InNewState);
	void OnIsCoterieNavigatorChanged__DelegateSignature(bool bInIsCoterieNavigator);
	void OnConnectedToMainVein();
	void OnBranchedOffFromMainVein();
	bool IsNavigatingBranch();
	bool HasBranchedOff();
	void EndOfVeinReached();
	void Client_OnDetachedFromMainVein();
	bool CanDoSecondaryLaunch();
};

// Class Tiger.TigerBloodVeinTooltipLocation
// 0x0008 (FullSize[0x0230] - InheritedSize[0x0228])
class ATigerBloodVeinTooltipLocation : public AActor
{
public:
	float                                              MaximumDistance;                                           // 0x0228(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bIsVisible;                                                // 0x022C(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_BTBD[0x3];                                     // 0x022D(0x0003) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerBloodVeinTooltipLocation");
		return ptr;
	}



	void OnVisiblityChanged();
};

// Class Tiger.TigerBloodVeinTrackWidget
// 0x0000 (FullSize[0x0280] - InheritedSize[0x0280])
class UTigerBloodVeinTrackWidget : public UTigerWidget
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerBloodVeinTrackWidget");
		return ptr;
	}



};

// Class Tiger.TigerBlueprintLootComponent
// 0x0018 (FullSize[0x00C8] - InheritedSize[0x00B0])
class UTigerBlueprintLootComponent : public UActorComponent
{
public:
	class UTigerItemLootTable*                         LootTable;                                                 // 0x00B0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class AActor*>                              SpawnedItemActors;                                         // 0x00B8(0x0010) (Edit, BlueprintVisible, ZeroConstructor, Protected, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerBlueprintLootComponent");
		return ptr;
	}



	TArray<class AActor*> GetSpawnedItemActors();
	class UTigerItemLootTable* GetLootTable();
};

// Class Tiger.TigerBlueprintLootLocationComponent
// 0x0010 (FullSize[0x00C0] - InheritedSize[0x00B0])
class UTigerBlueprintLootLocationComponent : public UActorComponent
{
public:
	class UTigerLootLocationConfiguration*             Configuration;                                             // 0x00B0(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      GameTypeFilter;                                            // 0x00B8(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_5B48[0x7];                                     // 0x00B9(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerBlueprintLootLocationComponent");
		return ptr;
	}



};

// Class Tiger.TigerBootGameMode
// 0x0018 (FullSize[0x02E0] - InheritedSize[0x02C8])
class ATigerBootGameMode : public AGameModeBase
{
public:
	Tiger_ESessionType                                 SessionTraveledFrom;                                       // 0x02C8(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_FQCQ[0x7];                                     // 0x02C9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UTigerGameFlowStateMap*                      GameFlowStateMap;                                          // 0x02D0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTigerGameFlowStateMap*                      BotGameFlowStateMap;                                       // 0x02D8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerBootGameMode");
		return ptr;
	}



};

// Class Tiger.TigerBrujahBaneRecklessness
// 0x0008 (FullSize[0x0140] - InheritedSize[0x0138])
class UTigerBrujahBaneRecklessness : public UTigerPassiveConfig
{
public:
	float                                              DamageTakenMultiplier;                                     // 0x0138(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              AutoDeactivateTimer;                                       // 0x013C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerBrujahBaneRecklessness");
		return ptr;
	}



};

// Class Tiger.TigerPassiveComponent
// 0x0010 (FullSize[0x00C0] - InheritedSize[0x00B0])
class UTigerPassiveComponent : public UActorComponent
{
public:
	class ATigerPlayer*                                PlayerOwner;                                               // 0x00B0(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTigerWidget*                                PassiveWidget;                                             // 0x00B8(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerPassiveComponent");
		return ptr;
	}



	void SetPassiveWidget(class UTigerWidget* InWidget);
	void OnCreated(class ATigerPlayer* InPlayer, bool InHasAuthority);
	bool IsPassiveActive();
	class UTigerWidget* GetPassiveWidget();
};

// Class Tiger.TigerBrujahBaneRecklessnessLogic
// 0x00D0 (FullSize[0x0190] - InheritedSize[0x00C0])
class UTigerBrujahBaneRecklessnessLogic : public UTigerPassiveComponent
{
public:
	class UTigerBrujahBaneRecklessness*                Config;                                                    // 0x00C0(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class ATigerPlayer*                                Player;                                                    // 0x00C8(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_S5L1[0xC0];                                    // 0x00D0(0x00C0) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerBrujahBaneRecklessnessLogic");
		return ptr;
	}



};

// Class Tiger.TigerBrujahTraitMomentum
// 0x0020 (FullSize[0x0158] - InheritedSize[0x0138])
class UTigerBrujahTraitMomentum : public UTigerPassiveConfig
{
public:
	float                                              MomentumActiveTimer;                                       // 0x0138(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              GroundSlamRadiusMultiplier;                                // 0x013C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MightyLeapVelocityMultiplier;                              // 0x0140(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              FOTTKnockbackDistanceMultiplier;                           // 0x0144(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              FOTTWallImpactDamageMultiplier;                            // 0x0148(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_7NQ9[0x4];                                     // 0x014C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UAkAudioEvent*                               MomentumStartedAudioEvent;                                 // 0x0150(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerBrujahTraitMomentum");
		return ptr;
	}



};

// Class Tiger.TigerBrujahTraitMomentumLogic
// 0x0020 (FullSize[0x00E0] - InheritedSize[0x00C0])
class UTigerBrujahTraitMomentumLogic : public UTigerPassiveComponent
{
public:
	class UTigerBrujahTraitMomentum*                   Config;                                                    // 0x00C0(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class ATigerPlayer*                                Player;                                                    // 0x00C8(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_N9V2[0x10];                                    // 0x00D0(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerBrujahTraitMomentumLogic");
		return ptr;
	}



	bool IsMomentumActive();
};

// Class Tiger.TigerBuffInstance
// 0x0060 (FullSize[0x0088] - InheritedSize[0x0028])
class UTigerBuffInstance : public UObject
{
public:
	struct FTigerBuffReplicatedInstanceData            BuffReplicatedInstanceData;                                // 0x0028(0x0020) (Net, NoDestructor, Protected, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class ATigerCharacter>              OwnerCharacter;                                            // 0x0048(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTigerBuff*                                  Buff;                                                      // 0x0050(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_5NZN[0x10];                                    // 0x0058(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UParticleSystemComponent*                    ActiveBuffParticles;                                       // 0x0068(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UNiagaraComponent*                           ActiveNiagaraParticles;                                    // 0x0070(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UNiagaraComponent*>                   AdditionalActiveNiagaraParticles;                          // 0x0078(0x0010) (ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerBuffInstance");
		return ptr;
	}



	class ATigerCharacter* GetOwningCharacter();
	class UNiagaraComponent* GetActiveNiagaraParticles();
	class UParticleSystemComponent* GetActiveBuffParticles();
};

// Class Tiger.TigerBuffAdrenalineRushInstance
// 0x0000 (FullSize[0x0088] - InheritedSize[0x0088])
class UTigerBuffAdrenalineRushInstance : public UTigerBuffInstance
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerBuffAdrenalineRushInstance");
		return ptr;
	}



};

// Class Tiger.TigerBuffAdrenalineRush
// 0x0000 (FullSize[0x0270] - InheritedSize[0x0270])
class UTigerBuffAdrenalineRush : public UTigerBuff
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerBuffAdrenalineRush");
		return ptr;
	}



};

// Class Tiger.TigerBuffAnarchHuntingKnife
// 0x0020 (FullSize[0x0290] - InheritedSize[0x0270])
class UTigerBuffAnarchHuntingKnife : public UTigerBuff
{
public:
	class UCurveFloat*                                 EffectStrengthBasedOnDistance;                             // 0x0270(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                                 EffectStrengthBasedOnKills;                                // 0x0278(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                                 DamageBasedOnEnemiesKilled;                                // 0x0280(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaxDistanceToCheckForEnemies;                              // 0x0288(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_H8ED[0x4];                                     // 0x028C(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerBuffAnarchHuntingKnife");
		return ptr;
	}



};

// Class Tiger.TigerBuffAnarchHuntingKnifeInstance
// 0x0010 (FullSize[0x0098] - InheritedSize[0x0088])
class UTigerBuffAnarchHuntingKnifeInstance : public UTigerBuffInstance
{
public:
	class UTigerBuffAnarchHuntingKnife*                HuntingKnifeBuff;                                          // 0x0088(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class ATigerPlayer*                                Player;                                                    // 0x0090(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerBuffAnarchHuntingKnifeInstance");
		return ptr;
	}



};

// Class Tiger.TigerBuffAnarchHuntingKnifeStack
// 0x0000 (FullSize[0x0270] - InheritedSize[0x0270])
class UTigerBuffAnarchHuntingKnifeStack : public UTigerBuff
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerBuffAnarchHuntingKnifeStack");
		return ptr;
	}



};

// Class Tiger.TigerBuffAnarchHuntingKnifeStackInstance
// 0x0008 (FullSize[0x0090] - InheritedSize[0x0088])
class UTigerBuffAnarchHuntingKnifeStackInstance : public UTigerBuffInstance
{
public:
	class ATigerPlayer*                                Player;                                                    // 0x0088(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerBuffAnarchHuntingKnifeStackInstance");
		return ptr;
	}



};

// Class Tiger.TigerBuffArtifactFeedingBonus
// 0x0008 (FullSize[0x0278] - InheritedSize[0x0270])
class UTigerBuffArtifactFeedingBonus : public UTigerBuff
{
public:
	float                                              FeedBonusHealthMultiplier;                                 // 0x0270(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_PWQG[0x4];                                     // 0x0274(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerBuffArtifactFeedingBonus");
		return ptr;
	}



};

// Class Tiger.TigerBuffArtifactFeedingBonusInstance
// 0x0010 (FullSize[0x0098] - InheritedSize[0x0088])
class UTigerBuffArtifactFeedingBonusInstance : public UTigerBuffInstance
{
public:
	class UTigerBuffArtifactFeedingBonus*              ArtifactFeedingBonusBuff;                                  // 0x0088(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class ATigerPlayer*                                Player;                                                    // 0x0090(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerBuffArtifactFeedingBonusInstance");
		return ptr;
	}



};

// Class Tiger.TigerBuffHealthRegenBase
// 0x0008 (FullSize[0x0278] - InheritedSize[0x0270])
class UTigerBuffHealthRegenBase : public UTigerBuff
{
public:
	float                                              HealthToHeal;                                              // 0x0270(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_A3MJ[0x4];                                     // 0x0274(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerBuffHealthRegenBase");
		return ptr;
	}



};

// Class Tiger.TigerBuffArtifactHealthRegen
// 0x0000 (FullSize[0x0278] - InheritedSize[0x0278])
class UTigerBuffArtifactHealthRegen : public UTigerBuffHealthRegenBase
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerBuffArtifactHealthRegen");
		return ptr;
	}



};

// Class Tiger.TigerBuffHealthRegenBaseInstance
// 0x0010 (FullSize[0x0098] - InheritedSize[0x0088])
class UTigerBuffHealthRegenBaseInstance : public UTigerBuffInstance
{
public:
	class UTigerBuffHealthRegenBase*                   HealthRegenBuff;                                           // 0x0088(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_JC2F[0x8];                                     // 0x0090(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerBuffHealthRegenBaseInstance");
		return ptr;
	}



};

// Class Tiger.TigerBuffArtifactHealthRegenInstance
// 0x0000 (FullSize[0x0098] - InheritedSize[0x0098])
class UTigerBuffArtifactHealthRegenInstance : public UTigerBuffHealthRegenBaseInstance
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerBuffArtifactHealthRegenInstance");
		return ptr;
	}



};

// Class Tiger.TigerBuffBlindingBeautyInstance
// 0x0010 (FullSize[0x0098] - InheritedSize[0x0088])
class UTigerBuffBlindingBeautyInstance : public UTigerBuffInstance
{
public:
	unsigned char                                      UnknownData_UYFW[0x10];                                    // 0x0088(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerBuffBlindingBeautyInstance");
		return ptr;
	}



};

// Class Tiger.TigerBuffBlindingBeauty
// 0x0008 (FullSize[0x0278] - InheritedSize[0x0270])
class UTigerBuffBlindingBeauty : public UTigerBuff
{
public:
	float                                              BlockJumpDuration;                                         // 0x0270(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              TurnRateCap;                                               // 0x0274(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerBuffBlindingBeauty");
		return ptr;
	}



};

// Class Tiger.TigerBuffClanReducesCooldown
// 0x0008 (FullSize[0x0278] - InheritedSize[0x0270])
class UTigerBuffClanReducesCooldown : public UTigerBuff
{
public:
	float                                              AbilityCooldownReduction;                                  // 0x0270(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_HZ5E[0x4];                                     // 0x0274(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerBuffClanReducesCooldown");
		return ptr;
	}



};

// Class Tiger.TigerBuffClanReducesCooldownInstance
// 0x0010 (FullSize[0x0098] - InheritedSize[0x0088])
class UTigerBuffClanReducesCooldownInstance : public UTigerBuffInstance
{
public:
	class UTigerBuffClanReducesCooldown*               ClanReduceCooldownBuff;                                    // 0x0088(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class ATigerPlayer*                                Player;                                                    // 0x0090(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerBuffClanReducesCooldownInstance");
		return ptr;
	}



};

// Class Tiger.TigerBuffClimbInterrupt
// 0x0000 (FullSize[0x0270] - InheritedSize[0x0270])
class UTigerBuffClimbInterrupt : public UTigerBuffDisableClimbing
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerBuffClimbInterrupt");
		return ptr;
	}



};

// Class Tiger.TigerBuffClimbInterruptInstance
// 0x0000 (FullSize[0x0088] - InheritedSize[0x0088])
class UTigerBuffClimbInterruptInstance : public UTigerBuffInstance
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerBuffClimbInterruptInstance");
		return ptr;
	}



};

// Class Tiger.TigerBuffComponent
// 0x0090 (FullSize[0x0140] - InheritedSize[0x00B0])
class UTigerBuffComponent : public UActorComponent
{
public:
	struct FScriptMulticastDelegate                    OnBuffAdded;                                               // 0x00B0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnBuffRemoved;                                             // 0x00C0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnBuffRefreshed;                                           // 0x00D0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnClientBuffIdUpdated;                                     // 0x00E0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	bool                                               bDrawDebugString;                                          // 0x00F0(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_JW6G[0x7];                                     // 0x00F1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class UTigerBuffInstance*>                  BuffInstances;                                             // 0x00F8(0x0010) (Net, ZeroConstructor, RepNotify, NativeAccessSpecifierPrivate)
	TArray<class UTigerBuffInstance*>                  NonVerifiedBuffInstances;                                  // 0x0108(0x0010) (ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<struct FTigerDeferredBuffInstantiation>     DeferredBuffs;                                             // 0x0118(0x0010) (ZeroConstructor, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_JV77[0x18];                                    // 0x0128(0x0018) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerBuffComponent");
		return ptr;
	}



	void Server_RequestRemoveBuffIfNonExistentFor(class ATigerCharacter* Target, class UClass* BuffType, int BuffID, class ATigerCharacter* BuffCaster, float BuffEndTime);
	void RemoveBuffByID(int BuffID);
	void OnRep_BuffInstances();
	void Multicast_ClearBuff(int BuffID);
	void Multicast_ClearAllBuffs();
	void Multicast_AddBuff(class UClass* BuffType, int BuffID, class ATigerCharacter* BuffCaster, float Length, float BuffStrength);
	bool HasBuff(class UClass* BuffType);
	float GetTimeLeft(class UClass* BuffType);
	class UTigerBuffInstance* FindExistingBuffOfType(class UClass* BuffType, class ATigerCharacter* Caster);
	void Client_ClearBuffFor(class ATigerCharacter* Target, int BuffID);
	void Client_ClearAllBuffs();
	void Client_AddBuff(class UClass* BuffType, int BuffID, class ATigerCharacter* BuffCaster, float Length, float BuffStrength);
	int ApplyStun(float Length, class ATigerCharacter* BuffCaster);
	int ApplyInvulnerable(float Length, class ATigerCharacter* BuffCaster);
	int ApplyImmobilized(float Length, class ATigerCharacter* BuffCaster);
	int ApplyGrounded(float Length, class ATigerCharacter* BuffCaster);
	int ApplyBuff(class UClass* BuffType, class ATigerCharacter* BuffCaster, float OverrideLength, float OverrideBuffStrength, bool bDoLagCompensation);
};

// Class Tiger.TigerBuffDOT
// 0x0010 (FullSize[0x0280] - InheritedSize[0x0270])
class UTigerBuffDOT : public UTigerBuff
{
public:
	class UClass*                                      DamageType;                                                // 0x0270(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              DamagePerTick;                                             // 0x0278(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bPlayHitAnimation;                                         // 0x027C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bSpawnBloodDecals;                                         // 0x027D(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_Y72X[0x2];                                     // 0x027E(0x0002) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerBuffDOT");
		return ptr;
	}



};

// Class Tiger.TigerBuffDOTInstance
// 0x0008 (FullSize[0x0090] - InheritedSize[0x0088])
class UTigerBuffDOTInstance : public UTigerBuffInstance
{
public:
	class UTigerBuffDOT*                               BuffDOT;                                                   // 0x0088(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerBuffDOTInstance");
		return ptr;
	}



};

// Class Tiger.TigerBufferedAction
// 0x0020 (FullSize[0x0048] - InheritedSize[0x0028])
class UTigerBufferedAction : public UObject
{
public:
	class ATigerPlayerController*                      OwnerPlayerController;                                     // 0x0028(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTigerActionBuffer*                          OwnerActionBuffer;                                         // 0x0030(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_SVNB[0x10];                                    // 0x0038(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerBufferedAction");
		return ptr;
	}



};

// Class Tiger.TigerBufferedActionQuickAttack
// 0x0000 (FullSize[0x0048] - InheritedSize[0x0048])
class UTigerBufferedActionQuickAttack : public UTigerBufferedAction
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerBufferedActionQuickAttack");
		return ptr;
	}



};

// Class Tiger.TigerBuffExtraArtifacts
// 0x0000 (FullSize[0x0270] - InheritedSize[0x0270])
class UTigerBuffExtraArtifacts : public UTigerBuff
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerBuffExtraArtifacts");
		return ptr;
	}



};

// Class Tiger.TigerBuffExtraArtifactsInstance
// 0x0000 (FullSize[0x0088] - InheritedSize[0x0088])
class UTigerBuffExtraArtifactsInstance : public UTigerBuffInstance
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerBuffExtraArtifactsInstance");
		return ptr;
	}



};

// Class Tiger.TigerBuffFOTTChargeup
// 0x0000 (FullSize[0x0270] - InheritedSize[0x0270])
class UTigerBuffFOTTChargeup : public UTigerBuff
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerBuffFOTTChargeup");
		return ptr;
	}



};

// Class Tiger.TigerBuffFOTTChargeupInstance
// 0x0010 (FullSize[0x0098] - InheritedSize[0x0088])
class UTigerBuffFOTTChargeupInstance : public UTigerBuffInstance
{
public:
	class UTigerBuffFOTTChargeup*                      FOTTChargeupBuff;                                          // 0x0088(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_4MUO[0x8];                                     // 0x0090(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerBuffFOTTChargeupInstance");
		return ptr;
	}



};

// Class Tiger.TigerBuffFOTTKnockbackWallStun
// 0x0008 (FullSize[0x0278] - InheritedSize[0x0270])
class UTigerBuffFOTTKnockbackWallStun : public UTigerBuff
{
public:
	float                                              WallStunnedTimer;                                          // 0x0270(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_WV1I[0x4];                                     // 0x0274(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerBuffFOTTKnockbackWallStun");
		return ptr;
	}



};

// Class Tiger.TigerBuffFOTTKnockbackWallStunInstance
// 0x0018 (FullSize[0x00A0] - InheritedSize[0x0088])
class UTigerBuffFOTTKnockbackWallStunInstance : public UTigerBuffInstance
{
public:
	class UTigerBuffFOTTKnockbackWallStun*             FOTTKnockbackWallStun;                                     // 0x0088(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_7KT8[0x8];                                     // 0x0090(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class ATigerCharacter*                             Target;                                                    // 0x0098(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerBuffFOTTKnockbackWallStunInstance");
		return ptr;
	}



};

// Class Tiger.TigerBuffFrenzy
// 0x0010 (FullSize[0x0280] - InheritedSize[0x0270])
class UTigerBuffFrenzy : public UTigerBuff
{
public:
	float                                              HPRegenPercentPerSecond;                                   // 0x0270(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_LPN6[0x4];                                     // 0x0274(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UClass*                                      WeaponClassToEquip;                                        // 0x0278(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerBuffFrenzy");
		return ptr;
	}



};

// Class Tiger.TigerBuffFrenzyInstance
// 0x0010 (FullSize[0x0098] - InheritedSize[0x0088])
class UTigerBuffFrenzyInstance : public UTigerBuffInstance
{
public:
	class UTigerBuffFrenzy*                            FrenzyBuff;                                                // 0x0088(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_BH1C[0x8];                                     // 0x0090(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerBuffFrenzyInstance");
		return ptr;
	}



};

// Class Tiger.TigerBuffInAirMomentumLossInstance
// 0x0010 (FullSize[0x0098] - InheritedSize[0x0088])
class UTigerBuffInAirMomentumLossInstance : public UTigerBuffInstance
{
public:
	unsigned char                                      UnknownData_G0AL[0x10];                                    // 0x0088(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerBuffInAirMomentumLossInstance");
		return ptr;
	}



	void OnLandedDelegate(const struct FHitResult& InHit);
};

// Class Tiger.TigerBuffInAirMomentumLoss
// 0x0008 (FullSize[0x0278] - InheritedSize[0x0270])
class UTigerBuffInAirMomentumLoss : public UTigerBuff
{
public:
	float                                              MinimumHorizontalSpeed;                                    // 0x0270(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              TimeToDecelerate;                                          // 0x0274(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerBuffInAirMomentumLoss");
		return ptr;
	}



};

// Class Tiger.TigerBuffKindredCharmInstance
// 0x0000 (FullSize[0x0088] - InheritedSize[0x0088])
class UTigerBuffKindredCharmInstance : public UTigerBuffInstance
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerBuffKindredCharmInstance");
		return ptr;
	}



};

// Class Tiger.TigerBuffKindredCharm
// 0x0000 (FullSize[0x0270] - InheritedSize[0x0270])
class UTigerBuffKindredCharm : public UTigerBuff
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerBuffKindredCharm");
		return ptr;
	}



};

// Class Tiger.TigerBuffMasqueradeKeepingMovement
// 0x0000 (FullSize[0x0270] - InheritedSize[0x0270])
class UTigerBuffMasqueradeKeepingMovement : public UTigerBuff
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerBuffMasqueradeKeepingMovement");
		return ptr;
	}



};

// Class Tiger.TigerBuffMasqueradeKeepingMovementInstance
// 0x0008 (FullSize[0x0090] - InheritedSize[0x0088])
class UTigerBuffMasqueradeKeepingMovementInstance : public UTigerBuffInstance
{
public:
	unsigned char                                      UnknownData_A2PQ[0x8];                                     // 0x0088(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerBuffMasqueradeKeepingMovementInstance");
		return ptr;
	}



};

// Class Tiger.TigerBuffMeleeCharge
// 0x0010 (FullSize[0x0280] - InheritedSize[0x0270])
class UTigerBuffMeleeCharge : public UTigerBuff
{
public:
	float                                              TimeRunningBeforeBuffIsActive;                             // 0x0270(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaxDeviationAllowedInDegrees;                              // 0x0274(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      AttackBuff;                                                // 0x0278(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerBuffMeleeCharge");
		return ptr;
	}



};

// Class Tiger.TigerBuffMeleeChargeInstance
// 0x0028 (FullSize[0x00B0] - InheritedSize[0x0088])
class UTigerBuffMeleeChargeInstance : public UTigerBuffInstance
{
public:
	class UTigerBuffMeleeCharge*                       MeleeChargeBuff;                                           // 0x0088(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class ATigerPlayer*                                Player;                                                    // 0x0090(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_HYXL[0x18];                                    // 0x0098(0x0018) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerBuffMeleeChargeInstance");
		return ptr;
	}



};

// Class Tiger.TigerBuffMeleeChargeAttack
// 0x0008 (FullSize[0x0278] - InheritedSize[0x0270])
class UTigerBuffMeleeChargeAttack : public UTigerBuff
{
public:
	class UParticleSystem*                             AttackParticleEffect;                                      // 0x0270(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerBuffMeleeChargeAttack");
		return ptr;
	}



};

// Class Tiger.TigerBuffMeleeChargeAttackInstance
// 0x0020 (FullSize[0x00A8] - InheritedSize[0x0088])
class UTigerBuffMeleeChargeAttackInstance : public UTigerBuffInstance
{
public:
	class UTigerBuffMeleeChargeAttack*                 MeleeChargeAttackBuff;                                     // 0x0088(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class ATigerPlayer*                                Player;                                                    // 0x0090(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UParticleSystemComponent*                    ActiveAttackParticles;                                     // 0x0098(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_HPLJ[0x8];                                     // 0x00A0(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerBuffMeleeChargeAttackInstance");
		return ptr;
	}



	void SwingFinished();
};

// Class Tiger.TigerBuffApathy
// 0x0000 (FullSize[0x0270] - InheritedSize[0x0270])
class UTigerBuffApathy : public UTigerBuff
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerBuffApathy");
		return ptr;
	}



};

// Class Tiger.TigerBuffApathyInstance
// 0x0000 (FullSize[0x0088] - InheritedSize[0x0088])
class UTigerBuffApathyInstance : public UTigerBuffInstance
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerBuffApathyInstance");
		return ptr;
	}



};

// Class Tiger.TigerBuffWrath
// 0x0000 (FullSize[0x0270] - InheritedSize[0x0270])
class UTigerBuffWrath : public UTigerBuff
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerBuffWrath");
		return ptr;
	}



};

// Class Tiger.TigerBuffWrathInstance
// 0x0000 (FullSize[0x0088] - InheritedSize[0x0088])
class UTigerBuffWrathInstance : public UTigerBuffInstance
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerBuffWrathInstance");
		return ptr;
	}



};

// Class Tiger.TigerBuffPostProcess
// 0x0010 (FullSize[0x0238] - InheritedSize[0x0228])
class ATigerBuffPostProcess : public AActor
{
public:
	class USceneComponent*                             Root;                                                      // 0x0228(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPostProcessComponent*                       PostProcess;                                               // 0x0230(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerBuffPostProcess");
		return ptr;
	}



};

// Class Tiger.TigerBuffPreventMasqueradeBreak
// 0x0008 (FullSize[0x0278] - InheritedSize[0x0270])
class UTigerBuffPreventMasqueradeBreak : public UTigerBuff
{
public:
	class UAkAudioEvent*                               ArtifactBreakAudioEvent;                                   // 0x0270(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerBuffPreventMasqueradeBreak");
		return ptr;
	}



};

// Class Tiger.TigerBuffPreventMasqueradeBreakInstance
// 0x0010 (FullSize[0x0098] - InheritedSize[0x0088])
class UTigerBuffPreventMasqueradeBreakInstance : public UTigerBuffInstance
{
public:
	class UTigerBuffPreventMasqueradeBreak*            PreventMasqueradeBreakBuff;                                // 0x0088(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class ATigerPlayer*                                Player;                                                    // 0x0090(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerBuffPreventMasqueradeBreakInstance");
		return ptr;
	}



};

// Class Tiger.TigerBuffRejuvenatingVoiceInstance
// 0x0008 (FullSize[0x0090] - InheritedSize[0x0088])
class UTigerBuffRejuvenatingVoiceInstance : public UTigerBuffInstance
{
public:
	unsigned char                                      UnknownData_TUCJ[0x8];                                     // 0x0088(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerBuffRejuvenatingVoiceInstance");
		return ptr;
	}



};

// Class Tiger.TigerBuffRejuvenatingVoice
// 0x0000 (FullSize[0x0270] - InheritedSize[0x0270])
class UTigerBuffRejuvenatingVoice : public UTigerBuff
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerBuffRejuvenatingVoice");
		return ptr;
	}



	void OnHealStop(class ATigerCharacter* InBuffOwner, class ATigerCharacter* InBuffCaster);
	void OnHealStart(class ATigerCharacter* InBuffOwner, class ATigerCharacter* InBuffCaster);
};

// Class Tiger.TigerBuffShackles
// 0x0018 (FullSize[0x0288] - InheritedSize[0x0270])
class UTigerBuffShackles : public UTigerBuff
{
public:
	class UClass*                                      ActiveEffect;                                              // 0x0270(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       ShacklesStaggerAnimationName;                              // 0x0278(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              DamageToDeal;                                              // 0x0280(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_204M[0x4];                                     // 0x0284(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerBuffShackles");
		return ptr;
	}



};

// Class Tiger.TigerBuffShacklesInstance
// 0x0008 (FullSize[0x0090] - InheritedSize[0x0088])
class UTigerBuffShacklesInstance : public UTigerBuffInstance
{
public:
	class UTigerBuffShackles*                          ShacklesBuff;                                              // 0x0088(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerBuffShacklesInstance");
		return ptr;
	}



};

// Class Tiger.TigerBuffShark
// 0x0000 (FullSize[0x0270] - InheritedSize[0x0270])
class UTigerBuffShark : public UTigerBuff
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerBuffShark");
		return ptr;
	}



};

// Class Tiger.TigerBuffSharkInstance
// 0x0010 (FullSize[0x0098] - InheritedSize[0x0088])
class UTigerBuffSharkInstance : public UTigerBuffInstance
{
public:
	class UTigerBuffShark*                             SharkBuff;                                                 // 0x0088(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class ATigerPlayer*                                Player;                                                    // 0x0090(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerBuffSharkInstance");
		return ptr;
	}



};

// Class Tiger.TigerBuffShieldBase
// 0x0008 (FullSize[0x0278] - InheritedSize[0x0270])
class UTigerBuffShieldBase : public UTigerBuff
{
public:
	float                                              MaxShield;                                                 // 0x0270(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              InitialShield;                                             // 0x0274(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerBuffShieldBase");
		return ptr;
	}



};

// Class Tiger.TigerBuffShieldAdrenalineRush
// 0x0010 (FullSize[0x0288] - InheritedSize[0x0278])
class UTigerBuffShieldAdrenalineRush : public UTigerBuffShieldBase
{
public:
	float                                              TimeBeforeDecay;                                           // 0x0278(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              DecayPerSecond;                                            // 0x027C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              DamageToShieldScale;                                       // 0x0280(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_P5AF[0x4];                                     // 0x0284(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerBuffShieldAdrenalineRush");
		return ptr;
	}



};

// Class Tiger.TigerBuffShieldBaseInstance
// 0x0010 (FullSize[0x0098] - InheritedSize[0x0088])
class UTigerBuffShieldBaseInstance : public UTigerBuffInstance
{
public:
	unsigned char                                      UnknownData_R4BY[0x10];                                    // 0x0088(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerBuffShieldBaseInstance");
		return ptr;
	}



};

// Class Tiger.TigerBuffShieldAdrenalineRushInstance
// 0x0008 (FullSize[0x00A0] - InheritedSize[0x0098])
class UTigerBuffShieldAdrenalineRushInstance : public UTigerBuffShieldBaseInstance
{
public:
	unsigned char                                      UnknownData_F0Q1[0x8];                                     // 0x0098(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerBuffShieldAdrenalineRushInstance");
		return ptr;
	}



};

// Class Tiger.TigerBuffSingleSwing
// 0x0000 (FullSize[0x0270] - InheritedSize[0x0270])
class UTigerBuffSingleSwing : public UTigerBuff
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerBuffSingleSwing");
		return ptr;
	}



};

// Class Tiger.TigerBuffSingleSwingInstance
// 0x0010 (FullSize[0x0098] - InheritedSize[0x0088])
class UTigerBuffSingleSwingInstance : public UTigerBuffInstance
{
public:
	class ATigerPlayer*                                Player;                                                    // 0x0088(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_WR71[0x8];                                     // 0x0090(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerBuffSingleSwingInstance");
		return ptr;
	}



	void SwingFinished();
};

// Class Tiger.TigerBuffStunBaton
// 0x0020 (FullSize[0x0290] - InheritedSize[0x0270])
class UTigerBuffStunBaton : public UTigerBuff
{
public:
	float                                              StunBonusDamage;                                           // 0x0270(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ChargeGainedOnHit;                                         // 0x0274(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ChargeGainedPerUpdate;                                     // 0x0278(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              PassiveChargeRate;                                         // 0x027C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bRegisterMultipleHitsOnChargeUp;                           // 0x0280(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bRegisterMultipleHitsOnStun;                               // 0x0281(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_AGWR[0x6];                                     // 0x0282(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UClass*                                      TBPInstanceBuff;                                           // 0x0288(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerBuffStunBaton");
		return ptr;
	}



};

// Class Tiger.TigerBuffStunBatonInstance
// 0x0020 (FullSize[0x00A8] - InheritedSize[0x0088])
class UTigerBuffStunBatonInstance : public UTigerBuffInstance
{
public:
	class UTigerBuffStunBaton*                         StunBatonBuff;                                             // 0x0088(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_CYWZ[0x10];                                    // 0x0090(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class ATigerPlayer*                                Player;                                                    // 0x00A0(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerBuffStunBatonInstance");
		return ptr;
	}



	void TargetHitShockConsumed(class ATigerCharacter* Target);
	void SwingStarted(bool bWasHeavyAttack);
	void SwingFinished();
	void MaxChargeReachedEvent();
	bool IsStunReady();
	void HitTarget(class ATigerCharacter* InTarget);
	void ChargeGainedEvent(float CurrentChargeValue);
	void AddCharge(float ValueToAdd);
};

// Class Tiger.TigerBuffThorns
// 0x0018 (FullSize[0x0298] - InheritedSize[0x0280])
class UTigerBuffThorns : public UTigerBuffDOT
{
public:
	float                                              HealInterval;                                              // 0x0280(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              HealPercentage;                                            // 0x0284(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      HealEffect;                                                // 0x0288(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               DOTTriggerEvent;                                           // 0x0290(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerBuffThorns");
		return ptr;
	}



};

// Class Tiger.TigerBuffThornsInstance
// 0x0010 (FullSize[0x00A0] - InheritedSize[0x0090])
class UTigerBuffThornsInstance : public UTigerBuffDOTInstance
{
public:
	unsigned char                                      UnknownData_96HW[0x8];                                     // 0x0090(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UTigerBuffThorns*                            ThornsBuff;                                                // 0x0098(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerBuffThornsInstance");
		return ptr;
	}



};

// Class Tiger.TigerBuffUnholyStimulant
// 0x0000 (FullSize[0x0270] - InheritedSize[0x0270])
class UTigerBuffUnholyStimulant : public UTigerBuff
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerBuffUnholyStimulant");
		return ptr;
	}



};

// Class Tiger.TigerBuffUnholyStimulantInstance
// 0x0000 (FullSize[0x0088] - InheritedSize[0x0088])
class UTigerBuffUnholyStimulantInstance : public UTigerBuffInstance
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerBuffUnholyStimulantInstance");
		return ptr;
	}



	void OnInsideHolyIncenseChanged(bool bInIsInsideHolyIncense);
};

// Class Tiger.TigerBuffVanish
// 0x0020 (FullSize[0x0290] - InheritedSize[0x0270])
class UTigerBuffVanish : public UTigerBuffInvisible
{
public:
	float                                              TimeReductionPerMeterMoved;                                // 0x0270(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              NoiseNotifyEventRange;                                     // 0x0274(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                                 MaterialTransitionIntoCurve;                               // 0x0278(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                                 MaterialTransitionOutFromCurve;                            // 0x0280(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystem*                             BlendOutParticles;                                         // 0x0288(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerBuffVanish");
		return ptr;
	}



};

// Class Tiger.TigerBuffVanishInstance
// 0x0028 (FullSize[0x00B0] - InheritedSize[0x0088])
class UTigerBuffVanishInstance : public UTigerBuffInstance
{
public:
	class UTigerBuffVanish*                            VanishBuff;                                                // 0x0088(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class ATigerPlayer*                                Player;                                                    // 0x0090(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_BV2L[0x18];                                    // 0x0098(0x0018) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerBuffVanishInstance");
		return ptr;
	}



};

// Class Tiger.TigerBuffVoiceOfInspiration
// 0x0000 (FullSize[0x0270] - InheritedSize[0x0270])
class UTigerBuffVoiceOfInspiration : public UTigerBuff
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerBuffVoiceOfInspiration");
		return ptr;
	}



};

// Class Tiger.TigerBuffVoiceOfInspirationInstance
// 0x0000 (FullSize[0x0088] - InheritedSize[0x0088])
class UTigerBuffVoiceOfInspirationInstance : public UTigerBuffInstance
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerBuffVoiceOfInspirationInstance");
		return ptr;
	}



};

// Class Tiger.TigerBuildingWallPreset
// 0x0010 (FullSize[0x0038] - InheritedSize[0x0028])
class UTigerBuildingWallPreset : public UObject
{
public:
	unsigned char                                      Meshes[0x10];                                              // 0x0028(0x0010) UNKNOWN PROPERTY: ArrayProperty


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerBuildingWallPreset");
		return ptr;
	}



};

// Class Tiger.TigerBuildingSystem
// 0x0068 (FullSize[0x0290] - InheritedSize[0x0228])
class ATigerBuildingSystem : public AActor
{
public:
	class USceneComponent*                             Root;                                                      // 0x0228(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USplineComponent*                            SplineLeft;                                                // 0x0230(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USplineComponent*                            SplineRight;                                               // 0x0238(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FTigerBuildingSystemTransformableCorner> PoseableCornerFrontComponents;                             // 0x0240(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	TArray<struct FTigerBuildingSystemTransformableCorner> PoseableCornerLeftComponents;                              // 0x0250(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	TArray<struct FTigerBuildingSystemTransformableCorner> PoseableCornerBackComponents;                              // 0x0260(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	TArray<struct FTigerBuildingSystemTransformableCorner> PoseableCornerRightComponents;                             // 0x0270(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	struct FTigerBuildingSystemWallPieceInstancingData WallPieceInstancingDatas;                                  // 0x0280(0x0010) (ContainsInstancedReference, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerBuildingSystem");
		return ptr;
	}



	void OnUpgrade(int InVersion);
};

// Class Tiger.TigerBuildingSystemDepricated
// 0x0220 (FullSize[0x04B0] - InheritedSize[0x0290])
class ATigerBuildingSystemDepricated : public ATigerBuildingSystem
{
public:
	class UHierarchicalInstancedStaticMeshComponent*   Front_00;                                                  // 0x0290(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UHierarchicalInstancedStaticMeshComponent*   Front_01;                                                  // 0x0298(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UHierarchicalInstancedStaticMeshComponent*   Front_02;                                                  // 0x02A0(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UHierarchicalInstancedStaticMeshComponent*   Front_03;                                                  // 0x02A8(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UHierarchicalInstancedStaticMeshComponent*   Front_04;                                                  // 0x02B0(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UHierarchicalInstancedStaticMeshComponent*   Front_05;                                                  // 0x02B8(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UHierarchicalInstancedStaticMeshComponent*   Front_06;                                                  // 0x02C0(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UHierarchicalInstancedStaticMeshComponent*   Front_07;                                                  // 0x02C8(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UHierarchicalInstancedStaticMeshComponent*   Left_00;                                                   // 0x02D0(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UHierarchicalInstancedStaticMeshComponent*   Left_01;                                                   // 0x02D8(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UHierarchicalInstancedStaticMeshComponent*   Left_02;                                                   // 0x02E0(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UHierarchicalInstancedStaticMeshComponent*   Left_03;                                                   // 0x02E8(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UHierarchicalInstancedStaticMeshComponent*   Left_04;                                                   // 0x02F0(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UHierarchicalInstancedStaticMeshComponent*   Left_05;                                                   // 0x02F8(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UHierarchicalInstancedStaticMeshComponent*   Left_06;                                                   // 0x0300(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UHierarchicalInstancedStaticMeshComponent*   Left_07;                                                   // 0x0308(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UHierarchicalInstancedStaticMeshComponent*   Back_00;                                                   // 0x0310(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UHierarchicalInstancedStaticMeshComponent*   Back_01;                                                   // 0x0318(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UHierarchicalInstancedStaticMeshComponent*   Back_02;                                                   // 0x0320(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UHierarchicalInstancedStaticMeshComponent*   Back_03;                                                   // 0x0328(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UHierarchicalInstancedStaticMeshComponent*   Back_04;                                                   // 0x0330(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UHierarchicalInstancedStaticMeshComponent*   Back_05;                                                   // 0x0338(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UHierarchicalInstancedStaticMeshComponent*   Back_06;                                                   // 0x0340(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UHierarchicalInstancedStaticMeshComponent*   Back_07;                                                   // 0x0348(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UHierarchicalInstancedStaticMeshComponent*   Right_00;                                                  // 0x0350(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UHierarchicalInstancedStaticMeshComponent*   Right_01;                                                  // 0x0358(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UHierarchicalInstancedStaticMeshComponent*   Right_02;                                                  // 0x0360(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UHierarchicalInstancedStaticMeshComponent*   Right_03;                                                  // 0x0368(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UHierarchicalInstancedStaticMeshComponent*   Right_04;                                                  // 0x0370(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UHierarchicalInstancedStaticMeshComponent*   Right_05;                                                  // 0x0378(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UHierarchicalInstancedStaticMeshComponent*   Right_06;                                                  // 0x0380(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UHierarchicalInstancedStaticMeshComponent*   Right_07;                                                  // 0x0388(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMeshComponent*                        CornerFL_00;                                               // 0x0390(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMeshComponent*                        CornerFL_01;                                               // 0x0398(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMeshComponent*                        CornerFL_02;                                               // 0x03A0(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMeshComponent*                        CornerFL_03;                                               // 0x03A8(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMeshComponent*                        CornerFL_04;                                               // 0x03B0(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMeshComponent*                        CornerFL_05;                                               // 0x03B8(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMeshComponent*                        CornerFL_06;                                               // 0x03C0(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMeshComponent*                        CornerFL_07;                                               // 0x03C8(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMeshComponent*                        CornerLB_00;                                               // 0x03D0(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMeshComponent*                        CornerLB_01;                                               // 0x03D8(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMeshComponent*                        CornerLB_02;                                               // 0x03E0(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMeshComponent*                        CornerLB_03;                                               // 0x03E8(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMeshComponent*                        CornerLB_04;                                               // 0x03F0(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMeshComponent*                        CornerLB_05;                                               // 0x03F8(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMeshComponent*                        CornerLB_06;                                               // 0x0400(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMeshComponent*                        CornerLB_07;                                               // 0x0408(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMeshComponent*                        CornerBR_00;                                               // 0x0410(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMeshComponent*                        CornerBR_01;                                               // 0x0418(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMeshComponent*                        CornerBR_02;                                               // 0x0420(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMeshComponent*                        CornerBR_03;                                               // 0x0428(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMeshComponent*                        CornerBR_04;                                               // 0x0430(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMeshComponent*                        CornerBR_05;                                               // 0x0438(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMeshComponent*                        CornerBR_06;                                               // 0x0440(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMeshComponent*                        CornerBR_07;                                               // 0x0448(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMeshComponent*                        CornerRF_00;                                               // 0x0450(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMeshComponent*                        CornerRF_01;                                               // 0x0458(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMeshComponent*                        CornerRF_02;                                               // 0x0460(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMeshComponent*                        CornerRF_03;                                               // 0x0468(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMeshComponent*                        CornerRF_04;                                               // 0x0470(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMeshComponent*                        CornerRF_05;                                               // 0x0478(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMeshComponent*                        CornerRF_06;                                               // 0x0480(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMeshComponent*                        CornerRF_07;                                               // 0x0488(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_MR81[0x20];                                    // 0x0490(0x0020) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerBuildingSystemDepricated");
		return ptr;
	}



	void RemoveUnusedParts();
	class UHierarchicalInstancedStaticMeshComponent* GetFloorMeshComponent(Tiger_EUTigerBuildingSide Side, int FloorNumber);
	class UStaticMeshComponent* GetCornerMeshComponent(Tiger_EUTigerBuildingSide Side, int FloorNumber);
	TArray<class UHierarchicalInstancedStaticMeshComponent*> GetAllFloorMeshComponents();
	TArray<class UStaticMeshComponent*> GetAllCornerMeshComponents();
};

// Class Tiger.TigerBuildingWallStreamingSettings
// 0x0008 (FullSize[0x0040] - InheritedSize[0x0038])
class UTigerBuildingWallStreamingSettings : public USharkLocalDeveloperSettings
{
public:
	int                                                WallsToStreamPerFrame;                                     // 0x0038(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bLoggingEnabled;                                           // 0x003C(0x0001) (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_MSN3[0x3];                                     // 0x003D(0x0003) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerBuildingWallStreamingSettings");
		return ptr;
	}



};

// Class Tiger.TigerBuildingSystemWallStreamer
// 0x0028 (FullSize[0x0250] - InheritedSize[0x0228])
class ATigerBuildingSystemWallStreamer : public AActor
{
public:
	TArray<struct FTigerStreamableBuildingSides>       StreamableBuildingParts;                                   // 0x0228(0x0010) (Edit, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	TArray<class UStaticMeshComponent*>                ComponentsToCreateRenderstateOn;                           // 0x0238(0x0010) (ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_SQDN[0x8];                                     // 0x0248(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerBuildingSystemWallStreamer");
		return ptr;
	}



};

// Class Tiger.TigerBuildingWallPreviewer
// 0x0008 (FullSize[0x0230] - InheritedSize[0x0228])
class ATigerBuildingWallPreviewer : public AActor
{
public:
	class UClass*                                      Preset;                                                    // 0x0228(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerBuildingWallPreviewer");
		return ptr;
	}



};

// Class Tiger.TigerCamarillaDecal
// 0x0008 (FullSize[0x0238] - InheritedSize[0x0230])
class ATigerCamarillaDecal : public ADecalActor
{
public:
	unsigned char                                      UnknownData_AU0L[0x8];                                     // 0x0230(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerCamarillaDecal");
		return ptr;
	}



};

// Class Tiger.TigerCameraPreset
// 0x0080 (FullSize[0x00A8] - InheritedSize[0x0028])
class UTigerCameraPreset : public UObject
{
public:
	float                                              FOV;                                                       // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SpringArmLength;                                           // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     CameraOffset;                                              // 0x0030(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     TargetOffset;                                              // 0x003C(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                                 TransitionCurveIn;                                         // 0x0048(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                                 TransitionCurveOutOverride;                                // 0x0050(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                                 RotatePawnTransition;                                      // 0x0058(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SidewaysCameraMirrorTime;                                  // 0x0060(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     CameraLagSpeed;                                            // 0x0064(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     CameraLagMaxDistance;                                      // 0x0070(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              CameraRotationLagSpeed;                                    // 0x007C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              CameraSensitivityModifier;                                 // 0x0080(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bUseCameraSensitivtyModifierDuringFade;                    // 0x0084(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_V0Q6[0x3];                                     // 0x0085(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UClass*                                      CameraBehavior;                                            // 0x0088(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      CameraShakeBehaviour;                                      // 0x0090(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bShortenSpringArmWhenLookingUp;                            // 0x0098(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_995K[0x3];                                     // 0x0099(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              ViewPitchMax;                                              // 0x009C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ArmLengthInterpSpeed;                                      // 0x00A0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_6K6F[0x4];                                     // 0x00A4(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerCameraPreset");
		return ptr;
	}



};

// Class Tiger.TigerCapturePointProgressUI
// 0x0050 (FullSize[0x02D0] - InheritedSize[0x0280])
class UTigerCapturePointProgressUI : public UTigerWidget
{
public:
	struct FText                                       YouCapturingStatusText;                                    // 0x0280(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FText                                       EnemyCapturingStatusText;                                  // 0x0298(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FText                                       ContestedStatusText;                                       // 0x02B0(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	Tiger_ETigerCapturePointStatus                     CaptureStatus;                                             // 0x02C8(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_CEAE[0x3];                                     // 0x02C9(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              PercentageLeft;                                            // 0x02CC(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerCapturePointProgressUI");
		return ptr;
	}



	void StatusChanged();
	void OnCapturePointEnabled();
};

// Class Tiger.TigerChallenge
// 0x0088 (FullSize[0x00B0] - InheritedSize[0x0028])
class UTigerChallenge : public UObject
{
public:
	unsigned char                                      UnknownData_207O[0x8];                                     // 0x0028(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnValueChangedEvent;                                       // 0x0030(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnChallengeCompletedEvent;                                 // 0x0040(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UWorld*                                      World;                                                     // 0x0050(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ATigerPlayerController*                      OwningPlayerController;                                    // 0x0058(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                TargetValue;                                               // 0x0060(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                PreSessionValue;                                           // 0x0064(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FText                                       ChallengeDisplayName;                                      // 0x0068(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	int                                                DefaultTargetValue;                                        // 0x0080(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_8JB7[0x4];                                     // 0x0084(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FText                                       Description;                                               // 0x0088(0x0018) (BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPrivate)
	uint64_t                                           ChallengeTypeTelemetryID;                                  // 0x00A0(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               bChallengeCompleteEventRaised;                             // 0x00A8(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_QJVJ[0x7];                                     // 0x00A9(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerChallenge");
		return ptr;
	}



	void SetCurrentValue(int NewValue);
	void OnValueChangedEvent__DelegateSignature(class UTigerChallenge* Challenge);
	void OnChallengeCompletedEvent__DelegateSignature(class UTigerChallenge* Challenge);
	int GetTargetValue();
	struct FTigerQuestIdentifier GetQuestIds();
	float GetProgress();
	int GetPreSessionValue();
	int GetCurrentValue();
	struct FText BuildDescriptionText();
};

// Class Tiger.TigerChallengeBreakMasquerade
// 0x0008 (FullSize[0x00B8] - InheritedSize[0x00B0])
class UTigerChallengeBreakMasquerade : public UTigerChallenge
{
public:
	bool                                               bOncePerMatch;                                             // 0x00B0(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_7X1U[0x7];                                     // 0x00B1(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerChallengeBreakMasquerade");
		return ptr;
	}



	void HandlePlayerBreakMasquerade(bool InIsMasqueradeBreached, Tiger_ETigerAIPlayerAction InPlayerAction);
};

// Class Tiger.TigerChallengeCollectibles
// 0x0008 (FullSize[0x00B8] - InheritedSize[0x00B0])
class UTigerChallengeCollectibles : public UTigerChallenge
{
public:
	unsigned char                                      UnknownData_P385[0x8];                                     // 0x00B0(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerChallengeCollectibles");
		return ptr;
	}



	void HandleCollectibleCollected(uint32_t InCollectibleId);
};

// Class Tiger.TigerEditorGameSettings
// 0x0068 (FullSize[0x00A0] - InheritedSize[0x0038])
class UTigerEditorGameSettings : public USharkLocalDeveloperSettings
{
public:
	bool                                               bMatchWaitsForMultipleGroupsInEditor;                      // 0x0038(0x0001) (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bMatchWaitsForReadyStatesInEditor;                         // 0x0039(0x0001) (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bEnableSpawnCountdownInEditor;                             // 0x003A(0x0001) (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bEnableNpcSpawningInEditor;                                // 0x003B(0x0001) (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bUseLocalVendorCategories;                                 // 0x003C(0x0001) (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_BV1L[0x3];                                     // 0x003D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	unsigned char                                      SeasonConfigOverride[0x28];                                // 0x003D(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	bool                                               bShowGeneratedMeshActorsInOutliner;                        // 0x0068(0x0001) (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bSimulateParticlesInEditor;                                // 0x0069(0x0001) (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_K5J2[0x6];                                     // 0x006A(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	unsigned char                                      PreviewerClass[0x28];                                      // 0x006A(0x0028) UNKNOWN PROPERTY: SoftClassProperty
	struct FCoreUObject_FColor                         IndoorVolumeColor;                                         // 0x0098(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_RDZX[0x4];                                     // 0x009C(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerEditorGameSettings");
		return ptr;
	}



};

// Class Tiger.TigerGameMode
// 0x01F0 (FullSize[0x04B8] - InheritedSize[0x02C8])
class ATigerGameMode : public AGameModeBase
{
public:
	unsigned char                                      UnknownData_8KI0[0x10];                                    // 0x02C8(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnRestartPlayer;                                           // 0x02D8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UTigerGroupCoordinator*                      GroupCoordinator;                                          // 0x02E8(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTigerMasqueradeCoordinator*                 MasqueradeCoordinator;                                     // 0x02F0(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_SSJ8[0x70];                                    // 0x02F8(0x0070) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	unsigned char                                      SpawnMechanicClass[0x28];                                  // 0x02F8(0x0028) UNKNOWN PROPERTY: SoftClassProperty
	class UTigerAICoordinator*                         AICoordinator;                                             // 0x0390(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTigerNPCSpawningCoordinator*                NPCSpawner;                                                // 0x0398(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	Tiger_ESessionType                                 SessionTraveledFrom;                                       // 0x03A0(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	Tiger_ETigerGameType                               GameType;                                                  // 0x03A1(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_49YH[0x5E];                                    // 0x03A2(0x005E) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UTigerSpawnMechanic*                         SpawnMechanic;                                             // 0x0400(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTigerSessionService*                        TigerSessionService;                                       // 0x0408(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_XNW3[0x50];                                    // 0x0410(0x0050) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UClass*                                      ItemClusterClass;                                          // 0x0460(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_Z0HZ[0x4];                                     // 0x0468(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              ServerLoadScalabilityUpdateFrequency;                      // 0x046C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              ServerLoadScalability30HzTarget;                           // 0x0470(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              ServerLoadScalability20HzTarget;                           // 0x0474(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               ServerLoadScalabilityEnabled;                              // 0x0478(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_59WR[0x17];                                    // 0x0479(0x0017) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UTigerPlayerServerLoginProcess*              PlayerServerLoginProcess;                                  // 0x0490(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_E0HC[0x18];                                    // 0x0498(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              NetworkProfileOnPlayerConnectionDuration;                  // 0x04B0(0x0004) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_QVNT[0x4];                                     // 0x04B4(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerGameMode");
		return ptr;
	}



	bool TryRestartPlayerIfNeeded(class ATigerPlayerController* Player);
	void TigerEnableServerScalability(bool InEnabled);
	void ShutdownServer();
	void SetPlayerIsReadyToPlay(class ATigerPlayerController* PlayerController);
	void SendChatMessageToGroupMembers(class UTigerChatComponent* InMessageSender, const struct FText& InMessageText);
	void SendChatMessageToAllClients(class UTigerChatComponent* InMessageSender, const struct FText& InMessageText);
	void OnRestartPlayer__DelegateSignature(class AController* NewPlayer);
	void OnNpcDeathEvent__DelegateSignature(class ATigerNPC* NPC, class AController* InstigatorController);
	class UTigerAICoordinator* GetAICoordinator();
	void CreateClientSpawners(class AController* InNewPlayer);
};

// Class Tiger.TigerElysiumGameMode
// 0x0020 (FullSize[0x04D8] - InheritedSize[0x04B8])
class ATigerElysiumGameMode : public ATigerGameMode
{
public:
	unsigned char                                      UnknownData_GBGH[0x20];                                    // 0x04B8(0x0020) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerElysiumGameMode");
		return ptr;
	}



	void OnShowAdminMessages();
	void OnReloadAdminMessages();
};

// Class Tiger.TigerGameSession
// 0x0058 (FullSize[0x0298] - InheritedSize[0x0240])
class ATigerGameSession : public AGameSession
{
public:
	unsigned char                                      UnknownData_0HJB[0x58];                                    // 0x0240(0x0058) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerGameSession");
		return ptr;
	}



};

// Class Tiger.TigerElysiumGameSession
// 0x0000 (FullSize[0x0298] - InheritedSize[0x0298])
class ATigerElysiumGameSession : public ATigerGameSession
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerElysiumGameSession");
		return ptr;
	}



};

// Class Tiger.TigerGameState
// 0x00A8 (FullSize[0x0320] - InheritedSize[0x0278])
class ATigerGameState : public AGameStateBase
{
public:
	struct FScriptMulticastDelegate                    OnWeatherScenarioChangedEvent;                             // 0x0278(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      bIsFakeMatchmakingDelayActive[0x2];                        // 0x0288(0x0002) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_6A19[0x1E];                                    // 0x028A(0x001E) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FGuid                                       MatchID;                                                   // 0x02A8(0x0010) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class ATigerHolyIncense>            HolyIncense;                                               // 0x02B8(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_Y0W2[0x4];                                     // 0x02C0(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              SynchronizedTime;                                          // 0x02C4(0x0004) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_KGRJ[0x10];                                    // 0x02C8(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UClass*                                      WeatherScenarioClass;                                      // 0x02D8(0x0008) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTigerWeatherScenarioData*                   WeatherScenario;                                           // 0x02E0(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_UA8Y[0x20];                                    // 0x02E8(0x0020) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FString                                     ServerId;                                                  // 0x0308(0x0010) (Net, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	Tiger_ETigerServerScalabilityTarget                CurrentScalabilityTarget;                                  // 0x0318(0x0001) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_ZUUU[0x7];                                     // 0x0319(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerGameState");
		return ptr;
	}



	void TigerPrintServerScalabilityTarget();
	void TigerDisplayServerId();
	void OnWeatherScenarioChanged__DelegateSignature(class UTigerWeatherScenarioData* WeatherScenarioData);
	void OnRep_WeatherScenarioClass();
	void OnRep_SynchronizedTime();
	void OnRep_FakeMatchmakingDisabledForMode();
	void Multicast_SynchronizeTime(float InNewSynchronizedTime);
	float GetSynchronizedTimeNonInterpolated();
	float GetSynchronizedTime();
	struct FGuid GetMatchId();
};

// Class Tiger.TigerFeedingAnimationAsset
// 0x0360 (FullSize[0x0390] - InheritedSize[0x0030])
class UTigerFeedingAnimationAsset : public UDataAsset
{
public:
	struct FTigerFeedingDataByGender                   FeedingDataByClan[0x3];                                    // 0x0030(0x0360) (Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerFeedingAnimationAsset");
		return ptr;
	}



};

// Class Tiger.TigerDisciplineBase
// 0x0050 (FullSize[0x0078] - InheritedSize[0x0028])
class UTigerDisciplineBase : public UObject
{
public:
	class ATigerCharacter*                             Owner;                                                     // 0x0028(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTigerDisciplineComponent*                   DisciplineComponent;                                       // 0x0030(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTigerActiveDisciplineConfig*                BaseConfig;                                                // 0x0038(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_ZC1D[0x18];                                    // 0x0040(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                PowerLevel;                                                // 0x0058(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_9F5J[0x8];                                     // 0x005C(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              AIUseDuration;                                             // 0x0064(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              AIMinCooldownDuration;                                     // 0x0068(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              AIMaxCooldownDuration;                                     // 0x006C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_YXU6[0x8];                                     // 0x0070(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerDisciplineBase");
		return ptr;
	}



	bool UsesChargesUI();
	bool UsesCharges();
	bool ShouldUseCameraPresetWhenActive();
	bool HasPreparationCameraPreset();
	bool HasCharge();
	bool HasCameraPreset();
	class ATigerPlayer* GetTigerPlayer();
	bool GetShouldDisplayActiveTimeLeft();
	class UClass* GetPreparationCameraPreset();
	int GetMaxCharges();
	int GetCharges();
	class UClass* GetCameraPreset();
};

// Class Tiger.TigerWeaponAbilityDash
// 0x0050 (FullSize[0x00C8] - InheritedSize[0x0078])
class UTigerWeaponAbilityDash : public UTigerDisciplineBase
{
public:
	class UTigerDashConfig*                            AbilityConfig;                                             // 0x0078(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                                     CastDirection;                                             // 0x0080(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                                     CastLocation;                                              // 0x008C(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_96Q1[0x30];                                    // 0x0098(0x0030) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerWeaponAbilityDash");
		return ptr;
	}



	void RecoveryMontageEnded(class UAnimMontage* Montage, bool bWasInterrupted);
	void OnTerrainInterrupt(class AActor* TerrainActor, class UPrimitiveComponent* HitComponent, const struct FHitResult& HitResult);
	void OnTerrainHitResult(class AActor* InTerrainActor, class UPrimitiveComponent* InHitComponent, const struct FHitResult& InHitResult);
	void OnTerrainHit(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, const struct FHitResult& Hit);
	void OnOwnerMovementUpdated(float DeltaSeconds, const struct FVector& OldLocation, const struct FVector& OldVelocity);
	void OnForcedMoveResult(Tiger_ETigerForcedMoveResult ForcedMoveResult);
	void OnCharacterHit(class ATigerCharacter* AHitTigerCharacter);
	void Multicast_SpawnOnHitParticle(class ATigerCharacter* TigerCharacterHit);
	void Multicast_PlayRecovery();
};

// Class Tiger.TigerDisciplineConfigBase
// 0x00C0 (FullSize[0x00E8] - InheritedSize[0x0028])
class UTigerDisciplineConfigBase : public UObject
{
public:
	unsigned char                                      UnknownData_V5F3[0x8];                                     // 0x0028(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UTexture2D*                                  UIIcon;                                                    // 0x0030(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FText                                       DisciplineName;                                            // 0x0038(0x0018) (Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FText                                       DisciplineDescription;                                     // 0x0050(0x0018) (Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)
	bool                                               bIsClanAbility;                                            // 0x0068(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bEnablesGroupMemberHealthBars;                             // 0x0069(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	Tiger_ETigerAIPlayerAction                         ActivationActionReported;                                  // 0x006A(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_A4LD[0x5];                                     // 0x006B(0x0005) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UClass*                                      DisciplineClass;                                           // 0x0070(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	Tiger_ETigerActionAllowed                          AllowedActions[0xE];                                       // 0x0078(0x000E) ELEMENT_SIZE_MISMATCH (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_BA0D[0x2A];                                    // 0x0078(0x002A) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
	uint16_t                                           ActionsThatShouldCancelDiscipline;                         // 0x00B0(0x0002) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bShouldAutomaticallyUseCameraPreset;                       // 0x00B2(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_VA6U[0x5];                                     // 0x00B3(0x0005) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UClass*                                      PreparationCameraPreset;                                   // 0x00B8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      CameraPreset;                                              // 0x00C0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      CameraPresetIndoor;                                        // 0x00C8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      Crosshair;                                                 // 0x00D0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMediaSource*                                PreviewVideo;                                              // 0x00D8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint64_t                                           PersistentTelemetryID;                                     // 0x00E0(0x0008) (Edit, ZeroConstructor, EditConst, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerDisciplineConfigBase");
		return ptr;
	}



	void GetLevelInfo(TArray<struct FTigerDisciplineLevelInfo>* LevelInfo);
};

// Class Tiger.TigerActiveDisciplineConfig
// 0x0078 (FullSize[0x0160] - InheritedSize[0x00E8])
class UTigerActiveDisciplineConfig : public UTigerDisciplineConfigBase
{
public:
	int                                                MaxLevel;                                                  // 0x00E8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_TTF0[0x4];                                     // 0x00EC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FText                                       CooldownText;                                              // 0x00F0(0x0018) (Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FText                                       CooldownSuffix;                                            // 0x0108(0x0018) (Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	int                                                MaxCharges;                                                // 0x0120(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_FDNL[0x4];                                     // 0x0124(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<float>                                      RechargeTimes;                                             // 0x0128(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<float>                                      CooldownTimes;                                             // 0x0138(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	bool                                               bShouldRotateTowardsCameraOnActivation;                    // 0x0148(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bShouldRotateTowardsCameraOnRelease;                       // 0x0149(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_GPHO[0x2];                                     // 0x014A(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              MovementMultiplier;                                        // 0x014C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              GravityMultiplier;                                         // 0x0150(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              PrimaryAINoiseEventRange;                                  // 0x0154(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SecondaryAINoiseEventRange;                                // 0x0158(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_XD12[0x4];                                     // 0x015C(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerActiveDisciplineConfig");
		return ptr;
	}



};

// Class Tiger.TigerHookConfig
// 0x0088 (FullSize[0x01E8] - InheritedSize[0x0160])
class UTigerHookConfig : public UTigerActiveDisciplineConfig
{
public:
	float                                              MaxThrowDistance;                                          // 0x0160(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              StopPullDistance;                                          // 0x0164(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              TimeUntilReachMaxThrowDistance;                            // 0x0168(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              TimeUntilReturn;                                           // 0x016C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              FastReelTime;                                              // 0x0170(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              RotateTime;                                                // 0x0174(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              TimeBeforeReel;                                            // 0x0178(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              TimeUntilCutoffVelocity;                                   // 0x017C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              TimeLeftWhenToAllowHookingPlayerActions;                   // 0x0180(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              HookDamage;                                                // 0x0184(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              StunDurationPostHook;                                      // 0x0188(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_20HX[0x4];                                     // 0x018C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UClass*                                      HookType;                                                  // 0x0190(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      HookedBuffType;                                            // 0x0198(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      HookingBuffType;                                           // 0x01A0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                                ThrowAnimation;                                            // 0x01A8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                                ReelAnimation;                                             // 0x01B0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                                AirThrowAnimation;                                         // 0x01B8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                                AirReelAnimation;                                          // 0x01C0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                                HookedReactionAnimation;                                   // 0x01C8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                                HookedReelAnimation;                                       // 0x01D0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                                HookedPostReelAnimation;                                   // 0x01D8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bUseForcedMove;                                            // 0x01E0(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_G3GC[0x7];                                     // 0x01E1(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerHookConfig");
		return ptr;
	}



};

// Class Tiger.TigerWeaponAbilityHook
// 0x0010 (FullSize[0x0088] - InheritedSize[0x0078])
class UTigerWeaponAbilityHook : public UTigerDisciplineBase
{
public:
	class UTigerHookConfig*                            Config;                                                    // 0x0078(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_8ZLI[0x8];                                     // 0x0080(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerWeaponAbilityHook");
		return ptr;
	}



	void Server_ThrowHook(const struct FVector& SpawnLoc, const struct FVector& TargetLoc);
};

// Class Tiger.TigerReflectConfig
// 0x0050 (FullSize[0x01B0] - InheritedSize[0x0160])
class UTigerReflectConfig : public UTigerActiveDisciplineConfig
{
public:
	Tiger_ETigerReflectBehaviour                       ReflectBehaviors[0x5];                                     // 0x0160(0x0005) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_RGBT[0x3];                                     // 0x0165(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              DamageLetThroughModifier;                                  // 0x0168(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ReflectSpread;                                             // 0x016C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaxDuration;                                               // 0x0170(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_D6V2[0x4];                                     // 0x0174(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UClass*                                      BulletReflector;                                           // 0x0178(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ReflectorRadius;                                           // 0x0180(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ReflectorHalfHeight;                                       // 0x0184(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ReflectorCoverageRange;                                    // 0x0188(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              PoseSwapDelay;                                             // 0x018C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FName>                               ReflectMontageNames;                                       // 0x0190(0x0010) (Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	struct FName                                       ReflectEndMontageName;                                     // 0x01A0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bDrawReflectedBulletLines;                                 // 0x01A8(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_777P[0x7];                                     // 0x01A9(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerReflectConfig");
		return ptr;
	}



};

// Class Tiger.TigerWeaponAbilityReflect
// 0x0060 (FullSize[0x00D8] - InheritedSize[0x0078])
class UTigerWeaponAbilityReflect : public UTigerDisciplineBase
{
public:
	unsigned char                                      UnknownData_GLZ2[0x10];                                    // 0x0078(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UTigerReflectConfig*                         Config;                                                    // 0x0088(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class ATigerPlayer*                                Player;                                                    // 0x0090(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AActor*                                      ReflectorActor;                                            // 0x0098(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_57YH[0x38];                                    // 0x00A0(0x0038) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerWeaponAbilityReflect");
		return ptr;
	}



	void ReflectProjectile(class AActor* InReflector, class AActor* InOverlappedActor, const struct FHitResult& InHit);
	void Multicast_StopReflecting();
	void Multicast_StopDiscipline();
	void Multicast_ReflectProjectile(class UTigerRangedWeapon* InRangedWeapon, class AActor* InOverlappedActor, Tiger_ETigerReflectBehaviour InBehaviour, const struct FVector& InProjectileSpawnLocation, const struct FRotator& InProjectileSpawnDirection, int aFireSettingsIndex);
};

// Class Tiger.TigerWeaponAbilityReflectActor
// 0x0000 (FullSize[0x0228] - InheritedSize[0x0228])
class ATigerWeaponAbilityReflectActor : public AActor
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerWeaponAbilityReflectActor");
		return ptr;
	}



	bool CanBeReflected(class UPrimitiveComponent* InOverlappedComponent, class AActor* InOtherActor, class UPrimitiveComponent* InOtherComp, int InOtherBodyIndex, bool bInFromSweep, const struct FHitResult& InSweepResult);
};

// Class Tiger.TigerWeaponAmmoWidget
// 0x0000 (FullSize[0x0280] - InheritedSize[0x0280])
class UTigerWeaponAmmoWidget : public UTigerWidget
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerWeaponAmmoWidget");
		return ptr;
	}



	void WeaponEquipped(class UTigerItemAsset* InWeaponAsset, int InItemCount, class ATigerLootBox* InLootBox, Tiger_ETigerWeaponSlot InWeaponSlot);
	void SelectedSlotUpdated(class UTigerRangedWeaponComponent* RangedWeaponComponent, class UTigerInventoryComponent* Inventory, Tiger_ETigerWeaponSlot NewSlot);
	void ArtifactUpdated(class UTigerItemAsset* InArtifactAsset);
	void AmmoUpdated(int AmmoInMagazine, int AmmoInInventory);
};

// Class Tiger.TigerWeaponAnimInstance
// 0x0008 (FullSize[0x02C0] - InheritedSize[0x02B8])
class UTigerWeaponAnimInstance : public UAnimInstance
{
public:
	unsigned char                                      UnknownData_OTG0[0x8];                                     // 0x02B8(0x0008) Fix Super Size


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerWeaponAnimInstance");
		return ptr;
	}



};

// Class Tiger.TigerWeapon
// 0x0080 (FullSize[0x00A8] - InheritedSize[0x0028])
class UTigerWeapon : public UObject
{
public:
	unsigned char                                      UnknownData_F70D[0x8];                                     // 0x0028(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UMaterialInterface*                          RarityMaterial;                                            // 0x0030(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	Tiger_ETigerItemRarity                             Rarity;                                                    // 0x0038(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_MW2Y[0x7];                                     // 0x0039(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class USkeletalMesh*                               SkeletalMesh;                                              // 0x0040(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USkeletalMesh*                               OffhandSkeletalMesh;                                       // 0x0048(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      AnimClass;                                                 // 0x0050(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      Crosshair;                                                 // 0x0058(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                                  HUDIcon;                                                   // 0x0060(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                                 RarityDamageMultiplierCurve;                               // 0x0068(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       WeaponUnequipAnimation;                                    // 0x0070(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       WeaponEquipAnimation;                                      // 0x0078(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       PrimaryAttachPoint;                                        // 0x0080(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       SecondaryAttachPoint;                                      // 0x0088(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              FearValueMultiplier;                                       // 0x0090(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              FearDistanceMultiplier;                                    // 0x0094(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bIsDualWeapon;                                             // 0x0098(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_XZ31[0x7];                                     // 0x0099(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	uint64_t                                           PersistentTelemetryID;                                     // 0x00A0(0x0008) (Edit, ZeroConstructor, EditConst, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerWeapon");
		return ptr;
	}



};

// Class Tiger.TigerRangedWeapon
// 0x0140 (FullSize[0x01E8] - InheritedSize[0x00A8])
class UTigerRangedWeapon : public UTigerWeapon
{
public:
	struct FName                                       WeaponName;                                                // 0x00A8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	Tiger_ETigerWeaponType                             WeaponType;                                                // 0x00B0(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_GRHQ[0x3];                                     // 0x00B1(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FName                                       CharacterReloadAnimationName;                              // 0x00B4(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_VV15[0x4];                                     // 0x00BC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FName>                               FireAnimations;                                            // 0x00C0(0x0010) (Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	float                                              TimeAfterFireBeforePrimingIsAllowed;                       // 0x00D0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       CharacterPrimingAnimation;                                 // 0x00D4(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_UGT6[0x4];                                     // 0x00DC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UAnimMontage*                                WeaponPrimingAnimation;                                    // 0x00E0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       RecoilNoiseBlendspace;                                     // 0x00E8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                                GunReload;                                                 // 0x00F0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                                GunFireAnimation;                                          // 0x00F8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                                 VerticalRecoilCurve;                                       // 0x0100(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                                 HorizontalRecoilCurve;                                     // 0x0108(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                                 VerticalRecoilMultiplierCurveOverRecoil;                   // 0x0110(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                                 HorizontalRecoilMultiplierCurveOverRecoil;                 // 0x0118(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      ProjectileClass;                                           // 0x0120(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               StartAimingSound;                                          // 0x0128(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               StopAimingSound;                                           // 0x0130(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               HitWallSound;                                              // 0x0138(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               FireSound;                                                 // 0x0140(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              LoopFireAfterFireRateMultiplier;                           // 0x0148(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_LSIO[0x4];                                     // 0x014C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UAkAudioEvent*                               LowAmmoSound;                                              // 0x0150(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               OutOfAmmoSound;                                            // 0x0158(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               CoolDownAudioEvent;                                        // 0x0160(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                AmountOfProjectilesFiredBeforeCooldown;                    // 0x0168(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              LowAmmoThresholdPercent;                                   // 0x016C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      CameraShake;                                               // 0x0170(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      CameraShakeAimed;                                          // 0x0178(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UForceFeedbackEffect*                        FireForceFeedback;                                         // 0x0180(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                ShotsPerTrail;                                             // 0x0188(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                AimedFov;                                                  // 0x018C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bShotsArePiercing;                                         // 0x0190(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	Tiger_ETigerWeaponAmmoType                         AmmoType;                                                  // 0x0191(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_GEI3[0x6];                                     // 0x0192(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UCurveFloat*                                 DamageDropOffCurve;                                        // 0x0198(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      CameraPreset;                                              // 0x01A0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      CrosshairsByFireMode[0x3];                                 // 0x01A8(0x0018) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      AimingCrossHair;                                           // 0x01C0(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FName>                               SecondaryFireAnimations;                                   // 0x01C8(0x0010) (Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	struct FName                                       MuzzleSocket;                                              // 0x01D8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      TracerActor;                                               // 0x01E0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerRangedWeapon");
		return ptr;
	}



	bool ShouldApplyModifier(class ATigerCharacter* InCharacter, Tiger_ETigerSpreadModifier InModifier);
	void PlayLoopingAkEvents(class ATigerCharacter* InInstigator);
	void OnHitAuthority(class ATigerCharacter* Instigator, class ATigerCharacter* Target);
	void OnEndFireAudio(class ATigerCharacter* InInstigator);
	void OnBeginFireAudio(class ATigerCharacter* InInstigator);
	struct FVector CalculateBulletDirection(const struct FVector& InAimDirection, struct FTigerRangedRandomState* InOutRandomState, int InBulletIndex, class UTigerRangedWeaponComponent* InRangedWeaponComponent);
};

// Class Tiger.TigerWeatherController
// 0x0000 (FullSize[0x0228] - InheritedSize[0x0228])
class ATigerWeatherController : public AActor
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerWeatherController");
		return ptr;
	}



};

// Class Tiger.TigerWeatherScenarioData
// 0x0008 (FullSize[0x0038] - InheritedSize[0x0030])
class UTigerWeatherScenarioData : public UDataAsset
{
public:
	struct FName                                       DebugName;                                                 // 0x0030(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerWeatherScenarioData");
		return ptr;
	}



};

// Class Tiger.TigerWeatherSettings
// 0x00A0 (FullSize[0x00D8] - InheritedSize[0x0038])
class UTigerWeatherSettings : public USharkLocalDeveloperSettings
{
public:
	TMap<struct FName, class UClass*>                  WeatherScenarioAliases;                                    // 0x0038(0x0050) (Edit, Config, UObjectWrapper, NativeAccessSpecifierPublic)
	TMap<class UClass*, float>                         WeatherScenarioProbabilityRatios;                          // 0x0088(0x0050) (Edit, Config, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerWeatherSettings");
		return ptr;
	}



};

// Class Tiger.TigerWheelInterfaceWidget
// 0x0050 (FullSize[0x02D0] - InheritedSize[0x0280])
class UTigerWheelInterfaceWidget : public UTigerWidget
{
public:
	struct FScriptMulticastDelegate                    OnAlternateActionTriggered;                                // 0x0280(0x0010) (ZeroConstructor, InstancedReference, BlueprintCallable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnPrimaryActionTriggered;                                  // 0x0290(0x0010) (ZeroConstructor, InstancedReference, BlueprintCallable, NativeAccessSpecifierPublic)
	bool                                               bCursorCanBeOutside;                                       // 0x02A0(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_B2CG[0x3];                                     // 0x02A1(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                NumItems;                                                  // 0x02A4(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                MinimumSupportedItems;                                     // 0x02A8(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                MaximumSupportedItems;                                     // 0x02AC(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              MiddleRadius;                                              // 0x02B0(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              OutsideRadius;                                             // 0x02B4(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              GamepadDeadZone;                                           // 0x02B8(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              DeselectionGraceTime;                                      // 0x02BC(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_98WI[0x4];                                     // 0x02C0(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                HoveredIndex;                                              // 0x02C4(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_S1PY[0x8];                                     // 0x02C8(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerWheelInterfaceWidget");
		return ptr;
	}



	void UpdateHoverEffect(int Index);
	void TigerOnWheelPrimaryAction__DelegateSignature(int Index);
	void TigerOnWheelAlternateAction__DelegateSignature(int Index);
	void SetWheelUsable(bool bNewUsable);
	void SetItem(int Index, class UTexture2D* Icon, const struct FText& Label, int Count);
	void SetIsItemSelected(int Index, bool bIsSelected);
	void ResetItems();
	void PlayOpenAnimation();
	void PlayCloseAnimation();
	void OnNumberOfItemsChanged(int InNewNumberOfItems);
	bool IsWheelOpen();
};

// Class Tiger.TigerTooltipWidget
// 0x0008 (FullSize[0x0288] - InheritedSize[0x0280])
class UTigerTooltipWidget : public UTigerWidget
{
public:
	class UTigerWidget*                                OwningWidget;                                              // 0x0280(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, Transient, EditConst, InstancedReference, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerTooltipWidget");
		return ptr;
	}



};

// Class Tiger.TigerWorldCompositionCellComponent
// 0x0038 (FullSize[0x0230] - InheritedSize[0x01F8])
class UTigerWorldCompositionCellComponent : public USceneComponent
{
public:
	class UShapeComponent*                             ShapeComponent;                                            // 0x01F8(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UTigerWorldCompositionCellComponent*> SubCellComponents;                                         // 0x0200(0x0010) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	class ATigerWorldCompositionGrid*                  WorldGrid;                                                 // 0x0210(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FName                                       StreamLevelPath;                                           // 0x0218(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_065K[0x10];                                    // 0x0220(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerWorldCompositionCellComponent");
		return ptr;
	}



	void HandleOnLevelUnloaded();
	void HandleOnLevelLoaded();
};

// Class Tiger.TigerWorldCompositionGridCellComponent
// 0x0000 (FullSize[0x0230] - InheritedSize[0x0230])
class UTigerWorldCompositionGridCellComponent : public UTigerWorldCompositionCellComponent
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerWorldCompositionGridCellComponent");
		return ptr;
	}



};

// Class Tiger.TigerWorldCompositionHexGridCellComponent
// 0x0010 (FullSize[0x0240] - InheritedSize[0x0230])
class UTigerWorldCompositionHexGridCellComponent : public UTigerWorldCompositionCellComponent
{
public:
	float                                              HexCellRadius;                                             // 0x0230(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_P2NO[0xC];                                     // 0x0234(0x000C) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerWorldCompositionHexGridCellComponent");
		return ptr;
	}



};

// Class Tiger.TigerChallengeCollection
// 0x0010 (FullSize[0x0040] - InheritedSize[0x0030])
class UTigerChallengeCollection : public UDataAsset
{
public:
	TArray<struct FTigerChallengeCollectionEntry>      Challenges;                                                // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerChallengeCollection");
		return ptr;
	}



};

// Class Tiger.TigerClientRewardTrackChallenges
// 0x0020 (FullSize[0x0048] - InheritedSize[0x0028])
class UTigerClientRewardTrackChallenges : public UObject
{
public:
	TArray<struct FTigerItemId>                        RewardIds;                                                 // 0x0028(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, NativeAccessSpecifierPublic)
	int                                                RewardHighlightIndex;                                      // 0x0038(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_RV1S[0x4];                                     // 0x003C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UTigerPersistentPlayerState*                 PersistentPlayerState;                                     // 0x0040(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerClientRewardTrackChallenges");
		return ptr;
	}



	class UTigerInventoryItemBase* GetRewardTiedToSpecificChallengeByIndex(int InChallengeIndex);
	class UTigerInventoryItemBase* GetRewardByIndex(int InRewardIndex);
	int GetNumCompletedChallenges();
	int GetNumChallenges();
	int GetCompletionPercentage();
	class UTigerChallenge* GetChallengeByIndex(int ChallengeIndex);
};

// Class Tiger.TigerDisciplineAnimTriggeredConfig
// 0x0010 (FullSize[0x0170] - InheritedSize[0x0160])
class UTigerDisciplineAnimTriggeredConfig : public UTigerActiveDisciplineConfig
{
public:
	class UAnimMontage*                                Montage;                                                   // 0x0160(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	Tiger_ETigerDisciplinesEnum                        DisciplineType;                                            // 0x0168(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_7E8B[0x3];                                     // 0x0169(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              ActiveTimeAfterTrigger;                                    // 0x016C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerDisciplineAnimTriggeredConfig");
		return ptr;
	}



};

// Class Tiger.TigerShockwavePunchConfig
// 0x0080 (FullSize[0x01F0] - InheritedSize[0x0170])
class UTigerShockwavePunchConfig : public UTigerDisciplineAnimTriggeredConfig
{
public:
	TArray<class UAnimMontage*>                        PunchMontages;                                             // 0x0170(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<class UClass*>                              ShockwaveActorToSpawn;                                     // 0x0180(0x0010) (Edit, EditFixedSize, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, NativeAccessSpecifierPublic)
	struct FTigerShockwaveWallData                     ShockwaveWallData;                                         // 0x0190(0x0060) (Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerShockwavePunchConfig");
		return ptr;
	}



};

// Class Tiger.TigerDisciplineAnimTriggered
// 0x0078 (FullSize[0x00F0] - InheritedSize[0x0078])
class UTigerDisciplineAnimTriggered : public UTigerDisciplineBase
{
public:
	class UTigerDisciplineAnimTriggeredConfig*         AnimConfig;                                                // 0x0078(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_63ZS[0x10];                                    // 0x0080(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UAnimMontage*                                LastPlayingMontage;                                        // 0x0090(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TMap<class UAnimMontage*, float>                   TriggerTimes;                                              // 0x0098(0x0050) (NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_U7HD[0x8];                                     // 0x00E8(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerDisciplineAnimTriggered");
		return ptr;
	}



};

// Class Tiger.TigerDisciplineShockwavePunch
// 0x0030 (FullSize[0x0120] - InheritedSize[0x00F0])
class UTigerDisciplineShockwavePunch : public UTigerDisciplineAnimTriggered
{
public:
	unsigned char                                      UnknownData_A0WJ[0x20];                                    // 0x00F0(0x0020) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UTigerShockwavePunchConfig*                  DisciplineConfig;                                          // 0x0110(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAnimMontage*                                PickedMontage;                                             // 0x0118(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerDisciplineShockwavePunch");
		return ptr;
	}



};

// Class Tiger.TigerStunConfig
// 0x0008 (FullSize[0x0168] - InheritedSize[0x0160])
class UTigerStunConfig : public UTigerActiveDisciplineConfig
{
public:
	float                                              StunTime;                                                  // 0x0160(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              StunRadius;                                                // 0x0164(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerStunConfig");
		return ptr;
	}



};

// Class Tiger.TigerDisciplineStun
// 0x0008 (FullSize[0x0080] - InheritedSize[0x0078])
class UTigerDisciplineStun : public UTigerDisciplineBase
{
public:
	class UTigerStunConfig*                            Config;                                                    // 0x0078(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerDisciplineStun");
		return ptr;
	}



};

// Class Tiger.TigerDisciplinesUi
// 0x0038 (FullSize[0x02B8] - InheritedSize[0x0280])
class UTigerDisciplinesUi : public UTigerWidget
{
public:
	class UTigerDisciplineComponent*                   DisciplineComponent;                                       // 0x0280(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTigerFeedingComponent*                      FeedingComponent;                                          // 0x0288(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTigerDisciplineBase*                        DisciplineForSlot[0x3];                                    // 0x0290(0x0018) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	Tiger_ETigerDisciplinesEnum                        DisciplineTypeForSlot[0x3];                                // 0x02A8(0x0003) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_F67G[0xD];                                     // 0x02AB(0x000D) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerDisciplinesUi");
		return ptr;
	}



	void OnUpdatePassiveUI();
	void OnSetNumberOfCharges(Tiger_ETigerDisciplineSlot DisciplineSlot);
	void OnInitializeDisciplineUi();
	void OnDisciplineInterrupted(Tiger_ETigerDisciplineSlot InDisciplineSlot);
	bool HasChargesIfApplicable(Tiger_ETigerDisciplineSlot InSlot);
	class UTigerDisciplineBase* GetSkill(Tiger_ETigerDisciplineSlot InSlot);
	Tiger_ETigerDisciplinesEnum GetDisciplineTypeForSlot(Tiger_ETigerDisciplineSlot InSlot);
	int GetChargesForSlot(Tiger_ETigerDisciplineSlot DisciplineSlot);
	void GetActiveTimeLeftForDiscipline(Tiger_ETigerDisciplinesEnum InDisciplineType, bool* OutIsActive, float* OutTimeLeft);
};

// Class Tiger.TigerSwiftStrikeConfig
// 0x0040 (FullSize[0x01A0] - InheritedSize[0x0160])
class UTigerSwiftStrikeConfig : public UTigerActiveDisciplineConfig
{
public:
	float                                              DashDistance;                                              // 0x0160(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              StartupTime;                                               // 0x0164(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              DashTime;                                                  // 0x0168(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              DashDamage;                                                // 0x016C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                                   DashHitBoxSize;                                            // 0x0170(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              StrikeDelay;                                               // 0x0178(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              StrikeDuration;                                            // 0x017C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              StrikeDamage;                                              // 0x0180(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_9LAU[0x4];                                     // 0x0184(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UClass*                                      StrikeDebuff;                                              // 0x0188(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     StrikeHitBoxSize;                                          // 0x0190(0x000C) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               DrawDebugInfo;                                             // 0x019C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_MQL4[0x3];                                     // 0x019D(0x0003) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerSwiftStrikeConfig");
		return ptr;
	}



	void OnTargetsHitByStrike(TArray<class ATigerCharacter*> Targets);
	void OnTargetsHitByDash(TArray<class ATigerCharacter*> Targets);
	void OnStrike(class ATigerCharacter* Character);
	void OnStartup(class ATigerCharacter* Character);
	void OnDash(class ATigerCharacter* Character, const struct FVector& Location, const struct FVector& Direction);
};

// Class Tiger.TigerDisciplineSwiftStrike
// 0x0030 (FullSize[0x00A8] - InheritedSize[0x0078])
class UTigerDisciplineSwiftStrike : public UTigerDisciplineBase
{
public:
	class UTigerSwiftStrikeConfig*                     Config;                                                    // 0x0078(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_CLQ4[0x28];                                    // 0x0080(0x0028) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerDisciplineSwiftStrike");
		return ptr;
	}



};

// Class Tiger.TigerTeleportConfig
// 0x0008 (FullSize[0x0168] - InheritedSize[0x0160])
class UTigerTeleportConfig : public UTigerActiveDisciplineConfig
{
public:
	float                                              TeleportDistance;                                          // 0x0160(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_24LK[0x4];                                     // 0x0164(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerTeleportConfig");
		return ptr;
	}



};

// Class Tiger.TigerDisciplineTeleport
// 0x0028 (FullSize[0x00A0] - InheritedSize[0x0078])
class UTigerDisciplineTeleport : public UTigerDisciplineBase
{
public:
	class UTigerTeleportConfig*                        Config;                                                    // 0x0078(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_VGZ1[0x20];                                    // 0x0080(0x0020) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerDisciplineTeleport");
		return ptr;
	}



};

// Class Tiger.TigerTrapsConfig
// 0x0188 (FullSize[0x02F8] - InheritedSize[0x0170])
class UTigerTrapsConfig : public UTigerDisciplineAnimTriggeredConfig
{
public:
	class UAkAudioEvent*                               ThrowAudioEvent;                                           // 0x0170(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               LandAudioEvent;                                            // 0x0178(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               ArmingAudioEvent;                                          // 0x0180(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               ExplosionAudioEvent;                                       // 0x0188(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               FizzleAudioEvent;                                          // 0x0190(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               StartGasAudioEvent;                                        // 0x0198(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               StopGasAudioEvent;                                         // 0x01A0(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                                 PitchCurve;                                                // 0x01A8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                                 EmissiveCurve;                                             // 0x01B0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              EmissiveCurveLoopTime;                                     // 0x01B8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                                AllyStatusColor;                                           // 0x01BC(0x0010) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                                EnemyStatusColor;                                          // 0x01CC(0x0010) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaxEmissiveBoost;                                          // 0x01DC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInterface*                          DecalMaterial;                                             // 0x01E0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                                AimMontage;                                                // 0x01E8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       AimTrapSpawnSocket;                                        // 0x01F0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      AimTrapType;                                               // 0x01F8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      TrapType;                                                  // 0x0200(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UClass*>                              GasBuff;                                                   // 0x0208(0x0010) (Edit, BlueprintVisible, EditFixedSize, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<int>                                        MaxTrapsActive;                                            // 0x0218(0x0010) (Edit, BlueprintVisible, EditFixedSize, ZeroConstructor, NativeAccessSpecifierPublic)
	struct FVector                                     SpawnOffset;                                               // 0x0228(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              TerminalVelocity;                                          // 0x0234(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              GravitationalPull;                                         // 0x0238(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              AirFriction;                                               // 0x023C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ThrowForce;                                                // 0x0240(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ThrowMaxForce;                                             // 0x0244(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ThrowPlayerVelocityForceScale;                             // 0x0248(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ThrowPitchOffset;                                          // 0x024C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ThrowMinPitch;                                             // 0x0250(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ThrowMaxPitch;                                             // 0x0254(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              TriggerDelay;                                              // 0x0258(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ReleaseDelay;                                              // 0x025C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              DecalFadeDuration;                                         // 0x0260(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ArmingDuration;                                            // 0x0264(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<float>                                      GasDuration;                                               // 0x0268(0x0010) (Edit, BlueprintVisible, EditFixedSize, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<float>                                      TriggerRadius;                                             // 0x0278(0x0010) (Edit, BlueprintVisible, EditFixedSize, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<float>                                      ExplosionRadius;                                           // 0x0288(0x0010) (Edit, BlueprintVisible, EditFixedSize, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<float>                                      GasRadius;                                                 // 0x0298(0x0010) (Edit, BlueprintVisible, EditFixedSize, ZeroConstructor, NativeAccessSpecifierPublic)
	float                                              DecalTriggerRadiusScale;                                   // 0x02A8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_L66W[0x4];                                     // 0x02AC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<float>                                      AreaEffectScale;                                           // 0x02B0(0x0010) (Edit, BlueprintVisible, EditFixedSize, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<float>                                      ExplosionEffectScale;                                      // 0x02C0(0x0010) (Edit, BlueprintVisible, EditFixedSize, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<float>                                      GasEffectScale;                                            // 0x02D0(0x0010) (Edit, BlueprintVisible, EditFixedSize, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<float>                                      ExplosionDamage;                                           // 0x02E0(0x0010) (Edit, BlueprintVisible, EditFixedSize, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                               bHostileNpcTriggersTrap;                                   // 0x02F0(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bAllyAreaVisible;                                          // 0x02F1(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bAllyImmunityExplosion;                                    // 0x02F2(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bAllyImmunityGas;                                          // 0x02F3(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bClearGasBuffOnExit;                                       // 0x02F4(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bDrawDebugSpheres;                                         // 0x02F5(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_A2QL[0x2];                                     // 0x02F6(0x0002) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerTrapsConfig");
		return ptr;
	}



};

// Class Tiger.TigerDisciplineTraps
// 0x0038 (FullSize[0x0128] - InheritedSize[0x00F0])
class UTigerDisciplineTraps : public UTigerDisciplineAnimTriggered
{
public:
	class UTigerTrapsConfig*                           Config;                                                    // 0x00F0(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AActor*                                      AimTrapActor;                                              // 0x00F8(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class ATigerTrap*>                          CurrentTraps;                                              // 0x0100(0x0010) (ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<int>                                        FreeTrapIndices;                                           // 0x0110(0x0010) (ZeroConstructor, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_6760[0x8];                                     // 0x0120(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerDisciplineTraps");
		return ptr;
	}



	void TrapTriggered(class ATigerTrap* Trap);
	void Multicast_StopDiscipline();
};

// Class Tiger.TigerVanishConfig
// 0x0040 (FullSize[0x01A0] - InheritedSize[0x0160])
class UTigerVanishConfig : public UTigerActiveDisciplineConfig
{
public:
	TArray<class UClass*>                              VanishBuff;                                                // 0x0160(0x0010) (Edit, BlueprintVisible, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	struct FText                                       MovementSpeedText;                                         // 0x0170(0x0018) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FText                                       MovementSpeedSuffix;                                       // 0x0188(0x0018) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerVanishConfig");
		return ptr;
	}



};

// Class Tiger.TigerDisciplineVanish
// 0x0008 (FullSize[0x0080] - InheritedSize[0x0078])
class UTigerDisciplineVanish : public UTigerDisciplineBase
{
public:
	class UTigerVanishConfig*                          Config;                                                    // 0x0078(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerDisciplineVanish");
		return ptr;
	}



};

// Class Tiger.TigerClientRewardTrackDailyChallenges
// 0x0018 (FullSize[0x0060] - InheritedSize[0x0048])
class UTigerClientRewardTrackDailyChallenges : public UTigerClientRewardTrackChallenges
{
public:
	TArray<struct FTigerChallengeTypeID>               DailyChallengeIDs;                                         // 0x0048(0x0010) (ZeroConstructor, NativeAccessSpecifierPublic)
	struct FTigerItemId                                DailyChallengeExpReward;                                   // 0x0058(0x0008) (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerClientRewardTrackDailyChallenges");
		return ptr;
	}



};

// Class Tiger.TigerClientRewardTrackSeasonalChallenges
// 0x0030 (FullSize[0x0078] - InheritedSize[0x0048])
class UTigerClientRewardTrackSeasonalChallenges : public UTigerClientRewardTrackChallenges
{
public:
	struct FDateTime                                   UnlockDate;                                                // 0x0048(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDateTime                                   LockDate;                                                  // 0x0050(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FTigerChallengeInstanceID>           ChallengeInstanceIDs;                                      // 0x0058(0x0010) (ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	TArray<struct FTigerItemId>                        RewardIdForSpecificChallenge;                              // 0x0068(0x0010) (ZeroConstructor, Transient, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerClientRewardTrackSeasonalChallenges");
		return ptr;
	}



	bool IsUnlocked();
	bool HasExpired();
};

// Class Tiger.TigerClientChallengesCollection
// 0x0018 (FullSize[0x0040] - InheritedSize[0x0028])
class UTigerClientChallengesCollection : public UObject
{
public:
	TArray<class UTigerClientRewardTrackSeasonalChallenges*> WeeklyChallenges;                                          // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
	class UTigerClientRewardTrackDailyChallenges*      DailyChallenges;                                           // 0x0038(0x0008) (Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerClientChallengesCollection");
		return ptr;
	}



	class UTigerInventoryItemBase* GetRewardTiedToWeeklyChallenge(class UTigerChallenge* InChallenge);
	class UTigerInventoryItemBase* GetRewardTiedToDailyChallenge(class UTigerChallenge* InChallenge);
	class UTigerInventoryItemBase* GetRewardTiedToChallenge(class UTigerChallenge* InChallenge);
};

// Class Tiger.TigerChallengeDownPlayer
// 0x0020 (FullSize[0x00D0] - InheritedSize[0x00B0])
class UTigerChallengeDownPlayer : public UTigerChallenge
{
public:
	struct FTigerChallengeRequirementWeaponType        RequiredWeaponConstraint;                                  // 0x00B0(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_GAQ1[0x8];                                     // 0x00C8(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerChallengeDownPlayer");
		return ptr;
	}



	void OnDownedPlayerEvent(Tiger_ETigerPlayerEvent InEvent, class ATigerCharacter* InEventTiedCharacter);
	void HandleOnRestartPlayer(class AController* InNewPlayer);
};

// Class Tiger.TigerChallengeDrainNpc
// 0x0008 (FullSize[0x00B8] - InheritedSize[0x00B0])
class UTigerChallengeDrainNpc : public UTigerChallenge
{
public:
	bool                                               bSpecificNPCType;                                          // 0x00B0(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	Tiger_ETigerNPCType                                TargetNPCType;                                             // 0x00B1(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	Tiger_ETigerBloodPotency                           MinimumPotency;                                            // 0x00B2(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_7RGS[0x5];                                     // 0x00B3(0x0005) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerChallengeDrainNpc");
		return ptr;
	}



	bool IsBloodPotencyRelevant();
	void HandleOnRestartPlayer(class AController* NewPlayer);
	void HandleOnFeedingDoneEvent(bool bTargetIsDrained, class ATigerCharacter* InTargetFedOn);
};

// Class Tiger.TigerChallengeGainLevels
// 0x0008 (FullSize[0x00B8] - InheritedSize[0x00B0])
class UTigerChallengeGainLevels : public UTigerChallenge
{
public:
	unsigned char                                      UnknownData_RY0I[0x8];                                     // 0x00B0(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerChallengeGainLevels");
		return ptr;
	}



	void OnTigerPlayerLevelChanged(int InCurrentLevel, int InOldLevel);
	void HandleOnRestartPlayer(class AController* InNewPlayer);
};

// Class Tiger.TigerChallengeHitBullets
// 0x0028 (FullSize[0x00D8] - InheritedSize[0x00B0])
class UTigerChallengeHitBullets : public UTigerChallenge
{
public:
	struct FTigerChallengeRequirementWeaponType        RequiredWeaponConstraint;                                  // 0x00B0(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_BG3P[0x10];                                    // 0x00C8(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerChallengeHitBullets");
		return ptr;
	}



};

// Class Tiger.TigerChallengeKillEntity
// 0x0008 (FullSize[0x00B8] - InheritedSize[0x00B0])
class UTigerChallengeKillEntity : public UTigerChallenge
{
public:
	unsigned char                                      UnknownData_715S[0x8];                                     // 0x00B0(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerChallengeKillEntity");
		return ptr;
	}



	void HandleOnNpcDeathEvent(class ATigerNPC* NPC, class AController* Instigator);
};

// Class Tiger.TigerChallengeKillPlayers
// 0x0030 (FullSize[0x00E0] - InheritedSize[0x00B0])
class UTigerChallengeKillPlayers : public UTigerChallenge
{
public:
	struct FTigerChallengeRequirementWeaponType        RequiredWeaponConstraint;                                  // 0x00B0(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	bool                                               bInOneGame;                                                // 0x00C8(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_5FE6[0x17];                                    // 0x00C9(0x0017) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerChallengeKillPlayers");
		return ptr;
	}



};

// Class Tiger.TigerChallengePlayGames
// 0x0028 (FullSize[0x00D8] - InheritedSize[0x00B0])
class UTigerChallengePlayGames : public UTigerChallenge
{
public:
	struct FTigerChallengeRequirementClan              RequiredClanCondition;                                     // 0x00B0(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FTigerChallengeRequirementGameMode          RequiredGameModeCondition;                                 // 0x00C0(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_040R[0x8];                                     // 0x00D0(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerChallengePlayGames");
		return ptr;
	}



	void HandlePlayerPlacement(class ATigerPlayerState* InPlayerState);
};

// Class Tiger.TigerChallengeQuestItemPickup
// 0x0030 (FullSize[0x00E0] - InheritedSize[0x00B0])
class UTigerChallengeQuestItemPickup : public UTigerChallenge
{
public:
	unsigned char                                      QuestItem[0x28];                                           // 0x00B0(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	unsigned char                                      UnknownData_TH5Y[0x8];                                     // 0x00D8(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerChallengeQuestItemPickup");
		return ptr;
	}



	void HandleQuestItemCollected();
};

// Class Tiger.TigerChallengeReachLevel
// 0x0008 (FullSize[0x00B8] - InheritedSize[0x00B0])
class UTigerChallengeReachLevel : public UTigerChallenge
{
public:
	int                                                LevelToReach;                                              // 0x00B0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_WSZR[0x4];                                     // 0x00B4(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerChallengeReachLevel");
		return ptr;
	}



	void OnTigerPlayerLevelChanged(int InCurrentLevel, int InOldLevel);
	void HandleOnRestartPlayer(class AController* InNewPlayer);
};

// Class Tiger.TigerChallengeRevive
// 0x0008 (FullSize[0x00B8] - InheritedSize[0x00B0])
class UTigerChallengeRevive : public UTigerChallenge
{
public:
	unsigned char                                      UnknownData_B69U[0x8];                                     // 0x00B0(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerChallengeRevive");
		return ptr;
	}



	void OnRevivedPlayerEvent(Tiger_ETigerPlayerEvent InEvent, class ATigerCharacter* InEventTiedCharacter);
	void HandleOnRestartPlayer(class AController* InNewPlayer);
};

// Class Tiger.TigerChallengeSurviveTime
// 0x0008 (FullSize[0x00B8] - InheritedSize[0x00B0])
class UTigerChallengeSurviveTime : public UTigerChallenge
{
public:
	unsigned char                                      UnknownData_Y9O0[0x8];                                     // 0x00B0(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerChallengeSurviveTime");
		return ptr;
	}



	void HandlePlayerPlacement(class ATigerPlayerState* InPlayerState);
};

// Class Tiger.TigerChallengeTopPlayer
// 0x0008 (FullSize[0x00B8] - InheritedSize[0x00B0])
class UTigerChallengeTopPlayer : public UTigerChallenge
{
public:
	int                                                TopPlacementRequirement;                                   // 0x00B0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_LIR2[0x4];                                     // 0x00B4(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerChallengeTopPlayer");
		return ptr;
	}



	void HandlePlayerPlacement(class ATigerPlayerState* InPlayerState);
};

// Class Tiger.TigerChallengeTravelDistance
// 0x0008 (FullSize[0x00B8] - InheritedSize[0x00B0])
class UTigerChallengeTravelDistance : public UTigerChallenge
{
public:
	unsigned char                                      UnknownData_GBJE[0x8];                                     // 0x00B0(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerChallengeTravelDistance");
		return ptr;
	}



	void OnHandlePlayerPlacement(class ATigerPlayerState* InPlayerState);
};

// Class Tiger.TigerChallengeTypeDatabase
// 0x0020 (FullSize[0x0048] - InheritedSize[0x0028])
class UTigerChallengeTypeDatabase : public UObject
{
public:
	TArray<class UTigerChallengeCollection*>           SeasonalChallengeCollections;                              // 0x0028(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TArray<class UTigerChallengeCollection*>           DailyChallengeCollections;                                 // 0x0038(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerChallengeTypeDatabase");
		return ptr;
	}



	TArray<class UTigerChallengeCollection*> GetAllChallengeCollections();
};

// Class Tiger.TigerChallengeUseDiscipline
// 0x0018 (FullSize[0x00C8] - InheritedSize[0x00B0])
class UTigerChallengeUseDiscipline : public UTigerChallenge
{
public:
	struct FTigerChallengeRequirementDisciplineSlot    DisciplineSlotRequirement;                                 // 0x00B0(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_0RZQ[0x8];                                     // 0x00C0(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerChallengeUseDiscipline");
		return ptr;
	}



	void OnDisciplineActivated(Tiger_ETigerDisciplinesEnum InDisciplineActivated);
	void HandleOnRestartPlayer(class AController* InNewPlayer);
};

// Class Tiger.TigerChallengeUtilityBFL
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class UTigerChallengeUtilityBFL : public UBlueprintFunctionLibrary
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerChallengeUtilityBFL");
		return ptr;
	}



	bool STATIC_HasRequirement_WeaponType(const struct FTigerChallengeRequirementWeaponType& InRequirement);
	bool STATIC_HasRequirement_GameMode(const struct FTigerChallengeRequirementGameMode& InRequirement);
	bool STATIC_HasRequirement_DisciplineSlot(const struct FTigerChallengeRequirementDisciplineSlot& InRequirement);
	bool STATIC_HasRequirement_Clan(const struct FTigerChallengeRequirementClan& InRequirement);
};

// Class Tiger.TigerChallengeVisitLocation
// 0x0030 (FullSize[0x00E0] - InheritedSize[0x00B0])
class UTigerChallengeVisitLocation : public UTigerChallenge
{
public:
	unsigned char                                      TriggerVolume[0x28];                                       // 0x00B0(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	unsigned char                                      UnknownData_RSZ4[0x8];                                     // 0x00D8(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerChallengeVisitLocation");
		return ptr;
	}



	void HandleLocationVisited();
};

// Class Tiger.TigerCharacterCardBase
// 0x0008 (FullSize[0x0288] - InheritedSize[0x0280])
class UTigerCharacterCardBase : public UTigerWidget
{
public:
	TWeakObjectPtr<class ATigerPlayerState>            RepresentedPlayer;                                         // 0x0280(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerCharacterCardBase");
		return ptr;
	}



	void OnInit(class ATigerPlayerState* InRepresentedPlayer);
	void Init(class ATigerPlayerState* InRepresentedPlayer);
	class ATigerPlayerState* GetRepresentedPlayer();
	void BuildCharacterCard();
};

// Class Tiger.TigerCharacterCustomizablePreviewThumbnailUI
// 0x0070 (FullSize[0x02F0] - InheritedSize[0x0280])
class UTigerCharacterCustomizablePreviewThumbnailUI : public UTigerWidget
{
public:
	class UClass*                                      ThumbnailActorType;                                        // 0x0280(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bIsRealtime;                                               // 0x0288(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_GU4U[0x7];                                     // 0x0289(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UMaterialInterface*                          PostRenderMaterial;                                        // 0x0290(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_1Y95[0x40];                                    // 0x0298(0x0040) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class ATigerThumbnailActor*                        ThumbnailActor;                                            // 0x02D8(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              FOV;                                                       // 0x02E0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_W5QP[0xC];                                     // 0x02E4(0x000C) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerCharacterCustomizablePreviewThumbnailUI");
		return ptr;
	}



	void TickViewport(float InDeltaTime);
};

// Class Tiger.TigerInventoryItemBase
// 0x00E8 (FullSize[0x0110] - InheritedSize[0x0028])
class UTigerInventoryItemBase : public UObject
{
public:
	unsigned char                                      UnknownData_QUYO[0x8];                                     // 0x0028(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FText                                       UiName;                                                    // 0x0030(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FText                                       UIDescription;                                             // 0x0048(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FText                                       TemporaryVs2CategoryName;                                  // 0x0060(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	unsigned char                                      UITexture[0x28];                                           // 0x0078(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	unsigned char                                      UiBackgroundTexture[0x28];                                 // 0x00A0(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	struct FLinearColor                                TintColor;                                                 // 0x00C8(0x0010) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bForceToFrontWhenSorted;                                   // 0x00D8(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	Tiger_ETigerItemRarity                             Rarity;                                                    // 0x00D9(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bIsAvailableForEveryone;                                   // 0x00DA(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_MMWH[0x5];                                     // 0x00DB(0x0005) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FTigerInventoryItemOwnerType>        PossibleOwners;                                            // 0x00E0(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	struct FString                                     CameraTag;                                                 // 0x00F0(0x0010) (Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                PersistentID;                                              // 0x0100(0x0004) (Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_7S1N[0x4];                                     // 0x0104(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	uint64_t                                           TelemetryID;                                               // 0x0108(0x0008) (Edit, ZeroConstructor, EditConst, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerInventoryItemBase");
		return ptr;
	}



	void SetUIMaterialParameters(class UMaterialInstanceDynamic* InMaterial);
	class UMaterialInterface* GetUiMaterialOverride();
	Tiger_ETigerPersistentStoreCategory GetStoreCategory();
	bool GetPrimaryOwner(Tiger_ETigerClan* OutClan, Tiger_ETigerPowerKitType* OutArchetype, Tiger_ETigerGender* OutBodyType);
	TArray<Tiger_ETigerClan> GetPossibleOwningClans();
	TArray<Tiger_ETigerGender> GetPossibleOwningBodyTypes();
	TArray<Tiger_ETigerPowerKitType> GetPossibleOwningArchetypes();
	int GetPersistentId();
	bool CanBeOwnedByBodyWithArchetypeRestriction(Tiger_ETigerGender InBodyType, Tiger_ETigerPowerKitType InPowerKit);
	bool CanBeOwnedByBodyType(Tiger_ETigerGender BodyType);
	bool CanBeOwnedByArchetype(Tiger_ETigerPowerKitType InArchetypeType);
	bool CanBeOwnedByAnyArchetypeOfClan(class UTigerPlayerClanData* InClan, Tiger_ETigerGender BodyType);
};

// Class Tiger.TigerCharacterPartOfHeadCustomization
// 0x0000 (FullSize[0x0110] - InheritedSize[0x0110])
class UTigerCharacterPartOfHeadCustomization : public UTigerInventoryItemBase
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerCharacterPartOfHeadCustomization");
		return ptr;
	}



};

// Class Tiger.TigerCharacterEyeColorCustomization
// 0x0038 (FullSize[0x0148] - InheritedSize[0x0110])
class UTigerCharacterEyeColorCustomization : public UTigerCharacterPartOfHeadCustomization
{
public:
	struct FTigerCharacterCustomizationParameters      AdditionalParameters;                                      // 0x0110(0x0038) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerCharacterEyeColorCustomization");
		return ptr;
	}



};

// Class Tiger.TigerCharacterEyebrowCustomization
// 0x0038 (FullSize[0x0148] - InheritedSize[0x0110])
class UTigerCharacterEyebrowCustomization : public UTigerCharacterPartOfHeadCustomization
{
public:
	struct FTigerCharacterCustomizationParameters      AdditionalParameters;                                      // 0x0110(0x0038) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerCharacterEyebrowCustomization");
		return ptr;
	}



};

// Class Tiger.TigerItemAsset
// 0x00F8 (FullSize[0x0128] - InheritedSize[0x0030])
class UTigerItemAsset : public UDataAsset
{
public:
	unsigned char                                      UnknownData_BKPY[0x8];                                     // 0x0030(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UStaticMesh*                                 StaticMesh;                                                // 0x0038(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	Tiger_ETigerInventoryItemType                      ItemType;                                                  // 0x0040(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	Tiger_ETigerItemRarity                             ItemRarity;                                                // 0x0041(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_K8YJ[0x6];                                     // 0x0042(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FText                                       Name;                                                      // 0x0048(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FText                                       ShortName;                                                 // 0x0060(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	int                                                MaxStackSize;                                              // 0x0078(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                DropFromStackCount;                                        // 0x007C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FText                                       Description;                                               // 0x0080(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class UTigerItemAsset*                             LowerRarity;                                               // 0x0098(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                SortWithinCategoryAscending;                               // 0x00A0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_QGBV[0x4];                                     // 0x00A4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FText                                       TooltipItemType;                                           // 0x00A8(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class UTexture2D*                                  UIIcon;                                                    // 0x00C0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                                  HUDIcon;                                                   // 0x00C8(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      WeaponClass;                                               // 0x00D0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      ItemBuff;                                                  // 0x00D8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bShouldAutoPickUpItem;                                     // 0x00E0(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bTriggerBuffOnItemPickup;                                  // 0x00E1(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bRemoveBuffOnItemDropped;                                  // 0x00E2(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_NW3E[0x5];                                     // 0x00E3(0x0005) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UAkAudioEvent*                               PingWantVoiceAudioEvent;                                   // 0x00E8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               PingHaveVoiceAudioEvent;                                   // 0x00F0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               PingHereVoiceAudioEvent;                                   // 0x00F8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               PickUpAudioEvent;                                          // 0x0100(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint64_t                                           PersistentTelemetryID;                                     // 0x0108(0x0008) (Edit, ZeroConstructor, EditConst, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTigerGrimoireEntry*                         EntryToUnlock;                                             // 0x0110(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FString                                     EntryId;                                                   // 0x0118(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerItemAsset");
		return ptr;
	}



	Tiger_ETigerWeaponType GetWeaponType();
	class UTigerWeapon* GetWeaponClassDefaultObject();
	class UTexture2D* GetHUDIcon();
	struct FText GetDescription();
	bool CanBeDropped();
};

// Class Tiger.TigerBodyArmorAsset
// 0x00B8 (FullSize[0x01E0] - InheritedSize[0x0128])
class UTigerBodyArmorAsset : public UTigerItemAsset
{
public:
	int                                                Durability;                                                // 0x0128(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTigerCharacterStatModification             StatChanges;                                               // 0x012C(0x00B4) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerBodyArmorAsset");
		return ptr;
	}



};

// Class Tiger.TigerRelicAsset
// 0x0000 (FullSize[0x0128] - InheritedSize[0x0128])
class UTigerRelicAsset : public UTigerItemAsset
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerRelicAsset");
		return ptr;
	}



};

// Class Tiger.TigerRangedModItemAsset
// 0x0018 (FullSize[0x0140] - InheritedSize[0x0128])
class UTigerRangedModItemAsset : public UTigerItemAsset
{
public:
	TArray<class UClass*>                              ModEffects;                                                // 0x0128(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, NativeAccessSpecifierPublic)
	int                                                ModEquipPriority;                                          // 0x0138(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	Tiger_ERangedWeaponModType                         ModType;                                                   // 0x013C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_53BP[0x3];                                     // 0x013D(0x0003) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerRangedModItemAsset");
		return ptr;
	}



};

// Class Tiger.TigerHuntingKnifeItemAsset
// 0x0000 (FullSize[0x0128] - InheritedSize[0x0128])
class UTigerHuntingKnifeItemAsset : public UTigerItemAsset
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerHuntingKnifeItemAsset");
		return ptr;
	}



};

// Class Tiger.TigerItemCluster
// 0x0138 (FullSize[0x0360] - InheritedSize[0x0228])
class ATigerItemCluster : public AActor
{
public:
	class UClass*                                      ItemActorClass;                                            // 0x0228(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FItemClusterArray                           Items;                                                     // 0x0230(0x0120) (Net, NativeAccessSpecifierPrivate)
	TArray<class ATigerItemWorldRepresentation*>       ItemActors;                                                // 0x0350(0x0010) (ZeroConstructor, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerItemCluster");
		return ptr;
	}



	void Multicast_UpdateItemCount(uint32_t InItemClusterUID, int InNewItemCount);
	void Multicast_SetFinalTransform(uint32_t InItemClusterUID, const struct FTransform& InFinalTransform);
};

// Class Tiger.TigerChallengeDealDamage
// 0x0030 (FullSize[0x00E0] - InheritedSize[0x00B0])
class UTigerChallengeDealDamage : public UTigerChallenge
{
public:
	bool                                               bNeedsToDamagePlayer;                                      // 0x00B0(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_W7IE[0x7];                                     // 0x00B1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FTigerChallengeRequirementWeaponType        RequiredWeaponConstraint;                                  // 0x00B8(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_N5TN[0x10];                                    // 0x00D0(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerChallengeDealDamage");
		return ptr;
	}



};

// Class Tiger.TigerCharacterFacePaintCustomization
// 0x0038 (FullSize[0x0148] - InheritedSize[0x0110])
class UTigerCharacterFacePaintCustomization : public UTigerCharacterPartOfHeadCustomization
{
public:
	struct FTigerCharacterCustomizationParameters      AdditionalParameters;                                      // 0x0110(0x0038) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerCharacterFacePaintCustomization");
		return ptr;
	}



};

// Class Tiger.TigerCharacterHeadgearCustomization
// 0x0070 (FullSize[0x0180] - InheritedSize[0x0110])
class UTigerCharacterHeadgearCustomization : public UTigerCharacterPartOfHeadCustomization
{
public:
	struct FTigerCharacterCustomizationParameters      AdditionalParameters;                                      // 0x0110(0x0038) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	unsigned char                                      Mesh[0x28];                                                // 0x0148(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	class UTigerAnimationFilter*                       AnimationFilter;                                           // 0x0170(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bHideBeard;                                                // 0x0178(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_RFYC[0x7];                                     // 0x0179(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerCharacterHeadgearCustomization");
		return ptr;
	}



	void GatherPiercingFilter();
};

// Class Tiger.TigerCharacterEyewearCustomization
// 0x0060 (FullSize[0x0170] - InheritedSize[0x0110])
class UTigerCharacterEyewearCustomization : public UTigerCharacterPartOfHeadCustomization
{
public:
	struct FTigerCharacterCustomizationParameters      AdditionalParameters;                                      // 0x0110(0x0038) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	unsigned char                                      Mesh[0x28];                                                // 0x0148(0x0028) UNKNOWN PROPERTY: SoftObjectProperty


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerCharacterEyewearCustomization");
		return ptr;
	}



	void GatherPiercingFilter();
};

// Class Tiger.TigerCharacterHairStyleCustomization
// 0x00F0 (FullSize[0x0200] - InheritedSize[0x0110])
class UTigerCharacterHairStyleCustomization : public UTigerCharacterPartOfHeadCustomization
{
public:
	struct FTigerCharacterCustomizationParameters      AdditionalParameters;                                      // 0x0110(0x0038) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FTigerLodSplitMesh                          SplitMesh;                                                 // 0x0148(0x0078) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class UClass*                                      Animation;                                                 // 0x01C0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       SocketAttachments[0x2];                                    // 0x01C8(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      Mesh[0x28];                                                // 0x01D8(0x0028) UNKNOWN PROPERTY: SoftObjectProperty


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerCharacterHairStyleCustomization");
		return ptr;
	}



};

// Class Tiger.TigerCharacterHairColorCustomization
// 0x0038 (FullSize[0x0148] - InheritedSize[0x0110])
class UTigerCharacterHairColorCustomization : public UTigerCharacterPartOfHeadCustomization
{
public:
	struct FTigerCharacterCustomizationParameters      AdditionalParameters;                                      // 0x0110(0x0038) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerCharacterHairColorCustomization");
		return ptr;
	}



};

// Class Tiger.TigerCharacterBeardColorCustomization
// 0x0038 (FullSize[0x0148] - InheritedSize[0x0110])
class UTigerCharacterBeardColorCustomization : public UTigerCharacterPartOfHeadCustomization
{
public:
	struct FTigerCharacterCustomizationParameters      AdditionalParameters;                                      // 0x0110(0x0038) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerCharacterBeardColorCustomization");
		return ptr;
	}



};

// Class Tiger.TigerHighTierLootGroup
// 0x0010 (FullSize[0x0038] - InheritedSize[0x0028])
class UTigerHighTierLootGroup : public UObject
{
public:
	struct FLinearColor                                TextColor;                                                 // 0x0028(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerHighTierLootGroup");
		return ptr;
	}



	struct FLinearColor GetTextColor();
};

// Class Tiger.TigerHighTierLootComponent
// 0x0028 (FullSize[0x00D8] - InheritedSize[0x00B0])
class UTigerHighTierLootComponent : public UActorComponent
{
public:
	unsigned char                                      HighTierLootGroup[0x28];                                   // 0x00B0(0x0028) UNKNOWN PROPERTY: SoftClassProperty


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerHighTierLootComponent");
		return ptr;
	}



};

// Class Tiger.TigerHitVerificationSettings
// 0x0020 (FullSize[0x0058] - InheritedSize[0x0038])
class UTigerHitVerificationSettings : public UDeveloperSettings
{
public:
	bool                                               bEnableVerification;                                       // 0x0038(0x0001) (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_TBUK[0x3];                                     // 0x0039(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              MaxEndPointDistance;                                       // 0x003C(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaxStartingPointDistance;                                  // 0x0040(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SkipSimulatePathDistanceSquared;                           // 0x0044(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaxAngleDeviationFromPredictedPath;                        // 0x0048(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                MinPathCountForLOSSubdivideCheck;                          // 0x004C(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                MinPathCountForComplexLOSCheck;                            // 0x0050(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                MaxComplexLOSChecks;                                       // 0x0054(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerHitVerificationSettings");
		return ptr;
	}



};

// Class Tiger.TigerHolyIncense
// 0x0090 (FullSize[0x02B8] - InheritedSize[0x0228])
class ATigerHolyIncense : public AActor
{
public:
	struct FScriptMulticastDelegate                    OnAssaultFinished;                                         // 0x0228(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UTigerScriptedTexture*                       Texture;                                                   // 0x0238(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTigerGasOverlay*                            SlateGasOverlay;                                           // 0x0240(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UProceduralMeshComponent*                    ProceduralMesh;                                            // 0x0248(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTigerHolyIncenseWaveComponent*              WaveComponent;                                             // 0x0250(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USplineComponent*                            LevelBorder;                                               // 0x0258(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              WallMinHeight;                                             // 0x0260(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              WallMaxHeight;                                             // 0x0264(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_ICXP[0x8];                                     // 0x0268(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UProceduralMeshComponent*                    PreviewMesh;                                               // 0x0270(0x0008) (Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UMaterialInterface*                          GasMaterial;                                               // 0x0278(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UMaterialInstanceDynamic*                    MaterialInstance;                                          // 0x0280(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FVector2D>                           InitialVertices;                                           // 0x0288(0x0010) (ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	class ATigerHaven*                                 FinalHaven;                                                // 0x0298(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              NumVerticesPerKilometer;                                   // 0x02A0(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	Tiger_ETigerGameType                               ValidForGameType;                                          // 0x02A4(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_MAMH[0x3];                                     // 0x02A5(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              InitialArea;                                               // 0x02A8(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              InitialCircumference;                                      // 0x02AC(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_OHVT[0x8];                                     // 0x02B0(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerHolyIncense");
		return ptr;
	}



	bool UpdateAndRenderSlateGasOverlay(class UTigerGasOverlay* InGasOverlay);
	void SetGasMaterial(class UMaterialInterface* InMaterial);
	bool RenderToTexture();
	void PreviewWallMesh();
	bool IsLocationInsideHolyIncense(const struct FVector2D& InLocation, bool bInIncludeScheduledWave);
	class UTigerGasOverlay* InitializeScriptedTexture(const struct FSlateBrush& InWaveBrush, const struct FSlateBrush& InTargetBrush, const struct FSlateBrush& InWavePolyBrush, const struct FSlateBrush& InTargetPolyBrush);
	class UTextureRenderTarget2D* InitializeRenderTexture();
	float GetTimeSecondsUntilCurrentWaveBegins();
	float GetSecondsUntilCurrentWaveEnds();
	float GetDistanceToBorder(const struct FVector2D& Location, bool bIncludeScheduledWave, struct FVector2D* OutClosestLocation, struct FVector2D* OutClosestNormal);
	float GetCurrentDamageInterval();
	float GetCurrentDamageAmount();
	bool GetClosestLocationOnNextWaveWall(const struct FVector2D& Location, struct FVector2D* OutClosestLocation, bool* bIsOutsidePlayableArea);
};

// Class Tiger.TigerHolyIncenseWaveComponent
// 0x0148 (FullSize[0x01F8] - InheritedSize[0x00B0])
class UTigerHolyIncenseWaveComponent : public UActorComponent
{
public:
	struct FScriptMulticastDelegate                    OnWaveStartMovement;                                       // 0x00B0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnWaveStopped;                                             // 0x00C0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnWaveRevealed;                                            // 0x00D0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	int                                                FallbackSeed;                                              // 0x00E0(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                FallbackHavenSeed;                                         // 0x00E4(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bTestFallbackSeed;                                         // 0x00E8(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_DV80[0x7];                                     // 0x00E9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class UDataTable*>                          WaveDataTables;                                            // 0x00F0(0x0010) (Edit, EditFixedSize, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	class UCurveFloat*                                 WaveProgressSmoothingCurve;                                // 0x0100(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int                                                NumAvoidancePoints;                                        // 0x0108(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               bRetraceInnerAndOuterMapPaths;                             // 0x010C(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_BCD4[0x3];                                     // 0x010D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              MapGradientThickness;                                      // 0x0110(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              TickCollisionAndMapTextureInterval;                        // 0x0114(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              CircumferenceKmForMinimumCollisionVertices;                // 0x0118(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              CircumferenceKmForMaximumCollisionVertices;                // 0x011C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int                                                MinimumCollisionVertices;                                  // 0x0120(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int                                                MaximumCollisionVertices;                                  // 0x0124(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               bUseInteriorTriangulation;                                 // 0x0128(0x0001) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               bUseFallbackTriangulation;                                 // 0x0129(0x0001) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_O011[0x6];                                     // 0x012A(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UMaterialParameterCollection*                RedGasParameterCollection;                                 // 0x0130(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int                                                MinimumSimulatedVertices;                                  // 0x0138(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int                                                MaximumSimulatedVertices;                                  // 0x013C(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               bRedistributeVertices;                                     // 0x0140(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               bOutputWaveGeneration;                                     // 0x0141(0x0001) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_3B5Y[0x2];                                     // 0x0142(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                RepeatWaveGeneration;                                      // 0x0144(0x0004) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FTigerWaveData>                      Waves;                                                     // 0x0148(0x0010) (ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	struct FTigerHolyIncenseSettings                   Settings;                                                  // 0x0158(0x0001) (Net, Transient, RepNotify, NoDestructor, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_98SH[0x7];                                     // 0x0159(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FTigerRevealedWave>                  RevealedWaves;                                             // 0x0160(0x0010) (Net, ZeroConstructor, Transient, RepNotify, NativeAccessSpecifierPrivate)
	class UMaterialInstanceDynamic*                    MaterialInstance;                                          // 0x0170(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class ATigerHolyIncense*                           HolyIncense;                                               // 0x0178(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_0GSR[0x4];                                     // 0x0180(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              AssaultStartTime;                                          // 0x0184(0x0004) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_YTF8[0x48];                                    // 0x0188(0x0048) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              DefaultOverlapToleranceCm;                                 // 0x01D0(0x0004) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              OverlapToleranceFailureIncrementCm;                        // 0x01D4(0x0004) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int                                                OverlapToleranceFailuresBeforeIncrement;                   // 0x01D8(0x0004) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int                                                OverlapTestingPerformanceVertexCount;                      // 0x01DC(0x0004) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              OverlapInterpStepDistanceCm;                               // 0x01E0(0x0004) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              OverlapMaximumInterpSteps;                                 // 0x01E4(0x0004) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_1MVX[0x10];                                    // 0x01E8(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerHolyIncenseWaveComponent");
		return ptr;
	}



	void TigerOnWaveStopped__DelegateSignature();
	void TigerOnWaveStartMovement__DelegateSignature();
	void TigerOnWaveRevealed__DelegateSignature();
	void OnRep_Settings();
	void OnRep_RevealedWaves();
	void OnBalanceModeSet();
	void Multicast_SettingsChanged(const struct FTigerHolyIncenseSettings& NewSettings);
	void Multicast_SetElapsedAssaultTime(float InElapsedTime, float InTimeMultiplier);
	void Multicast_RevealWave(const struct FTigerRevealedWave& RevealedWave);
	void Multicast_BeginAssaults(float StartTime);
	void MatchStateChanged(Tiger_ETigerMatchState OldMatchState, Tiger_ETigerMatchState NewMatchState);
	float GetWaveProgress();
	int GetNumberOfWaves();
	int GetCurrentWaveIndex();
	float GetCurrentCircumference();
	float GetCurrentArea();
};

// Class Tiger.TigerHookingBuff
// 0x0000 (FullSize[0x0270] - InheritedSize[0x0270])
class UTigerHookingBuff : public UTigerBuff
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerHookingBuff");
		return ptr;
	}



};

// Class Tiger.TigerHookedBuff
// 0x0000 (FullSize[0x0270] - InheritedSize[0x0270])
class UTigerHookedBuff : public UTigerBuff
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerHookedBuff");
		return ptr;
	}



};

// Class Tiger.TigerJudgeSwingData
// 0x0050 (FullSize[0x0080] - InheritedSize[0x0030])
class UTigerJudgeSwingData : public UDataAsset
{
public:
	TMap<struct FName, struct FTigerJudgeSwingCollisionInfo> SwingCollisionInfos;                                       // 0x0030(0x0050) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerJudgeSwingData");
		return ptr;
	}



};

// Class Tiger.TigerJudgeBaseState
// 0x0038 (FullSize[0x0060] - InheritedSize[0x0028])
class UTigerJudgeBaseState : public UObject
{
public:
	class ATigerJudge*                                 JudgePawn;                                                 // 0x0028(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ATigerAiJudgeController*                     JudgeAiController;                                         // 0x0030(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTigerAiJudgeSmComponent*                    JudgeStateMachineComp;                                     // 0x0038(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              MovementSpeed;                                             // 0x0040(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              TurnSpeed;                                                 // 0x0044(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              StateEntryTime;                                            // 0x0048(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              JudgeDefaultRotationSpeed[0x4];                            // 0x004C(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_550E[0x4];                                     // 0x005C(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerJudgeBaseState");
		return ptr;
	}



	void OnTick(float DeltaTime);
	void OnStateCreationSetup();
	void OnExitState(class UClass* NewState);
	void OnEnterState(class UClass* OldState);
	float GetDefaultRotationSpeed(Tiger_ETigerJudgeRotationMode RotationMode);
};

// Class Tiger.TigerJudgeBaseAttackState
// 0x0060 (FullSize[0x00C0] - InheritedSize[0x0060])
class UTigerJudgeBaseAttackState : public UTigerJudgeBaseState
{
public:
	TArray<class ATigerCharacter*>                     HitCharacters;                                             // 0x0060(0x0010) (BlueprintVisible, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	float                                              Cooldown;                                                  // 0x0070(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              AttackFailSafeDuration;                                    // 0x0074(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              AttackMinRange;                                            // 0x0078(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              AttackMaxRange;                                            // 0x007C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bUseAttackRangeHorizontally;                               // 0x0080(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_WDE2[0x3];                                     // 0x0081(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              MaxHeightDiff;                                             // 0x0084(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UClass*                                      PreviousState;                                             // 0x0088(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTigerJudgeSwingData*                        SwingData;                                                 // 0x0090(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bJudgeSwordActiveStatus;                                   // 0x0098(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bIsCheckingAttackCollisionData;                            // 0x0099(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_3Z28[0x2];                                     // 0x009A(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FVector                                     SwordHitBox;                                               // 0x009C(0x000C) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCurveFloat*                                 SwordLengthCurve;                                          // 0x00A8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_7BYU[0x10];                                    // 0x00B0(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerJudgeBaseAttackState");
		return ptr;
	}



	void OnJudgeSwordActiveStatusChanged();
	void OnCharactersHitWithSword(class ATigerCharacter* CharacterHitBySword);
	bool IsOffCooldown();
};

// Class Tiger.TigerJudgeCombatState
// 0x0028 (FullSize[0x0088] - InheritedSize[0x0060])
class UTigerJudgeCombatState : public UTigerJudgeBaseState
{
public:
	TArray<class UClass*>                              AttackTypes;                                               // 0x0060(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	TArray<class UClass*>                              AvailableAttacks;                                          // 0x0070(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	float                                              TimeWithoutSeeingBloodhuntedPlayers;                       // 0x0080(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_SNVJ[0x4];                                     // 0x0084(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerJudgeCombatState");
		return ptr;
	}



	bool UpdateAvailableAttacks();
	void MoveToClosestBloodhuntedPlayer();
	bool IsAttackOffCooldown(class UClass* StateType);
	class ATigerPlayer* GetClosestBloodhuntedPlayer();
	TArray<class UClass*> GetApplicableAttacksForTarget(class ATigerPlayer* Player);
};

// Class Tiger.TigerJudgeDownedState
// 0x0000 (FullSize[0x0060] - InheritedSize[0x0060])
class UTigerJudgeDownedState : public UTigerJudgeBaseState
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerJudgeDownedState");
		return ptr;
	}



};

// Class Tiger.TigerJudgeFedOnState
// 0x0010 (FullSize[0x0070] - InheritedSize[0x0060])
class UTigerJudgeFedOnState : public UTigerJudgeBaseState
{
public:
	float                                              FeedingOffset;                                             // 0x0060(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FName                                       FeedingAnimationName;                                      // 0x0064(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_JN6L[0x4];                                     // 0x006C(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerJudgeFedOnState");
		return ptr;
	}



};

// Class Tiger.TigerJudgePatrollingState
// 0x00B0 (FullSize[0x0110] - InheritedSize[0x0060])
class UTigerJudgePatrollingState : public UTigerJudgeBaseState
{
public:
	struct FName                                       IndexKeyName;                                              // 0x0060(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FName                                       WaypointKeyName;                                           // 0x0068(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FName                                       DirectionKeyName;                                          // 0x0070(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_JITR[0x98];                                    // 0x0078(0x0098) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerJudgePatrollingState");
		return ptr;
	}



};

// Class Tiger.TigerJudgeShieldComponent
// 0x0030 (FullSize[0x0F10] - InheritedSize[0x0EE0])
class UTigerJudgeShieldComponent : public USkeletalMeshComponent
{
public:
	struct FVector                                     DeflectEffectOffset;                                       // 0x0EE0(0x000C) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_7ICH[0x4];                                     // 0x0EEC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UParticleSystem*                             DeflectEffect;                                             // 0x0EF0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAkAudioEvent*                               DeflectSound;                                              // 0x0EF8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              BlockingHalfAngle;                                         // 0x0F00(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_Y55P[0xC];                                     // 0x0F04(0x000C) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerJudgeShieldComponent");
		return ptr;
	}



	void TriggerDeflectEffect(class ATigerCharacter* Attacker);
	void Multicast_TriggerDeflectEffect(class ATigerCharacter* Attacker);
};

// Class Tiger.TigerJudgeSwordComponent
// 0x0010 (FullSize[0x04F0] - InheritedSize[0x04E0])
class UTigerJudgeSwordComponent : public UStaticMeshComponent
{
public:
	class UParticleSystem*                             CharacterHitEffect;                                        // 0x04E0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAkAudioEvent*                               CharacterHitSound;                                         // 0x04E8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerJudgeSwordComponent");
		return ptr;
	}



	void SpawnHitEffect(class ATigerCharacter* Character, const struct FVector& Offset);
	void Multicast_SpawnHitEffect(class ATigerCharacter* Character, const struct FVector& Offset);
};

// Class Tiger.TigerKindredCharmEffectActor
// 0x0008 (FullSize[0x0230] - InheritedSize[0x0228])
class ATigerKindredCharmEffectActor : public AActor
{
public:
	float                                              KindredCharmPercent;                                       // 0x0228(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_F3UG[0x4];                                     // 0x022C(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerKindredCharmEffectActor");
		return ptr;
	}



	void OnShouldDestroy(bool bInIsDedicatedServer);
	void OnPercentChanged(bool bInIsDedicatedServer);
	void Multicast_ShouldDestroy();
	void Multicast_SetKindredCharmPercent(float InPercent);
};

// Class Tiger.TigerKindredCharmWidget
// 0x0000 (FullSize[0x0280] - InheritedSize[0x0280])
class UTigerKindredCharmWidget : public UTigerWidget
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerKindredCharmWidget");
		return ptr;
	}



	void OnKindredCharmCountChanged(int InNewCount);
};

// Class Tiger.TigerLaceratingThrowProjectile
// 0x0038 (FullSize[0x0260] - InheritedSize[0x0228])
class ATigerLaceratingThrowProjectile : public AActor
{
public:
	class UClass*                                      ConfigType;                                                // 0x0228(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                                     TargetLocation;                                            // 0x0230(0x000C) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_9NIG[0x4];                                     // 0x023C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FTimerHandle                                ArrivalTimerHandle;                                        // 0x0240(0x0008) (NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bIsMoving;                                                 // 0x0248(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_DIXF[0x3];                                     // 0x0249(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                rank;                                                      // 0x024C(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_UASI[0xC];                                     // 0x0250(0x000C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               bTargetIsOnWall;                                           // 0x025C(0x0001) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_G3TV[0x3];                                     // 0x025D(0x0003) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerLaceratingThrowProjectile");
		return ptr;
	}



	void PlayHitWallSound();
	void OnRep_TargetLocation();
};

// Class Tiger.TigerLevelComponent
// 0x00A8 (FullSize[0x0158] - InheritedSize[0x00B0])
class UTigerLevelComponent : public UActorComponent
{
public:
	struct FScriptMulticastDelegate                    OnLevelChangedEvent;                                       // 0x00B0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      LevelCap;                                                  // 0x00C0(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      CurrentLevel;                                              // 0x00C1(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_AMOZ[0x2];                                     // 0x00C2(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                CurrentExperience;                                         // 0x00C4(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TMap<Tiger_ETigerPlayerEvent, class UClass*>       PlayerEventMappings;                                       // 0x00C8(0x0050) (Edit, DisableEditOnInstance, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	class UCurveFloat*                                 ExperienceCurve;                                           // 0x0118(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCurveFloat*                                 HealthMultiplierCurve;                                     // 0x0120(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCurveFloat*                                 DamageMultiplierCurve;                                     // 0x0128(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCurveFloat*                                 CooldownMultiplierCurve;                                   // 0x0130(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bShowAllLevelPopupNotifications;                           // 0x0138(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_V7XX[0x7];                                     // 0x0139(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnExperienceAdded;                                         // 0x0140(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	class ATigerPlayer*                                Player;                                                    // 0x0150(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerLevelComponent");
		return ptr;
	}



	void TigerOnLevelChanged__DelegateSignature(int InLevel, int InOldLevel);
	void TigerOnExperienceAdded__DelegateSignature(int Experience);
	void PlayLevelUpSound();
	void OnRep_CurrentLevel(unsigned char InOldCurrentLevel);
	void OnPlayerEvent(Tiger_ETigerPlayerEvent PlayerEvent, class ATigerCharacter* EventTiedCharacter);
	bool IsAtLevelCap();
	int GetTotalEarnedExperience();
	int GetRequiredExperienceForNextLevel();
	int GetRequiredExperienceForLevel(unsigned char InLevel);
	float GetLevelUpPercentage();
	unsigned char GetLevelCap();
	void Client_LevelGained(unsigned char InNewLevel, bool InShowLevelGainedPopup);
	void Client_ExperienceGained(class UClass* ExperienceEvent, int GainedExperience);
	void AddExperience(class UClass* InExperienceEvent, class ATigerCharacter* InEventTiedCharacter, int InOverrideExperienceGain);
};

// Class Tiger.TigerLevelScriptActor
// 0x0000 (FullSize[0x0230] - InheritedSize[0x0230])
class ATigerLevelScriptActor : public ALevelScriptActor
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerLevelScriptActor");
		return ptr;
	}



	class UTigerDistrictData* GetDistrictData();
};

// Class Tiger.TigerLevelUpPrompt
// 0x0000 (FullSize[0x02A8] - InheritedSize[0x02A8])
class UTigerLevelUpPrompt : public UTigerSimpleTextPrompt
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerLevelUpPrompt");
		return ptr;
	}



	void SetBloodTrack(bool bInFirst, class UTigerBloodTrackPassiveConfig* InBloodTrack);
};

// Class Tiger.TigerLicenseAgreementPopup
// 0x0000 (FullSize[0x0260] - InheritedSize[0x0260])
class UTigerLicenseAgreementPopup : public UUserWidget
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerLicenseAgreementPopup");
		return ptr;
	}



	struct FString GetLegalDocumentStringFromDisc(const struct FString& InLocale, Tiger_ETigerLegalDocumentType InDocumentType);
};

// Class Tiger.TigerLoadingScreenAsset
// 0x0050 (FullSize[0x0078] - InheritedSize[0x0028])
class UTigerLoadingScreenAsset : public UObject
{
public:
	unsigned char                                      StartAudioEvent[0x28];                                     // 0x0028(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	unsigned char                                      LoadingScreenWidget[0x28];                                 // 0x0050(0x0028) UNKNOWN PROPERTY: SoftClassProperty


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerLoadingScreenAsset");
		return ptr;
	}



	void PrepareAssets(TArray<struct FSoftObjectPath>* OutAssetsToLoad);
};

// Class Tiger.TigerLoadingScreenUI
// 0x0038 (FullSize[0x0298] - InheritedSize[0x0260])
class UTigerLoadingScreenUI : public UUserWidget
{
public:
	struct FScriptMulticastDelegate                    OnFadeInCompleteEvent;                                     // 0x0260(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnFadeOutCompleteEvent;                                    // 0x0270(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	float                                              FadeInTime;                                                // 0x0280(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_RVP2[0x4];                                     // 0x0284(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UTigerLoadingScreenAsset*                    LoadingScreenAsset;                                        // 0x0288(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                AkPlayingId;                                               // 0x0290(0x0004) (Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_NO1W[0x4];                                     // 0x0294(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerLoadingScreenUI");
		return ptr;
	}



	void StartFadeOut();
	void StartFadeIn();
	void RaiseFadeOutComplete();
	void RaiseFadeInComplete();
	void OnFadeOutComplete__DelegateSignature();
	void OnFadeInComplete__DelegateSignature();
	void FadeOut();
	void FadeIn();
	void ChangeStatusText(const struct FText& InText);
};

// Class Tiger.TigerLocalAIControllerBase
// 0x0148 (FullSize[0x0478] - InheritedSize[0x0330])
class ATigerLocalAIControllerBase : public AAIController
{
public:
	class UBehaviorTree*                               BehaviorTree;                                              // 0x0330(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTigerInteractionControllerComponent*        InteractionControllerComponent;                            // 0x0338(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              LowShieldThreshold;                                        // 0x0340(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_EAIW[0x4];                                     // 0x0344(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class ATigerPlayerController*                      LocalPlayerController;                                     // 0x0348(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              SightRange;                                                // 0x0350(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              LoseSightModifier;                                         // 0x0354(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              VisionAngleDegrees;                                        // 0x0358(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              AimOffsetAmount;                                           // 0x035C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              AimAccuracy;                                               // 0x0360(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              MinimumAcceptableDamageMultiplier;                         // 0x0364(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ATigerPlayerCameraManager*                   TigerPlayerCameraManager;                                  // 0x0368(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBehaviorTreeComponent*                      BehaviorComp;                                              // 0x0370(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAIPerceptionComponent*                      AIPerceptionComp;                                          // 0x0378(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBlackboardComponent*                        BlackboardComp;                                            // 0x0380(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMovementComponent*                          playerMovComp;                                             // 0x0388(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPathFollowingComponent*                     PathFollowingComp;                                         // 0x0390(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class APawn*                                       LocalPawn;                                                 // 0x0398(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ATigerPlayer*                                PlayerPawn;                                                // 0x03A0(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_FELW[0x28];                                    // 0x03A8(0x0028) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TMap<class AActor*, float>                         TemporaryIgnoredTargets;                                   // 0x03D0(0x0050) (Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_89BH[0x10];                                    // 0x0420(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class ATigerCharacter*                             FocusCharacter;                                            // 0x0430(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_H54O[0x24];                                    // 0x0438(0x0024) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              LowHealthThreshold;                                        // 0x045C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_9AWF[0x18];                                    // 0x0460(0x0018) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerLocalAIControllerBase");
		return ptr;
	}



	void SetTargetPosition(const struct FVector& InNewPosition, Tiger_ETigerAIPlayerTargetType TargetType);
	void SetLureTarget(class UObject* InNewLureTarget, Tiger_ETigerAIPlayerTargetType TargetType);
	void LocalUnPossess();
	void LocalPossess(class APawn* InPawn);
	class ATigerPlayerController* GetPlayerController();
};

// Class Tiger.TigerLocalAIController
// 0x00C0 (FullSize[0x0538] - InheritedSize[0x0478])
class ATigerLocalAIController : public ATigerLocalAIControllerBase
{
public:
	float                                              FleeMaxDistanceSquared;                                    // 0x0478(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              FacingConeHalfAngle;                                       // 0x047C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MinimumAcceptableHeadshotDamageMultiplier;                 // 0x0480(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              HeadshotChance;                                            // 0x0484(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UClass*>                              BuffsOnSelfToIgnoreTargetsList;                            // 0x0488(0x0010) (Edit, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<class UClass*>                              BuffsOnTargetsToIgnoreList;                                // 0x0498(0x0010) (Edit, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_QGZH[0x8];                                     // 0x04A8(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class ATigerPlayerState*                           TigerPlayerState;                                          // 0x04B0(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_695Y[0x80];                                    // 0x04B8(0x0080) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerLocalAIController");
		return ptr;
	}



	bool SetMainStateWandering();
	bool SetMainStateInBloodVein();
	bool SetBBMainState(Tiger_ETigerAIPlayerMainState InNewState);
};

// Class Tiger.TigerLocalPlayer
// 0x0020 (FullSize[0x0278] - InheritedSize[0x0258])
class UTigerLocalPlayer : public ULocalPlayer
{
public:
	unsigned char                                      UnknownData_IQZ5[0x20];                                    // 0x0258(0x0020) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerLocalPlayer");
		return ptr;
	}



};

// Class Tiger.TigerMasqueradeConsequenceSyncInstance
// 0x0030 (FullSize[0x0058] - InheritedSize[0x0028])
class UTigerMasqueradeConsequenceSyncInstance : public UObject
{
public:
	bool                                               bShouldBeActiveForAffectedPlayer;                          // 0x0028(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_T4AI[0x7];                                     // 0x0029(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class ATigerPlayerState*                           AffectedPlayerState;                                       // 0x0030(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ATigerPlayerController*                      LocalPlayerController;                                     // 0x0038(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_G4M3[0x18];                                    // 0x0040(0x0018) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerMasqueradeConsequenceSyncInstance");
		return ptr;
	}



	float GetExpectedTimeLeft();
};

// Class Tiger.TigerMasqueradeConsequenceBloodHuntedSyncInstance
// 0x0028 (FullSize[0x0080] - InheritedSize[0x0058])
class UTigerMasqueradeConsequenceBloodHuntedSyncInstance : public UTigerMasqueradeConsequenceSyncInstance
{
public:
	class UClass*                                      MapMarkerClass;                                            // 0x0058(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UClass*                                      CompassMarkerClass;                                        // 0x0060(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTexture2D*                                  CompassMarkerTexture;                                      // 0x0068(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FBloodHuntMarker                            Marker;                                                    // 0x0070(0x0010) (NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerMasqueradeConsequenceBloodHuntedSyncInstance");
		return ptr;
	}



};

// Class Tiger.TigerMasqueradeConsequence
// 0x0038 (FullSize[0x0060] - InheritedSize[0x0028])
class UTigerMasqueradeConsequence : public UObject
{
public:
	class UClass*                                      SyncInstanceClass;                                         // 0x0028(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<Tiger_ETigerAIPlayerAction>                 ActionsThatCanActivateConsequence;                         // 0x0030(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	class ATigerPlayer*                                PlayerOwner;                                               // 0x0040(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FName                                       ConsequenceName;                                           // 0x0048(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              Duration;                                                  // 0x0050(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bShouldRefresh;                                            // 0x0054(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_VDNE[0xB];                                     // 0x0055(0x000B) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerMasqueradeConsequence");
		return ptr;
	}



};

// Class Tiger.TigerMasqueradeConsequenceBloodHunted
// 0x0008 (FullSize[0x0068] - InheritedSize[0x0060])
class UTigerMasqueradeConsequenceBloodHunted : public UTigerMasqueradeConsequence
{
public:
	unsigned char                                      UnknownData_0EDH[0x8];                                     // 0x0060(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerMasqueradeConsequenceBloodHunted");
		return ptr;
	}



};

// Class Tiger.TigerMasqueradeConsequenceCompassMarkerSyncInstance
// 0x0018 (FullSize[0x0070] - InheritedSize[0x0058])
class UTigerMasqueradeConsequenceCompassMarkerSyncInstance : public UTigerMasqueradeConsequenceSyncInstance
{
public:
	class UClass*                                      CompassMarkerClass;                                        // 0x0058(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTexture2D*                                  CompassMarkerTexture;                                      // 0x0060(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTigerCompassMarkerWidget*                   CompassMarker;                                             // 0x0068(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerMasqueradeConsequenceCompassMarkerSyncInstance");
		return ptr;
	}



};

// Class Tiger.TigerMasqueradeConsequenceCompassMarker
// 0x0000 (FullSize[0x0060] - InheritedSize[0x0060])
class UTigerMasqueradeConsequenceCompassMarker : public UTigerMasqueradeConsequence
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerMasqueradeConsequenceCompassMarker");
		return ptr;
	}



};

// Class Tiger.TigerPlayerMasqueradeConsequenceHsRevealSyncInstance
// 0x0008 (FullSize[0x0060] - InheritedSize[0x0058])
class UTigerPlayerMasqueradeConsequenceHsRevealSyncInstance : public UTigerMasqueradeConsequenceSyncInstance
{
public:
	bool                                               bOnlyVisibleInHeightenedsSenses;                           // 0x0058(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bAffectedPlayerIsWithinLocalHsArea;                        // 0x0059(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_V028[0x6];                                     // 0x005A(0x0006) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerPlayerMasqueradeConsequenceHsRevealSyncInstance");
		return ptr;
	}



	void OnLeaveHsArea(class ATigerPlayer* InPlayer);
	void OnEnterHsArea(class ATigerPlayer* InPlayer);
};

// Class Tiger.TigerPlayerMasqueradeConsequenceHsReveal
// 0x0000 (FullSize[0x0060] - InheritedSize[0x0060])
class UTigerPlayerMasqueradeConsequenceHsReveal : public UTigerMasqueradeConsequence
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerPlayerMasqueradeConsequenceHsReveal");
		return ptr;
	}



};

// Class Tiger.TigerMasqueradeConsequenceMapAreaMarkerSyncInstance
// 0x0018 (FullSize[0x0070] - InheritedSize[0x0058])
class UTigerMasqueradeConsequenceMapAreaMarkerSyncInstance : public UTigerMasqueradeConsequenceSyncInstance
{
public:
	class UClass*                                      AreaMarkerClass;                                           // 0x0058(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              AreaRadius;                                                // 0x0060(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_DJEN[0x4];                                     // 0x0064(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UTigerMasqueradeMarkerProxy*                 MapMarkerProxy;                                            // 0x0068(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerMasqueradeConsequenceMapAreaMarkerSyncInstance");
		return ptr;
	}



};

// Class Tiger.TigerMasqueradeConsequenceMapAreaMarker
// 0x0010 (FullSize[0x0070] - InheritedSize[0x0060])
class UTigerMasqueradeConsequenceMapAreaMarker : public UTigerMasqueradeConsequence
{
public:
	unsigned char                                      UnknownData_X6KT[0x10];                                    // 0x0060(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerMasqueradeConsequenceMapAreaMarker");
		return ptr;
	}



};

// Class Tiger.TigerMasqueradeConsequenceMapMarkerSyncInstance
// 0x0010 (FullSize[0x0068] - InheritedSize[0x0058])
class UTigerMasqueradeConsequenceMapMarkerSyncInstance : public UTigerMasqueradeConsequenceSyncInstance
{
public:
	class UClass*                                      MapMarkerClass;                                            // 0x0058(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTigerMapMarkerProxy*                        MapMarkerProxy;                                            // 0x0060(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerMasqueradeConsequenceMapMarkerSyncInstance");
		return ptr;
	}



};

// Class Tiger.TigerMasqueradeConsequenceMapMarker
// 0x0000 (FullSize[0x0060] - InheritedSize[0x0060])
class UTigerMasqueradeConsequenceMapMarker : public UTigerMasqueradeConsequence
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerMasqueradeConsequenceMapMarker");
		return ptr;
	}



};

// Class Tiger.TigerMasqueradeConsequenceTrailSyncInstance
// 0x0008 (FullSize[0x0060] - InheritedSize[0x0058])
class UTigerMasqueradeConsequenceTrailSyncInstance : public UTigerMasqueradeConsequenceSyncInstance
{
public:
	bool                                               bOnlyVisibleInHeightenedsSenses;                           // 0x0058(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bAffectedPlayerIsWithinLocalHsArea;                        // 0x0059(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_W25V[0x6];                                     // 0x005A(0x0006) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerMasqueradeConsequenceTrailSyncInstance");
		return ptr;
	}



	void OnTrailDeactivated(class ATigerPlayer* InPlayer);
	void OnTrailActivated(class ATigerPlayer* InPlayer);
	void OnLeaveHsArea_Native(class ATigerPlayer* InPlayer);
	void OnLeaveHsArea(class ATigerPlayer* InPlayer);
	void OnEnterHsArea_Native(class ATigerPlayer* InPlayer);
	void OnEnterHsArea(class ATigerPlayer* InPlayer);
};

// Class Tiger.TigerMasqueradeConsequenceTrail
// 0x0000 (FullSize[0x0060] - InheritedSize[0x0060])
class UTigerMasqueradeConsequenceTrail : public UTigerMasqueradeConsequence
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerMasqueradeConsequenceTrail");
		return ptr;
	}



};

// Class Tiger.TigerCharacterMeshManager
// 0x0130 (FullSize[0x01E0] - InheritedSize[0x00B0])
class UTigerCharacterMeshManager : public UActorComponent
{
public:
	TArray<struct FTigerStaticMeshData>                StaticMeshes;                                              // 0x00B0(0x0010) (ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	TArray<struct FTigerPoseableMeshData>              PoseableMeshes;                                            // 0x00C0(0x0010) (ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	struct FTigerCharacterMeshData                     Mesh[0xB];                                                 // 0x00D0(0x0108) (NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	class UStaticPiercingPhysics*                      StaticPiercingPhysics;                                     // 0x01D8(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerCharacterMeshManager");
		return ptr;
	}



	void SetVisibilityOnMeshes(bool bInNewVisibility);
	void SetVisibilityOnMesh(Tiger_ETigerCharacterMeshPart InMeshType, bool bInNewVisibility);
	void SetVisibilityOnDynamicMesh(Tiger_ETigerCharacterDynamicMeshType InMeshType, bool bInNewVisibility);
	void SetVisibilityAllowanceOnMeshes(bool bInNewVisibilityIsAllowed);
	void SetVisibilityAllowanceOnMesh(Tiger_ETigerCharacterMeshPart InMeshType, bool bInNewVisibilityIsAllowed);
	void SetVisibilityAllowanceOnDynamicMesh(Tiger_ETigerCharacterDynamicMeshType InMeshType, bool bInNewVisibilityIsAllowed);
	void SetSkeletalMesh(Tiger_ETigerCharacterMeshPart Part, class USkeletalMesh* Mesh, bool bForceClothNextUpdateTeleport);
	void SetScalarParameterValueOnMeshes(const struct FName& InParameterName, float InParameterValue);
	void SetMaterial(Tiger_ETigerCharacterMeshPart Part, int MaterialIndex, class UMaterialInterface* Material);
	void RemoveMeshComponent(class UStaticMeshComponent* InMesh);
	void RegisterMeshComponent(Tiger_ETigerCharacterMeshPart Part, class USkeletalMeshComponent* MeshComponent);
	class USkeletalMeshComponent* GetSkeletalMeshComponent(Tiger_ETigerCharacterMeshPart Part);
	TArray<class UMeshComponent*> GetRegisteredMeshes();
	void AddPoseableMesh(class USkeletalMesh* InMesh, class UClass* InAnimClass, Tiger_ETigerCharacterDynamicMeshType InType, TArray<struct FTigerCharacterPoseableMeshBoneSetupData> InPoseableMeshSetupData);
	void AddPiercing(class UStaticMesh* InPiercingMesh, const struct FName& InFaceSlotName, const struct FName& InPiercingSlotName, const struct FVector& InLocalLocation, const struct FRotator& InLocalRotation);
	void AddMeshComponent(class UStaticMeshComponent* InMesh);
};

// Class Tiger.TigerPlayerMeshManager
// 0x00E0 (FullSize[0x02C0] - InheritedSize[0x01E0])
class UTigerPlayerMeshManager : public UTigerCharacterMeshManager
{
public:
	struct FTigerPlayerMeshMaterialData                MaterialData[0xB];                                         // 0x01E0(0x00B0) (NativeAccessSpecifierPrivate)
	TArray<struct FTigerPlayerMeshMaterialData>        StaticMeshMaterialData;                                    // 0x0290(0x0010) (ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<struct FTigerPlayerMeshMaterialData>        PoseableMeshMaterialData;                                  // 0x02A0(0x0010) (ZeroConstructor, NativeAccessSpecifierPrivate)
	class UMaterialInterface*                          CurrentOverrideMaterial;                                   // 0x02B0(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_H9NT[0x8];                                     // 0x02B8(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerPlayerMeshManager");
		return ptr;
	}



	void ResetMaterials();
	void OverrideMaterial(class UMaterialInterface* InMaterial, float InTimeOutSeconds);
};

// Class Tiger.TigerPlayerServerLoginProcess
// 0x0060 (FullSize[0x0088] - InheritedSize[0x0028])
class UTigerPlayerServerLoginProcess : public UObject
{
public:
	TMap<struct FString, class UTigerPlayerBeingLoggedInToServer*> playersBeingLoggedInToServerByUniqueLoginId;               // 0x0028(0x0050) (NativeAccessSpecifierPrivate)
	class UTigerGroupCoordinator*                      GroupCoordinator;                                          // 0x0078(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_60ZX[0x8];                                     // 0x0080(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerPlayerServerLoginProcess");
		return ptr;
	}



};

// Class Tiger.TigerPlayerStart
// 0x0008 (FullSize[0x0260] - InheritedSize[0x0258])
class ATigerPlayerStart : public APlayerStart
{
public:
	unsigned char                                      GameTypeSpawnFlags;                                        // 0x0258(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_RSQH[0x7];                                     // 0x0259(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerPlayerStart");
		return ptr;
	}



};

// Class Tiger.TigerMapMarkerProxy
// 0x0040 (FullSize[0x0068] - InheritedSize[0x0028])
class UTigerMapMarkerProxy : public UObject
{
public:
	struct FScriptMulticastDelegate                    OnUpdated;                                                 // 0x0028(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	int                                                MarkerId;                                                  // 0x0038(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_VK0L[0x1C];                                    // 0x003C(0x001C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UClass*                                      WidgetType;                                                // 0x0058(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_E0H8[0x8];                                     // 0x0060(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerMapMarkerProxy");
		return ptr;
	}



	class UTigerMapMarkerProxy* Show();
	class UTigerMapMarkerProxy* SetWidgetType(class UClass* InWidgetType);
	class UTigerMapMarkerProxy* SetRotation(float NewRotation);
	class UTigerMapMarkerProxy* SetLocation(const struct FVector& WorldLocation);
	class UTigerMapMarkerProxy* SetAlignment(const struct FVector2D& NewAlignment);
	bool IsVisible();
	class UTigerMapMarkerProxy* Hide();
	class UClass* GetWidgetType();
	float GetRotation();
	struct FVector GetLocation();
	struct FVector2D GetAlignment();
};

// Class Tiger.TigerPoiMarkerProxy
// 0x00A0 (FullSize[0x0108] - InheritedSize[0x0068])
class UTigerPoiMarkerProxy : public UTigerMapMarkerProxy
{
public:
	struct FPointOfInterest                            PointOfInterest;                                           // 0x0068(0x00A0) (BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerPoiMarkerProxy");
		return ptr;
	}



};

// Class Tiger.TigerMapMarkerWidget
// 0x0030 (FullSize[0x02B0] - InheritedSize[0x0280])
class UTigerMapMarkerWidget : public UTigerWidget
{
public:
	bool                                               bShouldUseCustomZOrder;                                    // 0x0280(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_16B8[0x3];                                     // 0x0281(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                CustomZOrder;                                              // 0x0284(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                MarkerId;                                                  // 0x0288(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bIsOnMinimap;                                              // 0x028C(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_FOA0[0x3];                                     // 0x028D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TWeakObjectPtr<class UTigerMapMarkerProxy>         MapMarkerProxy;                                            // 0x0290(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_VF6V[0x8];                                     // 0x0298(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               bStartHidden;                                              // 0x02A0(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_QD93[0x3];                                     // 0x02A1(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              CurrentOpacity;                                            // 0x02A4(0x0004) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              FadeSpeed;                                                 // 0x02A8(0x0004) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_NXCA[0x4];                                     // 0x02AC(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerMapMarkerWidget");
		return ptr;
	}



	void Update();
	struct FVector2D ToCanvasSpace(const struct FVector2D& ZeroToOneSpace);
	void SetMapMarkerProxy(class UTigerMapMarkerProxy* Proxy);
	void SetIsOnMinimap(bool bInIsOnMinimap);
	void SetCanvasSize(const struct FVector2D& ParentCanvasSize);
	void OnUpdated();
	void OnIsOnMinimapIsSet(bool bInIsOnMinimap);
	class UTigerMapGameData* GetMapGameData();
	void FadeIn(float InDurationInSeconds);
	void CollapseUnseenIcons();
};

// Class Tiger.TigerPointOfInterestMapMarkerWidget
// 0x0018 (FullSize[0x02C8] - InheritedSize[0x02B0])
class UTigerPointOfInterestMapMarkerWidget : public UTigerMapMarkerWidget
{
public:
	unsigned char                                      UnknownData_R4LZ[0x18];                                    // 0x02B0(0x0018) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerPointOfInterestMapMarkerWidget");
		return ptr;
	}



	void SetToHighTierLootLocation();
	void OnHighTierLootLocationsChanged();
};

// Class Tiger.TigerPostMatchScreenUI
// 0x0018 (FullSize[0x02B0] - InheritedSize[0x0298])
class UTigerPostMatchScreenUI : public UTigerLoadingScreenUI
{
public:
	struct FScriptMulticastDelegate                    OnReadyToTravel;                                           // 0x0298(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_HOOK[0x8];                                     // 0x02A8(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerPostMatchScreenUI");
		return ptr;
	}



	void ReadyToTravel();
	void OnReadyToTravelDelegate__DelegateSignature();
	bool GetIsReadyToTravel();
};

// Class Tiger.TigerPowerKit
// 0x0280 (FullSize[0x02B0] - InheritedSize[0x0030])
class UTigerPowerKit : public UDataAsset
{
public:
	Tiger_ETigerPowerKitType                           ArchetypeType;                                             // 0x0030(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_ZEDU[0x7];                                     // 0x0031(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FText                                       DISPLAYNAME;                                               // 0x0038(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FText                                       ArchetypeKeywordsText;                                     // 0x0050(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FText                                       FormattedDescription;                                      // 0x0068(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FCoreUObject_FColor                         ArchetypeColor;                                            // 0x0080(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_R626[0x4];                                     // 0x0084(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	unsigned char                                      ArchetypeSelectTexture[0x28];                              // 0x0084(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	unsigned char                                      ArchetypeHighlightMaterial[0x28];                          // 0x00B0(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	unsigned char                                      ArchetypeBackgroundTexture[0x28];                          // 0x00D8(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	unsigned char                                      ArchetypeIcon[0x28];                                       // 0x0100(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	class UMediaSource*                                ArchetypeSelectCinematic;                                  // 0x0128(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTigerBloodTrackPreset*                      DefaultBloodTrack;                                         // 0x0130(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UTigerBloodTrackPassiveConfig*>       BloodTrackPassives;                                        // 0x0138(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<class UTigerPassiveConfig*>                 Passives;                                                  // 0x0148(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FTigerCharacterStatModification             Stats;                                                     // 0x0158(0x00B4) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	Tiger_ETigerDisciplinesEnum                        LeftDiscipline;                                            // 0x020C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	Tiger_ETigerDisciplinesEnum                        RightDiscipline;                                           // 0x020D(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_ZX16[0x2];                                     // 0x020E(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	unsigned char                                      DefaultCharacterPreset[0x28];                              // 0x020E(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	unsigned char                                      FirstTimeCharacterPreset[0x28];                            // 0x0238(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	unsigned char                                      BotOutfitPresets[0x50];                                    // 0x0260(0x0050) UNKNOWN PROPERTY: SoftObjectProperty


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerPowerKit");
		return ptr;
	}



};

// Class Tiger.TigerPromptCollectionWidget
// 0x00B0 (FullSize[0x0330] - InheritedSize[0x0280])
class UTigerPromptCollectionWidget : public UTigerWidget
{
public:
	class UClass*                                      MasqueradeBreachedPrompt;                                  // 0x0280(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      MasqueradeBreachedByNpcKillPrompt;                         // 0x0288(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      MasqueradeBreachedByNpcFeedingPrompt;                      // 0x0290(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      MasqueradeRestoredPrompt;                                  // 0x0298(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      IntroPrompt;                                               // 0x02A0(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      FirstGasPrompt;                                            // 0x02A8(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      SubsequentGasPrompt;                                       // 0x02B0(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      GasStartedMovingPrompt;                                    // 0x02B8(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      JudgeSpawnedPrompt;                                        // 0x02C0(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      JudgeSlainPrompt;                                          // 0x02C8(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      SupplyDropPrompt;                                          // 0x02D0(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      SuperHighPotentNearbyPrompt;                               // 0x02D8(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      LevelUpPrompt;                                             // 0x02E0(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      GameModeInteractionPrompt;                                 // 0x02E8(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      EliminatedPlayerPrompt;                                    // 0x02F0(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      DownedPlayerPrompt;                                        // 0x02F8(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      EnteringNewAreaPrompt;                                     // 0x0300(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      ArtifactPickedUpPrompt;                                    // 0x0308(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FTigerQueuedTextPrompt>              TextPromptQueue;                                           // 0x0310(0x0010) (ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	TArray<struct FTigerQueuedTextPromptPriorityEntry> Prompts;                                                   // 0x0320(0x0010) (Edit, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerPromptCollectionWidget");
		return ptr;
	}



	void EnqueueTextPrompt(class UClass* InTextPrompt);
};

// Class Tiger.TigerStaticMeshPropComponent
// 0x0008 (FullSize[0x04E8] - InheritedSize[0x04E0])
class UTigerStaticMeshPropComponent : public UStaticMeshComponent
{
public:
	unsigned char                                      UnknownData_1QZ7[0x8];                                     // 0x04E0(0x0008) Fix Super Size


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerStaticMeshPropComponent");
		return ptr;
	}



};

// Class Tiger.TigerSkeletalMeshPropComponent
// 0x0010 (FullSize[0x0EF0] - InheritedSize[0x0EE0])
class UTigerSkeletalMeshPropComponent : public USkeletalMeshComponent
{
public:
	unsigned char                                      UnknownData_WB8X[0x10];                                    // 0x0EE0(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerSkeletalMeshPropComponent");
		return ptr;
	}



};

// Class Tiger.TigerPropEffectsComponent
// 0x0028 (FullSize[0x0510] - InheritedSize[0x04E8])
class UTigerPropEffectsComponent : public UTigerStaticMeshPropComponent
{
public:
	class UParticleSystem*                             Particles;                                                 // 0x04E8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FName                                       AttachPoint;                                               // 0x04F0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UParticleSystemComponent*                    ParticlesSystemComponent;                                  // 0x04F8(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bActivateEffectOnAttach;                                   // 0x0500(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_VJ5I[0xF];                                     // 0x0501(0x000F) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerPropEffectsComponent");
		return ptr;
	}



};

// Class Tiger.TigerPropCompInterface
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class UTigerPropCompInterface : public UInterface
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerPropCompInterface");
		return ptr;
	}



	void OnDeactiveEffect();
	void OnActivateEffect();
	void DeactiveEffect();
	void ActivateEffect();
};

// Class Tiger.TigerChallengeDiablerize
// 0x0018 (FullSize[0x00C8] - InheritedSize[0x00B0])
class UTigerChallengeDiablerize : public UTigerChallenge
{
public:
	struct FTigerChallengeRequirementClan              TargetRequiredClan;                                        // 0x00B0(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_ONL3[0x8];                                     // 0x00C0(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerChallengeDiablerize");
		return ptr;
	}



	void OnDiablerizedPlayerEvent(Tiger_ETigerPlayerEvent InEvent, class ATigerCharacter* InEventTiedCharacter);
	void HandleOnRestartPlayer(class AController* InNewPlayer);
};

// Class Tiger.TigerConsumableInventoryItemBase
// 0x0008 (FullSize[0x0118] - InheritedSize[0x0110])
class UTigerConsumableInventoryItemBase : public UTigerInventoryItemBase
{
public:
	int                                                Count;                                                     // 0x0110(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_DRLJ[0x4];                                     // 0x0114(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerConsumableInventoryItemBase");
		return ptr;
	}



};

// Class Tiger.TigerInventoryItemPack
// 0x0008 (FullSize[0x0120] - InheritedSize[0x0118])
class UTigerInventoryItemPack : public UTigerConsumableInventoryItemBase
{
public:
	struct FTigerItemId                                ItemId;                                                    // 0x0118(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerInventoryItemPack");
		return ptr;
	}



};

// Class Tiger.TigerServerCallbacks
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class UTigerServerCallbacks : public UInterface
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerServerCallbacks");
		return ptr;
	}



	void OnLoginSucceeded(TArray<struct FTigerPersistentPlayerCharacter> AvailableCharacters);
	void OnLoginFailed(const struct FTigerLoginFailedInfo& InLoginFailedInfo);
	void OnGetValidGameVersionResult(Tiger_ETigerVersionIsValidResult Result);
	void OnCreateCharacterResult(const struct FTigerPersistentCharacterID& CharacterId, bool bWasCharacterCreated);
	void OnCharacterSelected();
};

// Class Tiger.TigerPersistentPlayerState
// 0x0510 (FullSize[0x05C0] - InheritedSize[0x00B0])
class UTigerPersistentPlayerState : public UActorComponent
{
public:
	unsigned char                                      UnknownData_1JR0[0x28];                                    // 0x00B0(0x0028) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnDailyChallengesInitializedEvent;                         // 0x00D8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnRewardsLoaded;                                           // 0x00E8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnClientTransactionalPlayerDataChangedEvent;               // 0x00F8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnClientPlayerInventoryChanged;                            // 0x0108(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnSelectedCharacterChanged;                                // 0x0118(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnChallengeProgressUpdated;                                // 0x0128(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_P1X9[0x48];                                    // 0x0138(0x0048) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnSeasonLevelGained;                                       // 0x0180(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UTigerThrallSystem*                          PlayerThrallSystem;                                        // 0x0190(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTigerCollectibleSystem*                     PlayerCollectibleSystem;                                   // 0x0198(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_33BP[0x10];                                    // 0x01A0(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UObject*                                     ServerCallbacks;                                           // 0x01B0(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_115C[0x20];                                    // 0x01B8(0x0020) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FSharkUserId                                SharkmobUserId;                                            // 0x01D8(0x0010) (Net, NativeAccessSpecifierPrivate)
	struct FTigerPersistentPlayerID                    PersistentPlayerID;                                        // 0x01E8(0x0010) (Net, NativeAccessSpecifierPrivate)
	Shark_EShAccountChannel                            AccountChannel;                                            // 0x01F8(0x0001) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_LZV3[0x15F];                                   // 0x01F9(0x015F) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FTigerPersistentPlayerCharacter>     CachedPlayerCharacters;                                    // 0x0358(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, NativeAccessSpecifierPrivate)
	TMap<struct FString, class UTigerQuestline*>       ActiveQuests;                                              // 0x0368(0x0050) (Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPrivate)
	TMap<struct FString, class UTigerQuestline*>       CompletedQuests;                                           // 0x03B8(0x0050) (Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_KHKJ[0xB0];                                    // 0x0408(0x00B0) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TMap<struct FTigerChallengeTypeID, class UTigerChallenge*> DailyChallenges;                                           // 0x04B8(0x0050) (Transient, NativeAccessSpecifierPrivate)
	TMap<struct FTigerChallengeInstanceID, class UTigerChallenge*> SeasonalChallenges;                                        // 0x0508(0x0050) (Transient, NativeAccessSpecifierPrivate)
	TMap<struct FTigerChallengeInstanceID, int>        PendingWeeklyChallengeUpdates;                             // 0x0558(0x0050) (Transient, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_VXCY[0x18];                                    // 0x05A8(0x0018) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerPersistentPlayerState");
		return ptr;
	}



	void TryLoginAutomatically(const struct FTigerLoginQueueToken& InLoginQueueToken, class UObject* InCallbacks);
	bool TryGetSelectedCharacter(struct FTigerPersistentPlayerCharacter* OutSelectedCharacter);
	void TransactionalPlayerDataChanged__DelegateSignature(const struct FTigerPersistentPlayerTransactionalData& TransactionalPlayerData);
	void TigerDelegateChallengeProgressUpdated__DelegateSignature();
	void SwitchCharacter(const struct FTigerPersistentCharacterID& InCharacterSlot);
	bool SetCallbackObject(class UObject* Callbacks);
	void Server_UpdateQuestProgress();
	void Server_UpdatePersistentThralls();
	void Server_UpdateOngoingCollectibles();
	void Server_UpdateGrimoireSuggestedArticlesData(uint32_t InDay, TArray<struct FString> InEntryIds);
	void Server_UpdateActiveThrallMissions();
	void Server_SwitchCharacter(const struct FTigerPersistentCharacterID& InCharacterSlot);
	void Server_StartNewQuest(const struct FString& InQuestlineId, const struct FString& InQuestId);
	void Server_ResetReadDialogue();
	void Server_RegisterGrimoireEntryAsRead(uint32_t InGrimoireEntryId, bool bInForce);
	void Server_RefreshPremiumCurrencyBalance();
	void Server_MarkDialogueAsRead(int InDialogueId, const struct FString& InNpcIdentifier, unsigned char InCategory);
	void Server_ForceCompleteQuest(const struct FString& InQuestlineId, const struct FString& InQuestId);
	void Server_DeleteCharacter(const struct FTigerPersistentCharacterID& InCharacterSlot);
	void Server_CreateCharacter(const struct FTigerPersistentPlayerCharacter& InCharacter);
	void Server_ClearQuests();
	void Server_ChangeOutfit(int InOutfitId);
	void Server_BuyStoreEntries(const struct FTigerMetaStoreBuyPayload& InMetaStoreBuyPayload, int InClientPurchaseId);
	void Server_BuyItem(const struct FTigerItemId& InItemId, const struct FTigerItemId& InSoftCurrencyId, int InPurchaseId);
	void SelectCharacter(const struct FTigerPersistentCharacterID& InCharacterId);
	void RegisterUnlockedGrimoireSubEntriesAsRead(const struct FString& InGrimoireParentEntryId);
	void RegisterGrimoireEntryAsUnlocked(const struct FString& InGrimoireEntryId, bool bInForce);
	void RegisterGrimoireEntryAsRead(const struct FString& InGrimoireEntryId, bool bInForce);
	void PlayerInventoryChanged__DelegateSignature(class UTigerPersistentPlayerState* InPersistentPlayerState);
	void PlayerCharacterChanged__DelegateSignature(class UTigerPersistentPlayerState* InPersistentPlayerState);
	void OverridePlayerArchetypeForBenchmark(Tiger_ETigerPowerKitType InArchetypeType);
	void OnWeeklyChallengeValueChanged(class UTigerChallenge* InChallenge);
	void OnSeasonLevelGained__DelegateSignature();
	void OnRewardsLoaded__DelegateSignature();
	void OnRep_DailyChallenges();
	void OnPlatformLoginResultReceived(const struct FSharkLoginResult& InLoginResult);
	void OnMutedStatusChanged__DelegateSignature(const struct FTigerMuteInfo& InMuteInfo);
	void OnInitialised__DelegateSignature();
	void OnGetPlayerCharactersMulti__DelegateSignature(TArray<struct FTigerPersistentPlayerCharacter> InCharacters, const struct FString& InErrorString);
	void OnGetPlayerCharacters__DelegateSignature(TArray<struct FTigerPersistentPlayerCharacter> InCharacters, const struct FString& InErrorString);
	void OnDailyChallengeValueChanged(class UTigerChallenge* InChallenge);
	void OnDailyChallengesInitialized__DelegateSignature();
	void LoginWithSharkmobAccount(class UObject* InCallbacks, const struct FTigerLoginQueueToken& InLoginQueueToken, const struct FSharkLoginResult& InLoginDetails);
	bool IsQuestComplete(const struct FString& InQuestlineId, const struct FString& InQuestId);
	bool IsQuestActive(const struct FString& InQuestlineId, const struct FString& InQuestId);
	bool IsItemInPlayerInventory();
	bool HasReachedSeasonMaxLevel();
	bool HasLoadedChallenges();
	bool HasCurrentSeasonBattlepass();
	bool HasCompletedInitialisation();
	bool GrimoireEntryHasState(const struct FString& InGrimoireEntryId, Tiger_ETigerGrimoireEntryState InState);
	Tiger_ETigerVersionCheckStatus GetVersionCheckStatus();
	struct FTigerPersistentPlayerTransactionalData GetTransactionalPlayerData();
	struct FSharkUserId GetSharkmobUserId();
	struct FTigerPersistentPlayerCharacter GetSelectedCharacter();
	TArray<class UTigerQuest*> GetQuestsFromQuestlineOrdered(const struct FString& InQuestlineId);
	struct FTigerPersistentPlayerID GetPlayerId();
	struct FTigerPersistentPlayerData GetPlayerData();
	void GetPlayerCharacters(const struct FScriptDelegate& InDelegate);
	unsigned char GetNumCharacterSlots();
	struct FTigerPersistentPlayerTransactionalData GetMutableTransactionalPlayerData();
	Tiger_ETigerLoginStatus GetLoginStatus();
	int GetInventoryItemCount();
	struct FTigerSuggestedArticlesData GetGrimoireSuggestedArticlesData();
	Tiger_ETigerGrimoireEntryState GetGrimoireEntryState(const struct FString& InGrimoireEntryId);
	TArray<struct FTigerGrimoireEntryStatusStruct> GetGrimoireEntries();
	void GetCurrentSeasonLevelExperience(float* OutLevelCurrentExperience, float* OutExperienceRequiredBetweenLevels);
	int GetCurrentSeasonLevel();
	TArray<class UTigerChallenge*> GetClosestChallengesToComplete(int InNrOfChallenges);
	struct FTigerPersistentArchetypeTransactionalData GetArchetypeDataForCharacterId(const struct FTigerPersistentCharacterID& InCharacterId);
	TArray<struct FString> GetAllQuestlineIdsOrdered();
	bool FindOutfitSetup(struct FTigerPersistentOutfitSetup* OutfitSetup);
	void DeleteCharacter(const struct FTigerPersistentCharacterID& InCharacterSlot);
	void CreateCharacter(const struct FTigerPersistentPlayerCharacter& InCharacter);
	void Client_UpdateWeeklyChallenge(const struct FTigerChallengeInstanceID& InChallengeInstanceID, int InNewValue);
	void Client_UpdateSeasonConfig(const struct FTigerSeasonConfig& InSeasonConfig, const struct FDateTime& InServerTime);
	void Client_UpdateDailyChallenge(const struct FTigerChallengeTypeID& InChallengeTypeID, int InNewValue);
	void Client_SetMuteStatus(const struct FTigerMuteInfo& InMuteInfo);
	void Client_SeasonLevelGained();
	void Client_RefreshPremiumCurrencyBalanceResponse(bool bInSuccess, uint64_t InBalance);
	void Client_OnTransactionalPlayerDataUpdated(const struct FTigerPersistentPlayerTransactionalData& TransactionalData);
	void Client_OnSeasonProgressUpdated(const struct FTigerPersistentPlayerTransactionalData& InTransactionalData);
	void Client_OnPlayerDataUpdated(const struct FTigerPersistentPlayerData& PlayerData, const struct FTigerPersistentPlayerCardData& UpdatedPlayerCardData, bool bShowNotification);
	void Client_OnInitialPlayerDataReceived();
	void Client_OnCharacterUpdated(const struct FTigerPersistentPlayerCharacter& CharacterInfo);
	void Client_OnBuyStoreEntriesResponse(int InClientPurchaseId, const struct FTigerBuyStoreEntryResponsePayload& InBuyResponse, const struct FDateTime& InSeasonStartDate);
	void Client_NewItemRecievedInInventory(const struct FTigerItemId& InPersistentItemId);
	void Client_NewGrimoireEntryViewed(uint32_t InGrimoireEntryId);
	void Client_DeleteCharacterResponse(bool bInCharacterWasDeleted, const struct FTigerPersistentCharacterID& InCharacterSlot);
	void Client_CreateCharacterResponse(bool bInCharacterWasCreated, const struct FTigerPersistentPlayerCharacter& InCharacter);
	void Client_BuyItemResponse(bool bInSuccess, const struct FTigerItemId& InItemId, const struct FString& InErrorString, int InPurchaseId);
	void CheckVersionValidity(class UObject* Callbacks);
	void BuyStoreEntries(TArray<struct FTigerMetaStoreBuyPayloadElement> InEntriesToBuy, const struct FScriptDelegate& InBuyDelegate);
	void BuyItemResultDelegate__DelegateSignature(bool bSuccess, const struct FTigerItemId& InItemId, const struct FString& InErrorString);
	void BuyItem(const struct FTigerItemId& InItemId, const struct FTigerItemId& InSoftCurrencyId, const struct FScriptDelegate& InDelegate);
};

// Class Tiger.TigerPingClientData
// 0x0060 (FullSize[0x0090] - InheritedSize[0x0030])
class UTigerPingClientData : public UDataAsset
{
public:
	unsigned char                                      UnknownData_SJ8E[0x8];                                     // 0x0030(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UClass*                                      PingClass;                                                 // 0x0038(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ATigerPlayerState*                           OwningPlayerState;                                         // 0x0040(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTigerPingContext                           Context;                                                   // 0x0048(0x0010) (BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_B9K8[0xC];                                     // 0x0058(0x000C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FVector                                     WorldLocation;                                             // 0x0064(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bIsLocalPlayerInterested;                                  // 0x0070(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_VD6E[0x1F];                                    // 0x0071(0x001F) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerPingClientData");
		return ptr;
	}



	bool IsPlayerInterested(unsigned char InPlayerGroupIndex);
};

// Class Tiger.TigerPingBase
// 0x00C0 (FullSize[0x00F0] - InheritedSize[0x0030])
class UTigerPingBase : public UDataAsset
{
public:
	int                                                MaxConcurrentPings;                                        // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bBecomesPermanentOnInterest;                               // 0x0034(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bInstanceSupportsHover;                                    // 0x0035(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_6ZBW[0x2];                                     // 0x0036(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              LifeTimeInSeconds;                                         // 0x0038(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaxDistance;                                               // 0x003C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaxActorDistanceFromMarker;                                // 0x0040(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_C25A[0x4];                                     // 0x0044(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UClass*                                      WidgetClass;                                               // 0x0048(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UClass*>                              ExclusiveWithPingClasses;                                  // 0x0050(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, NativeAccessSpecifierPublic)
	class UTexture2D*                                  Icon;                                                      // 0x0060(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                                  InterestedResponseIcon;                                    // 0x0068(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                                  NotInterestedResponseIcon;                                 // 0x0070(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FText                                       Name;                                                      // 0x0078(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FText                                       Description;                                               // 0x0090(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FText                                       InterestedResponse;                                        // 0x00A8(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FText                                       NotInterestedResponse;                                     // 0x00C0(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               NotificationAudioEvent;                                    // 0x00D8(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               VoiceAudioEvent;                                           // 0x00E0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bCanBeInCluster;                                           // 0x00E8(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_C7V0[0x7];                                     // 0x00E9(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerPingBase");
		return ptr;
	}



	bool ShouldRemovePing(class AActor* InContextActor);
	struct FText GetTooltipName(const struct FTigerPingContext& InContext);
	struct FTigerPingNotificationUIData GetResponseText(const struct FTigerPingContext& InContext, bool bInIsInterested);
	struct FTigerPingNotificationUIData GetNotificationUIData(const struct FTigerPingContext& InContext);
	struct FTigerPingIconData GetIconData(const struct FTigerPingContext& InContext);
	bool EvaluateWorldActor(class ATigerPlayerState* InPlayerState, const struct FHitResult& InHitResult, struct FTigerPingWorldNetData* OutPingData, class AActor** OutOverrideActor);
};

// Class Tiger.TigerPingMarkerProxy
// 0x0008 (FullSize[0x0070] - InheritedSize[0x0068])
class UTigerPingMarkerProxy : public UTigerMapMarkerProxy
{
public:
	class UTigerPingClientData*                        PingData;                                                  // 0x0068(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerPingMarkerProxy");
		return ptr;
	}



};

// Class Tiger.TigerPingSetupAsset
// 0x0098 (FullSize[0x00C8] - InheritedSize[0x0030])
class UTigerPingSetupAsset : public UDataAsset
{
public:
	class UClass*                                      MapMarkerClass;                                            // 0x0030(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      WidgetClass;                                               // 0x0038(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UClass*>                              WorldPingTypes;                                            // 0x0040(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	class UClass*                                      DoublePressPingClass;                                      // 0x0050(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      DistanceFallbackPingClass;                                 // 0x0058(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UClass*>                              InGamePingTypes;                                           // 0x0060(0x0010) (Edit, BlueprintVisible, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<class UClass*>                              PingBarkTypes;                                             // 0x0070(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	class UClass*                                      PingBarkDowned;                                            // 0x0080(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      PingBarkFullHealth;                                        // 0x0088(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      PingBarkNeedHealing;                                       // 0x0090(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      PingBarkMasquerade;                                        // 0x0098(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      PingInventoryWantsMeleeWeapon;                             // 0x00A0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      PingInventoryWantsRangedWeapon;                            // 0x00A8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      PingInventoryWantsItem;                                    // 0x00B0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      PingLocation;                                              // 0x00B8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      PingEnemy;                                                 // 0x00C0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerPingSetupAsset");
		return ptr;
	}



};

// Class Tiger.TigerPingControllerComponent
// 0x0160 (FullSize[0x0210] - InheritedSize[0x00B0])
class UTigerPingControllerComponent : public UActorComponent
{
public:
	struct FScriptMulticastDelegate                    OnPingUsedInTutorial;                                      // 0x00B0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	float                                              MaxTraceLength;                                            // 0x00C0(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              WheelHoldTime;                                             // 0x00C4(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              DoublePressTimeout;                                        // 0x00C8(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              PingHeightOffset;                                          // 0x00CC(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ATigerPlayerController*                      OwningController;                                          // 0x00D0(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTigerPingCoordinator*                       PingCoordinator;                                           // 0x00D8(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTigerInWorldIconController*                 WorldIconController;                                       // 0x00E0(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FTigerPingWrapper>                   ActivePings;                                               // 0x00E8(0x0010) (Edit, ZeroConstructor, Transient, EditConst, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	TArray<struct FTigerPingWrapper>                   ReusablePings;                                             // 0x00F8(0x0010) (ZeroConstructor, Transient, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	TArray<class UTigerPingClientData*>                UnresolvedActors;                                          // 0x0108(0x0010) (ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	class UTigerPingSetupAsset*                        PingSetup;                                                 // 0x0118(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_CG2O[0xE9];                                    // 0x0120(0x00E9) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               bEnablePingsInTutorial;                                    // 0x0209(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_UDPC[0x6];                                     // 0x020A(0x0006) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerPingControllerComponent");
		return ptr;
	}



	bool TryExecuteFocusPingAction();
	void SpawnLocalPing(const struct FVector& InWorldOffset, const struct FTigerPingWorldNetData& InPing);
	void Server_SpawnWorldPing(const struct FTigerPingWorldNetData& InPing);
	void Server_SpawnMapPing(class UClass* InPingClass, const struct FVector_NetQuantize& InWorldLocation);
	void Server_SpawnLootBoxItemPing(const struct FTigerPingWorldNetData& InPingData);
	void Server_RespondToPing(const struct FTigerUniquePingId& InPingId, bool bInIsInterested);
	void Server_NotificationOnlyPing(const struct FTigerPingNotificationNetData& InPing);
	void Server_CancelPing(const struct FTigerUniquePingId& InPingId, bool InShouldDisplayNotification);
	void SendWorldPing(const struct FTigerPingWorldNetData& InPingData);
	void SendPingTypeFromCameraLocation(class UClass* InPingClass, bool InCancelInFocusPing);
	void SendNotificationPing(const struct FTigerPingNotificationNetData& InPingData);
	void SendMapPing(class UClass* InPingClass, const struct FVector& InWorldLocation);
	void SendLootBoxItemPing(const struct FTigerPingWorldNetData& InItemPingData, class ATigerLootBox* InLootBox);
	void OnTigerPingUsedInTutorial__DelegateSignature();
	TArray<struct FPointOfInterest> GetPointsOfInterestedByDistance(int InMaxCount);
	void GetPingWheelItems(class ATigerPlayerState* InPlayerState, TArray<struct FHitResult> InHitResults, TArray<struct FTigerPingWorldNetData>* OutPingWheelItems);
	bool GetPingInfoFromActor(const struct FHitResult& InHitResult, struct FTigerPingWorldNetData* OutPingData);
	void Client_SpawnWorldPing(const struct FTigerUniquePingId& InPingId, const struct FTigerPingWorldNetData& InPing);
	void Client_SilentlyRemovePing(const struct FTigerUniquePingId& InPingId);
	void Client_RespondToPing(const struct FTigerUniquePingId& InPingId, const struct FTigerPingResponse& InResponse);
	void Client_NotificationOnlyPing(const struct FTigerPingNotificationNetData& InPing, unsigned char InPlayerGroupIndex);
	void Client_CancelPing(const struct FTigerUniquePingId& InPingId, bool InShouldDisplayNotification);
	void ClearAllPings();
	bool CanSendPings();
	void CancelPingAtIndex(int InExistingPingIndex, bool InShouldDisplayCancelNotification);
};

// Class Tiger.TigerPingCoordinator
// 0x0020 (FullSize[0x0048] - InheritedSize[0x0028])
class UTigerPingCoordinator : public UObject
{
public:
	TArray<struct FTigerPingCoordinatorEntry>          ActivePings;                                               // 0x0028(0x0010) (ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	TArray<class UTigerPingControllerComponent*>       GroupMemberPingControllers;                                // 0x0038(0x0010) (ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerPingCoordinator");
		return ptr;
	}



};

// Class Tiger.TigerInWorldWidget
// 0x0048 (FullSize[0x02C8] - InheritedSize[0x0280])
class UTigerInWorldWidget : public UTigerWidget
{
public:
	struct FVector                                     WorldLocation;                                             // 0x0280(0x000C) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     ComponentOffset;                                           // 0x028C(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                                   ViewportPosition;                                          // 0x0298(0x0008) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTigerInWorldWidget*                         InnerWidget;                                               // 0x02A0(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class USceneComponent>              ComponentToFollow;                                         // 0x02A8(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UWidget*>                             PlayerDistanceScalingWidgets;                              // 0x02B0(0x0010) (BlueprintVisible, ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPublic)
	bool                                               bWasOnScreen;                                              // 0x02C0(0x0001) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bLimitRotationAngleToSides;                                // 0x02C1(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bSupportsHover;                                            // 0x02C2(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bShowDistanceMarker;                                       // 0x02C3(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_WW4T[0x4];                                     // 0x02C4(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerInWorldWidget");
		return ptr;
	}



	void UpdatePlayerDistanceScalingWidgets();
	void UpdateOffScreenState(float InRotationDegrees);
	bool ShouldShowDistanceMarker();
	void OnScreenStateChanged(bool bInIsOnScreen);
	void OnInWorldFocusLost();
	void OnInWorldFocusGained();
	void OnInnerWidgetChanged();
	void FollowActor(class AActor* InActor);
	class UTigerInWorldWidget* CreateInnerWidget(class UClass* InWidgetClass);
	void AddPlayerDistanceScalingWidget(class UWidget* InWidget);
};

// Class Tiger.TigerPingWorldInstanceUI
// 0x0008 (FullSize[0x02D0] - InheritedSize[0x02C8])
class UTigerPingWorldInstanceUI : public UTigerInWorldWidget
{
public:
	class UTigerPingClientData*                        PingData;                                                  // 0x02C8(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerPingWorldInstanceUI");
		return ptr;
	}



	void OnPlayerResponse(const struct FTigerPingResponse& InResponse);
	void OnPingDataUpdated(class UTigerPingClientData* InPingData);
	void ApplyIconDataToImage(class UImage* InImageWidget, class UTigerUIColorSet* InColorSet);
};

// Class Tiger.TigerWheelWidget
// 0x0010 (FullSize[0x02A0] - InheritedSize[0x0290])
class UTigerWheelWidget : public UTigerMenuWidget
{
public:
	float                                              LockCameraForGamepadAfterUseTime;                          // 0x0290(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bShouldSetMouseLocation;                                   // 0x0294(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_D1DR[0x3];                                     // 0x0295(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UTigerWheelInterfaceWidget*                  Interface;                                                 // 0x0298(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerWheelWidget");
		return ptr;
	}



	void PrimaryAction(int Index);
	bool OpenWheel();
	class UTigerWheelInterfaceWidget* GetInterfaceWidget();
	bool CloseWheel(bool bTriggerAction);
	void AlternateAction(int Index);
};

// Class Tiger.TigerPingWheelWidget
// 0x0020 (FullSize[0x02C0] - InheritedSize[0x02A0])
class UTigerPingWheelWidget : public UTigerWheelWidget
{
public:
	TArray<struct FTigerPingWorldNetData>              CurrentPingTypeItems;                                      // 0x02A0(0x0010) (Edit, ZeroConstructor, EditConst, NativeAccessSpecifierPrivate)
	class UTigerPingClientData*                        CurrentPingResponseData;                                   // 0x02B0(0x0008) (Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTigerPingControllerComponent*               PingController;                                            // 0x02B8(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerPingWheelWidget");
		return ptr;
	}



};

// Class Tiger.TigerPlayer
// 0x0780 (FullSize[0x0F00] - InheritedSize[0x0780])
class ATigerPlayer : public ATigerCharacter
{
public:
	unsigned char                                      UnknownData_TWXC[0x8];                                     // 0x0780(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	unsigned char                                      PlayerVisibilityToNPC;                                     // 0x0788(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	Tiger_ETigerTraversalState                         CurrentTraversalState;                                     // 0x0789(0x0001) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_E2OE[0x2];                                     // 0x078A(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FVector                                     GunOffset;                                                 // 0x078C(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTigerSpringArmComponent*                    SpringArm;                                                 // 0x0798(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTigerInventoryComponent*                    InventoryComponent;                                        // 0x07A0(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTigerConsumablesComponent*                  ConsumablesComponent;                                      // 0x07A8(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTigerAudioVisualizationSpawnerComponent*    AudioVisualizationComponent;                               // 0x07B0(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_ESOZ[0x18];                                    // 0x07B8(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UShapeComponent*                             InteractionVolumeComponent;                                // 0x07D0(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UShapeComponent*                             TriggerVolumeComponent;                                    // 0x07D8(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPostProcessComponent*                       FullscreenPostProcessComponent;                            // 0x07E0(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTigerDistrictComponent*                     DistrictComponent;                                         // 0x07E8(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTigerCrowdAgentComponent*                   CrowdAgentComponent;                                       // 0x07F0(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTigerBloodResonanceComponent*               BloodResonanceComponent;                                   // 0x07F8(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTigerTalentComponent*                       TalentComponent;                                           // 0x0800(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTigerEmotePlayerComponent*                  EmotePlayerComponent;                                      // 0x0808(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTigerUtilityPowerHSenseComponent*           HSenseComponent;                                           // 0x0810(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      HSenseClass;                                               // 0x0818(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTigerUtilityPowerBaseComponent*             UtilityPowerComp;                                          // 0x0820(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTigerDisciplineComponent*                   DisciplineComponent;                                       // 0x0828(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTigerLevelComponent*                        LevelComponent;                                            // 0x0830(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTigerCharCustomizationComponent*            CharacterCustomizationComponent;                           // 0x0838(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_HEHB[0x8];                                     // 0x0840(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UTigerPlayerClanData*                        PlayerClan;                                                // 0x0848(0x0008) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnBloodTrackUpdatedEvent;                                  // 0x0850(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TArray<class UTigerBloodTrackPassiveConfig*>       BloodTrack;                                                // 0x0860(0x0010) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, NativeAccessSpecifierPublic)
	TMap<class UClass*, int8_t>                        InitialProjectileReserveCount;                             // 0x0870(0x0050) (Edit, NativeAccessSpecifierPublic)
	int8_t                                             DefaultReservedProjectileCount;                            // 0x08C0(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_H2D0[0x3];                                     // 0x08C1(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              LastAirStartTime;                                          // 0x08C4(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              LastAirEndTime;                                            // 0x08C8(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_77IA[0x4];                                     // 0x08CC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnGasDamageTaken;                                          // 0x08D0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnSelfReviveBlockedByRedGas;                               // 0x08E0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnShieldBroken;                                            // 0x08F0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_XB88[0x18];                                    // 0x0900(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnDiablerizeStateChanged;                                  // 0x0918(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnReviveStateChanged;                                      // 0x0928(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnPlayerEvent;                                             // 0x0938(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnDamageDealt;                                             // 0x0948(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnHealthChanged;                                           // 0x0958(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnTraversalAction;                                         // 0x0968(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnLifeStatusChanged;                                       // 0x0978(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_PVHB[0x30];                                    // 0x0988(0x0030) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnUpdateArchetypePassiveActiveState;                       // 0x09B8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnBeginPlay;                                               // 0x09C8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	bool                                               bExposePlayersInHeightenedSense;                           // 0x09D8(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_0HSE[0x7];                                     // 0x09D9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UClass*                                      DiablerizeInteractionClass;                                // 0x09E0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      ReviveInteractionClass;                                    // 0x09E8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       LoopSectionName;                                           // 0x09F0(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       EndSectionName;                                            // 0x09F8(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       InterruptedSectionName;                                    // 0x0A00(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    SavedLocationAdded;                                        // 0x0A08(0x0010) (ZeroConstructor, Transient, InstancedReference, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnKilledBy;                                                // 0x0A18(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_5TOL[0x1];                                     // 0x0A28(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               bAllowCollisionWithPlayersInElysium;                       // 0x0A29(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_DV25[0x6];                                     // 0x0A2A(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UTigerPowerKit*                              PowerKit;                                                  // 0x0A30(0x0008) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              RecentDamageTaken;                                         // 0x0A38(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_5GN6[0x4];                                     // 0x0A3C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              RecentDamageDecayWaitDuration;                             // 0x0A40(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              RecentDamageDecayInitialWaitDuration;                      // 0x0A44(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              RecentDamageDecayRate;                                     // 0x0A48(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_B5B9[0x8];                                     // 0x0A4C(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              InvulnerabilityDurationDowned;                             // 0x0A54(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              InvulnerabilityDurationRegenerated;                        // 0x0A58(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              InvulnerabilityDurationRevived;                            // 0x0A5C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_UB92[0x10];                                    // 0x0A60(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              LocationHistorySaveDistanceSquared;                        // 0x0A70(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              LocationHistoryDurationSeconds;                            // 0x0A74(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bIsInvisibleByDodge;                                       // 0x0A78(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bIsRecoveringFromDodge;                                    // 0x0A79(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_F4EC[0x2];                                     // 0x0A7A(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              ArmorDurability;                                           // 0x0A7C(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	Tiger_ETigerItemRarity                             ArmorRarity;                                               // 0x0A80(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_4MFE[0x7];                                     // 0x0A81(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class USceneComponent*                             ProjectileSpawnRootRef;                                    // 0x0A88(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCameraComponent*                            Camera;                                                    // 0x0A90(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USkeletalMeshComponent*                      HolsteredWeaponMeshRef;                                    // 0x0A98(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USkeletalMeshComponent*                      SecondaryHolsteredWeaponMeshRef;                           // 0x0AA0(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_WW56[0x1];                                     // 0x0AA8(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FTigerCompressedRotation                    CompressedCameraRotation;                                  // 0x0AA9(0x0002) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_W7FT[0xD];                                     // 0x0AAB(0x000D) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FTigerNpcThatCanSeePlayerWrapper>    NpcThatCanSeePlayerServer;                                 // 0x0AB8(0x0010) (ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<struct FTigerNpcThatCanSeePlayerWrapper_Client> NpcThatCanSeePlayerClient;                                 // 0x0AC8(0x0010) (ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<struct FTigerNpcThatCanSeePlayerWrapper_Client> LastNpcsThatCantSeePlayerSent;                             // 0x0AD8(0x0010) (ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_3WC2[0x8];                                     // 0x0AE8(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              LastNpcThatCanSeePlayerSyncTime;                           // 0x0AF0(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_T20B[0x4];                                     // 0x0AF4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UTigerPhysicalInteraction*                   PhysicalInteractionObject;                                 // 0x0AF8(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class ATigerPlayer>                 OtherPhysicalInteractionPlayer;                            // 0x0B00(0x0008) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UTigerPassiveComponent*>              PassiveComponents;                                         // 0x0B08(0x0010) (ExportObject, ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	TMap<class UObject*, struct FTigerClanPassiveAndDefault> ClanPassivesMap;                                           // 0x0B18(0x0050) (ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	struct FTigerCharacterStatModification             CombinedPassiveStatChanges;                                // 0x0B68(0x00B4) (NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_37PT[0x4];                                     // 0x0C1C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UMaterialInterface*                          InvisibilityMaterial;                                      // 0x0C20(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInstanceDynamic*                    InvisibilityMaterialInstance;                              // 0x0C28(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTigerUIEnemyHealthBar*                      InWorldHealthBar;                                          // 0x0C30(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              AirTimeRequiredForSuspiciousLanding;                       // 0x0C38(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                                     GroundBelowDeathLocation;                                  // 0x0C3C(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bWasDiablerized;                                           // 0x0C48(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_BJJP[0x3];                                     // 0x0C49(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FName                                       DiablerizeAnimationName;                                   // 0x0C4C(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FName                                       GetDiablerizedAnimationName;                               // 0x0C54(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FName                                       ReviveTeammateAnimationName;                               // 0x0C5C(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FName                                       GettingRevivedAnimationName;                               // 0x0C64(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_AFFB[0x4];                                     // 0x0C6C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UParticleSystem*                             EnhancedReviveParticleEffect;                              // 0x0C70(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UParticleSystemComponent*                    RegenerateComponent;                                       // 0x0C78(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FName                                       RegenerateSpawnRateParam;                                  // 0x0C80(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              RegenerateRemainingDownTimeMultiplier;                     // 0x0C88(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              EnhancedReviveParticleEffectLength;                        // 0x0C8C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_FS9X[0x4];                                     // 0x0C90(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              TimeToGetInPositionForPhysicalInteraction;                 // 0x0C94(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              ReviveHealthPercentage;                                    // 0x0C98(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              ReviveHealth;                                              // 0x0C9C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bUsePercentReviveHealth;                                   // 0x0CA0(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_6Q8T[0x3];                                     // 0x0CA1(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              PhysicalInteractionTimeLeft;                               // 0x0CA4(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_1MI0[0x8];                                     // 0x0CA8(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UAkAudioEvent*                               RevivedAudioEvent;                                         // 0x0CB0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FName                                       RegeneratingDoneAnimationName;                             // 0x0CB8(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              DamageDurationForInterrupt;                                // 0x0CC0(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              InterruptDamageLimits[0x2];                                // 0x0CC4(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      EnabledInterruptDamageLimits;                              // 0x0CCC(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_GQU4[0x3];                                     // 0x0CCD(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              DownedRangedDamageTakenMultiplier;                         // 0x0CD0(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              DownedMeleeDamageTakenMultiplier;                          // 0x0CD4(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              DownedDisciplineDamageTakenMultiplier;                     // 0x0CD8(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              DownedRegenRatePerSecond;                                  // 0x0CDC(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              DownedRegenRateReviveMultiplier;                           // 0x0CE0(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              DownedBaseHealth;                                          // 0x0CE4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              DownedRegenValue;                                          // 0x0CE8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_54L3[0x4];                                     // 0x0CEC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               bDownedRegenShouldTickInsideHolyIncense;                   // 0x0CF0(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bCanRegenerateInsideHolyIncense;                           // 0x0CF1(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_8NXZ[0x2];                                     // 0x0CF2(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              EffectUpdateTimeAfterInsideHolyIncense;                    // 0x0CF4(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              HardLandingSpeed;                                          // 0x0CF8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                OverlappingSuspiciousGuardVolumeCount;                     // 0x0CFC(0x0004) (Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                OverlappingThreatGuardVolumeCount;                         // 0x0D00(0x0004) (Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_RWSU[0x3C];                                    // 0x0D04(0x003C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              IsInCloseQuartersCombatCooldownTime;                       // 0x0D40(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              EnemyOutlineDistanceSquared;                               // 0x0D44(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              EnemyOutlineCombatDistanceSquared;                         // 0x0D48(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              ApproximateDownedHeightOffset;                             // 0x0D4C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_MX2Y[0x18];                                    // 0x0D50(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UAkAudioEvent*                               FallStartedAudioEvent;                                     // 0x0D68(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAkAudioEvent*                               FallEndedAudioEvent;                                       // 0x0D70(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAkAudioEvent*                               HitEnemyAudioEvent;                                        // 0x0D78(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAkAudioEvent*                               HitEnemyHeadAudioEvent;                                    // 0x0D80(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAkAudioEvent*                               ExtraHealthHitAudioEvent;                                  // 0x0D88(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAkAudioEvent*                               PickUpRangedWeaponAudioEvent;                              // 0x0D90(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAkAudioEvent*                               PickUpMeleeWeaponAudioEvent;                               // 0x0D98(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAkAudioEvent*                               PickUpAmmoAudioEvent;                                      // 0x0DA0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAkAudioEvent*                               PickUpConsumableAudioEvent;                                // 0x0DA8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAkAudioEvent*                               PickUpCollectibleAudioEvent;                               // 0x0DB0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAkAudioEvent*                               PickupArmorAudioEvent;                                     // 0x0DB8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAkAudioEvent*                               StartCrouchAudioEvent;                                     // 0x0DC0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAkAudioEvent*                               EndCrouchAudioEvent;                                       // 0x0DC8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAkAudioEvent*                               HalfHealthBreakAudioEvent;                                 // 0x0DD0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bOrientCharacterRotationToMovement;                        // 0x0DD8(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bRotateCharacterWithMeleeWeapon;                           // 0x0DD9(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_8DTB[0x6];                                     // 0x0DDA(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UClass*                                      PhysicalInteractionClass;                                  // 0x0DE0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class ATigerJudge>                  JudgeFeedTarget;                                           // 0x0DE8(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              JudgeFeedTimeSeconds;                                      // 0x0DF0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_3DEF[0x4];                                     // 0x0DF4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FName>                               RangedHitMontageNames;                                     // 0x0DF8(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FName                                       TransitionParameterName;                                   // 0x0E08(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticMeshComponent*                        TempProp;                                                  // 0x0E10(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      CharmedCharacters[0x50];                                   // 0x0E18(0x0050) UNKNOWN PROPERTY: SetProperty
	bool                                               bIsDowned;                                                 // 0x0E68(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_BH5Q[0x53];                                    // 0x0E69(0x0053) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               bIsInGhostMode;                                            // 0x0EBC(0x0001) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_YZMV[0x3B];                                    // 0x0EBD(0x003B) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               bIsScouted;                                                // 0x0EF8(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bIsInAssaultedArea;                                        // 0x0EF9(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_YPTF[0x6];                                     // 0x0EFA(0x0006) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerPlayer");
		return ptr;
	}



	void UpdateScoutedMeshVisiblity(float InVisibility);
	void UpdateHuntingKnifeEffectParameters(float StrengthFromDistance, float StrengthFromKillings);
	void UpdateHolyIncenseEffect(float InDeltaTime);
	void UpdateArchetypePassiveActiveState();
	void TriggerPlayerEvent(Tiger_ETigerPlayerEvent Event, class ATigerCharacter* EventTiedCharacter);
	void ShowUIFX();
	bool ShouldUseFootIk();
	bool ShouldShowRecentDamage();
	void SetDebugAppearance(const struct FString& AppearanceText);
	void Server_UpdateCameraRotation(const struct FTigerCompressedRotation& CompressedRotation);
	void Server_SwitchControllerMove(bool bInOrientCharacterToMovement);
	void Server_SetDebugCharacterData(const struct FString& ClanText, int PowerKitIndex, const struct FString& GenderText);
	void Server_PickUpItemFromCluster(class ATigerItemCluster* InItemCluster, uint32_t InItemClusterUID);
	void Server_GetItemFromLootUI(class ATigerLootBox* LootBox, class UTigerItemAsset* Item, int Count, Tiger_ETigerTelemetryItemSourceID InItemSourceID);
	void Server_Cheat_Walk();
	void Server_Cheat_Ghost(bool bForce);
	void Server_Cheat_Fly();
	void Server_AbortMeleeAnimation();
	void RemoveNPCThatLostSightOfPlayerFromList(class ATigerBaseNPC* InNpc);
	void PlayHitAudio(bool bIsHeadShot);
	void PlayExtraHealthHitAudio();
	void OnWallJump(const struct FVector& InVelocity);
	void OnWallGrindStarted(const struct FVector& InVelocity);
	void OnWallGrindEnded(const struct FVector& InVelocity);
	void OnTigerMovementModeChanged(TEnumAsByte<Engine_EMovementMode> PrevMovementMode, Tiger_ETigerMovementMode PrevCustomMode, TEnumAsByte<Engine_EMovementMode> NewMovementMode, Tiger_ETigerMovementMode NewCustomMode);
	void OnSuperIsReady();
	void OnStoppedBeingGroupMember();
	void OnStoppedAimingCameraTransition();
	void OnStartedPhysicalInteraction(class UClass* PhysInteractionClass, bool bIsTargetPlayer);
	void OnStartedAimingCameraTransition();
	void OnSlidingStarted(const struct FVector& InVelocity);
	void OnSlidingEnded(const struct FVector& InVelocity);
	void OnSlideJump(const struct FVector& InVelocity);
	void OnShieldDepleted(class ATigerPlayer* InInstigator);
	void OnRep_TraversalState();
	void OnRep_PowerKit();
	void OnRep_PlayerClan();
	void OnRep_GotDowned(bool bWasDowned);
	void OnRep_EnteredGhostMode(bool bWasInGhostMode);
	void OnRainAmountSet(float RainAmount);
	void OnNoLongerScouted();
	void OnModEquipped();
	void OnMatchStateChanged(Tiger_ETigerMatchState InOldState, Tiger_ETigerMatchState InNewState);
	void OnLocalSprintStarted();
	void OnLocalSprintEnded();
	void OnLocalExitedIndoor();
	void OnLocalEnteredIndoor();
	void OnInterruptedPhysicalInteraction(class UClass* PhysInteractionClass, bool bIsTargetPlayer);
	void OnHardLanding(const struct FVector& InVelocity);
	void OnGotScouted();
	void OnGotPlayerState();
	void OnGoneBelowHalfHealth();
	void OnFinishedPhysicalInteraction(class UClass* PhysInteractionClass, bool bIsTargetPlayer);
	void OnExtraHealthDepleted();
	void OnDoubleJump(const struct FVector& Direction);
	void OnDodgeRecovery(bool IsControllingPlayer, const struct FVector_NetQuantizeNormal& LaunchDirection, unsigned char DodgeStage);
	void OnDiablerizedFinished();
	void OnDamageTaken(float DamageTaken, class AActor* DamageInstigator);
	void OnClimbStarted(const struct FVector& InVelocity);
	void OnClimbEnded(const struct FVector& InVelocity);
	void OnBecameSpectator();
	void OnBecameGroupMember();
	void OnAboutToBeHitByDisplacement();
	void Multicast_UpdateBloodTrack(TArray<class UTigerBloodTrackPassiveConfig*> NewBloodTrack);
	void Multicast_StopJudgeFeedAnimation();
	void Multicast_ShieldDepleted(class ATigerPlayer* InInstigator);
	void Multicast_SetupForPhysicalInteraction(class UClass* InSetupPhysicalInteractionClass, class ATigerPlayer* InOtherPlayer);
	void Multicast_SetCharacterData(class UTigerPlayerClanData* NewClan, class UTigerPowerKit* NewPowerKit, TArray<class UTigerBloodTrackPassiveConfig*> NewBloodTrack);
	void Multicast_RespawnPlayerWithTransform(const struct FVector& InLocation, const struct FRotator& InRotation);
	void Multicast_RespawnPlayer();
	void Multicast_PlayJudgeFeedAnimation();
	void Multicast_PlayerDowned(unsigned char LastHitYawCompressed, unsigned char ActorYaw, bool bUseStaticDownEntryAnimation);
	void Multicast_OnSuccessfulPhysicalInteraction(bool bWasTargetPlayer);
	void Multicast_OnRegenerationDone();
	void Multicast_OnItemPickedUp(class UTigerItemAsset* InItemAsset);
	void Multicast_OnDamageTaken(float DamageAmount, class AActor* DamageInstigator);
	void Multicast_InterruptPhysicalInteraction();
	void Multicast_GuardBreak();
	void Multicast_ExtraHealthDepleted();
	void Multicast_ApplyWeaponVisibility(class UClass* WeaponClassToShow);
	bool LocalValidateItemPickupFromLootUI(class ATigerLootBox* LootBox, class UTigerItemAsset* Item, int Count);
	void LocalPlayerTick(float InDeltaSeconds);
	bool IsInPhysicalInteraction();
	bool IsInInvulnerableState();
	bool IsInGhostMode();
	bool IsIndoor();
	bool IsInDialogueInteraction();
	bool IsGroupMember(class ATigerPlayer* InOtherPlayer);
	bool IsGettingDiablerized();
	bool IsFeedingOnJudge();
	bool IsCharming(class ATigerCharacter* Character);
	bool IsBeingRevived();
	void IncrementShieldShaderCounter();
	void HideUIFX();
	bool HaveEnhancedReviveSpeed();
	bool HasRecentlyLanded(float WithinSeconds, float MinimumAirTime);
	bool HasPassiveByDataAsset(class UTigerPassiveConfig* InPassive);
	bool HasPassive(class UClass* InPassive);
	bool HasMaxKindredCharmCount();
	bool HasBeenInAirFor(float MinimumAirTime);
	void HandleAppearanceChange();
	float GetTimeInAir();
	class ATigerPlayerState* GetTigerPlayerState();
	class ATigerPlayerController* GetTigerPlayerController();
	float GetRemainingDownedTime(bool InIgnoreRevive);
	class UActorComponent* GetPassiveLogicByDataAsset(class UTigerPassiveConfig* InPassive);
	class UActorComponent* GetPassiveLogic(class UClass* InPassive);
	float GetJudgeFeedProgress();
	int8_t GetInitialProjectileReserveCountForClass(class UClass* InProjectileClass);
	struct FTigerInventoryStats GetCharacterInventoryStats();
	void EnableGhostMode(bool bGhostMode, bool bForce);
	bool DownedRegenShouldTickInsideHolyIncense();
	bool DiedHighAboveGround();
	void DecrementShieldShaderCounter();
	void Debug_Multicast_SendDummyData(TArray<int8_t> Data);
	void DeactivateHeightenedSenses();
	void Client_UpdateKindredCharmCount(int InKindredCharmCount);
	void Client_UpdateArchetypePassiveActiveState();
	void Client_SyncNpcsThatCanSeePlayer(TArray<struct FTigerNpcThatCanSeePlayerWrapper_Client> InNpcsThatCanSeePlayer, unsigned char InPlayerVisibilityToNpc);
	void Client_SetupForRevive(class ATigerPlayer* OtherPlayer, uint16_t CompressedDesiredFacing);
	void Client_SetupForDiablerize(class ATigerPlayer* OtherPlayer, uint16_t CompressedDesiredFacing);
	void Client_SetAsScouted(float Time);
	void Client_RemoveBestialTracking(class APlayerState* Player);
	void Client_PostGunSound(class UAkAudioEvent* InAudioEvent, const struct FVector& InSoundLocation);
	void Client_PlayerDowned(unsigned char LastHitYawCompressed, unsigned char ActorYaw, bool bUseStaticDownEntryAnimation);
	void Client_OnTakeDamage(float NewHealth, float TotalDamageTaken, const struct FDamageEvent& DamageEvent, class AActor* DamageCauser);
	void Client_InterruptPhysicalInteraction();
	void Client_InitialBestialTrackingData(class APlayerState* Player, TArray<struct FTigerPlayerSavedLocation> Locations);
	void Client_HitPlayerGoneBelowHalfHealth();
	void Client_GuardBreak();
	void Client_GoneBelowHalfHealth();
	void Client_AddBestialTrackingData(class APlayerState* Player, const struct FTigerPlayerSavedLocation& Location);
	void Client_AboutToBeHitByDisplacement();
	bool CanUseConsumable(class UTigerConsumableAsset* InConsumable);
	bool CanNPCSeePlayer(class ATigerBaseNPC* TigerNPC, bool bIgnoreInvisibility);
	bool CanEmote();
	bool CanBeRevivedBy(class ATigerPlayer* Reviver);
	bool CanBeDiablerizedBy(class ATigerPlayer* Diablerist);
	void AddNPCThatSawPlayerToList(class ATigerBaseNPC* InNpc);
	void ActivateHuntingKnifeEffect(bool bActivate);
	void ActivateHeightenedSenses();
};

// Class Tiger.TigerActionBuffer
// 0x0088 (FullSize[0x00B0] - InheritedSize[0x0028])
class UTigerActionBuffer : public UObject
{
public:
	float                                              BufferTimes[0x11];                                         // 0x0028(0x0044) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      MaxNumberOfBufferedActions;                                // 0x006C(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_UTOO[0x3];                                     // 0x006D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class UTigerBufferedAction*>                BufferedActions;                                           // 0x0070(0x0010) (ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<class UTigerBufferedAction*>                QueuedActions;                                             // 0x0080(0x0010) (ZeroConstructor, NativeAccessSpecifierPrivate)
	TWeakObjectPtr<class ATigerPlayerController>       Owner;                                                     // 0x0090(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_Q71Z[0x18];                                    // 0x0098(0x0018) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerActionBuffer");
		return ptr;
	}



};

// Class Tiger.TigerPlayerAnimInstance
// 0x0178 (FullSize[0x0530] - InheritedSize[0x03B8])
class UTigerPlayerAnimInstance : public UTigerAnimInstance
{
public:
	class UAnimMontage*                                CurrentDownedMontage;                                      // 0x03B8(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTigerHandIkWallTraceData                   HandIkTraceDataWhenWallHanging;                            // 0x03C0(0x0058) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, Protected, NativeAccessSpecifierProtected)
	TArray<struct FTigerAnimMetaData>                  CurrentMontageMetaData;                                    // 0x0418(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<class UAnimMetaData*>                       CurrentAnimNodeMetaData;                                   // 0x0428(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<class UAnimMetaData*>                       CurrentMetaDataFromProxy;                                  // 0x0438(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	class UCurveFloat*                                 CurrentTurnStartCurve;                                     // 0x0448(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bIsEmoting;                                                // 0x0450(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bIsJumping;                                                // 0x0451(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bIsCrouching;                                              // 0x0452(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bIsClimbing;                                               // 0x0453(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bIsFalling;                                                // 0x0454(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bIsSliding;                                                // 0x0455(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bIsSprinting;                                              // 0x0456(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bIsLedgeGrabbing;                                          // 0x0457(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bWasSprintingWhenStartingJump;                             // 0x0458(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_829V[0x3];                                     // 0x0459(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              SprintMultiplier;                                          // 0x045C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              ClimbPitch;                                                // 0x0460(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bWasLastLandingHard;                                       // 0x0464(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bMeleeSwingRecoveryHasDisabledRootMotion;                  // 0x0465(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bIsOnGroundDuringAerialAttack;                             // 0x0466(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_KVO9[0x1];                                     // 0x0467(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              Acceleration;                                              // 0x0468(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              FloorHeightSensitivty;                                     // 0x046C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_633O[0x4];                                     // 0x0470(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               bIsProbablyTouchingFloor;                                  // 0x0474(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bHasVanishBuff;                                            // 0x0475(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bIsInCombat;                                               // 0x0476(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bIsDowned;                                                 // 0x0477(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bIsInWallJump;                                             // 0x0478(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bWallJumpIsAvailable;                                      // 0x0479(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	Tiger_ETigerDisciplinesEnum                        ActiveMontageDisciplineType;                               // 0x047A(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bAllowRotationLerpDuringDisciplineMontage;                 // 0x047B(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                CurrentJumpCount;                                          // 0x047C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FName                                       DownedMontageNames[0x4];                                   // 0x0480(0x0020) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FName                                       StaticEntryToDownedMontageName;                            // 0x04A0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	Shark_ESharkFourWayDirection                       AirDashDirection;                                          // 0x04A8(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	Shark_ESharkFourWayDirection                       WallJumpDirection;                                         // 0x04A9(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	Shark_ESharkFourWayDirection                       WallJumpAnticipationDirection;                             // 0x04AA(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_8GSV[0x1];                                     // 0x04AB(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              WallGrindRotationFromWallInDegrees;                        // 0x04AC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              CameraRelativeWallJumpCosineAngle;                         // 0x04B0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              WallJumpPlayerFacingYaw;                                   // 0x04B4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              AirDashAngleInDegrees;                                     // 0x04B8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	Tiger_ETigerWallJumpAnimationState                 WallJumpAnimationState;                                    // 0x04BC(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_V4PY[0x3];                                     // 0x04BD(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FTigerPlayerAnimationSets                   AnimationsSetsByGender[0x2];                               // 0x04C0(0x0030) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	bool                                               bIsInTurnStart;                                            // 0x04F0(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bTurnStartIsOnCooldown;                                    // 0x04F1(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bAdjustClimbSpeedByAnimation;                              // 0x04F2(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_7O1E[0x1];                                     // 0x04F3(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              SurfaceCompensationInterpSpeed;                            // 0x04F4(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              SurfaceCompensationPitch;                                  // 0x04F8(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              SurfaceCompensationRoll;                                   // 0x04FC(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                CurrentLodLevel;                                           // 0x0500(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_IOJP[0x2C];                                    // 0x0504(0x002C) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerPlayerAnimInstance");
		return ptr;
	}



	void OnWantsToStartRangedAttack();
	bool IsPlayingDisciplineMontage();
	bool IsAllowingRotationLerpDuringCurrentDisciplineMontage();
	struct FVector GetPlayerDesiredMovement(bool bShowDebug);
	class ATigerPlayer* GetPlayer();
	float GetBlendingInFirePoseTimeLeft();
	void GetAllActiveMetadata(TArray<class UAnimMetaData*> OutActiveMetaData);
	void ClearWallJumpAnimationState();
	void CalculateTurnInPlace(float InDeltaSeconds, float InAimYawDelta, bool bInCanEnterTurnInPlace, bool* bOutShouldTriggerTurnInPlace);
	void CalculateFootOffsetTargets(const struct FName& InFootBoneName, float InTraceLengthAboveFoot, float InTraceLengthBelowFoot, const struct FVector& InMinLimits, const struct FVector& InMaxLimits, TEnumAsByte<Engine_ETraceTypeQuery> InTraceChannel, bool bInShowTraces, struct FRotator* OutFootRotation, struct FVector* OutFootOffset);
};

// Class Tiger.TigerPlayerAppearanceCache
// 0x0068 (FullSize[0x0290] - InheritedSize[0x0228])
class ATigerPlayerAppearanceCache : public AActor
{
public:
	class UTigerCharCustomizationComponent*            CharacterCustomizationComponent;                           // 0x0228(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTigerCharacterMeshManager*                  MeshManager;                                               // 0x0230(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USkeletalMeshComponent*                      MeshComponents[0xB];                                       // 0x0238(0x0058) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerPlayerAppearanceCache");
		return ptr;
	}



};

// Class Tiger.TigerPlayerBeingLoggedInToServer
// 0x00D0 (FullSize[0x00F8] - InheritedSize[0x0028])
class UTigerPlayerBeingLoggedInToServer : public UObject
{
public:
	class UTigerGroupCoordinator*                      GroupCoordinator;                                          // 0x0028(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_CZGN[0xC8];                                    // 0x0030(0x00C8) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerPlayerBeingLoggedInToServer");
		return ptr;
	}



};

// Class Tiger.TigerPlayerBotsSubsystem
// 0x0050 (FullSize[0x0080] - InheritedSize[0x0030])
class UTigerPlayerBotsSubsystem : public UGameInstanceSubsystem
{
public:
	unsigned char                                      UnknownData_EB6C[0x50];                                    // 0x0030(0x0050) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerPlayerBotsSubsystem");
		return ptr;
	}



};

// Class Tiger.TigerPlayerBotSubsystemSettings
// 0x0008 (FullSize[0x0040] - InheritedSize[0x0038])
class UTigerPlayerBotSubsystemSettings : public UDeveloperSettings
{
public:
	bool                                               bUseSplitscreen;                                           // 0x0038(0x0001) (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_XHOY[0x7];                                     // 0x0039(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerPlayerBotSubsystemSettings");
		return ptr;
	}



};

// Class Tiger.TigerBufferedActionBlock
// 0x0000 (FullSize[0x0048] - InheritedSize[0x0048])
class UTigerBufferedActionBlock : public UTigerBufferedAction
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerBufferedActionBlock");
		return ptr;
	}



};

// Class Tiger.TigerBufferedActionCrouch
// 0x0000 (FullSize[0x0048] - InheritedSize[0x0048])
class UTigerBufferedActionCrouch : public UTigerBufferedAction
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerBufferedActionCrouch");
		return ptr;
	}



};

// Class Tiger.TigerBufferedActionDisciplineBase
// 0x0008 (FullSize[0x0050] - InheritedSize[0x0048])
class UTigerBufferedActionDisciplineBase : public UTigerBufferedAction
{
public:
	unsigned char                                      UnknownData_C903[0x8];                                     // 0x0048(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerBufferedActionDisciplineBase");
		return ptr;
	}



};

// Class Tiger.TigerBufferedActionDisciplineArchetype
// 0x0000 (FullSize[0x0050] - InheritedSize[0x0050])
class UTigerBufferedActionDisciplineArchetype : public UTigerBufferedActionDisciplineBase
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerBufferedActionDisciplineArchetype");
		return ptr;
	}



};

// Class Tiger.TigerBufferedActionDisciplineArchetypeReleased
// 0x0000 (FullSize[0x0050] - InheritedSize[0x0050])
class UTigerBufferedActionDisciplineArchetypeReleased : public UTigerBufferedActionDisciplineBase
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerBufferedActionDisciplineArchetypeReleased");
		return ptr;
	}



};

// Class Tiger.TigerBufferedActionDisciplineClan
// 0x0000 (FullSize[0x0050] - InheritedSize[0x0050])
class UTigerBufferedActionDisciplineClan : public UTigerBufferedActionDisciplineBase
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerBufferedActionDisciplineClan");
		return ptr;
	}



};

// Class Tiger.TigerBufferedActionDisciplineClanReleased
// 0x0000 (FullSize[0x0050] - InheritedSize[0x0050])
class UTigerBufferedActionDisciplineClanReleased : public UTigerBufferedActionDisciplineBase
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerBufferedActionDisciplineClanReleased");
		return ptr;
	}



};

// Class Tiger.TigerBufferedActionDisciplineWeaponAbility
// 0x0000 (FullSize[0x0050] - InheritedSize[0x0050])
class UTigerBufferedActionDisciplineWeaponAbility : public UTigerBufferedActionDisciplineBase
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerBufferedActionDisciplineWeaponAbility");
		return ptr;
	}



};

// Class Tiger.TigerBufferedActionDisciplineWeaponAbilityReleased
// 0x0000 (FullSize[0x0050] - InheritedSize[0x0050])
class UTigerBufferedActionDisciplineWeaponAbilityReleased : public UTigerBufferedActionDisciplineBase
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerBufferedActionDisciplineWeaponAbilityReleased");
		return ptr;
	}



};

// Class Tiger.TigerBufferedActionDodge
// 0x0000 (FullSize[0x0048] - InheritedSize[0x0048])
class UTigerBufferedActionDodge : public UTigerBufferedAction
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerBufferedActionDodge");
		return ptr;
	}



};

// Class Tiger.TigerBufferedActionJump
// 0x0000 (FullSize[0x0048] - InheritedSize[0x0048])
class UTigerBufferedActionJump : public UTigerBufferedAction
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerBufferedActionJump");
		return ptr;
	}



};

// Class Tiger.TigerBufferedActionMelee
// 0x0000 (FullSize[0x0048] - InheritedSize[0x0048])
class UTigerBufferedActionMelee : public UTigerBufferedAction
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerBufferedActionMelee");
		return ptr;
	}



};

// Class Tiger.TigerBufferedActionRanged
// 0x0000 (FullSize[0x0048] - InheritedSize[0x0048])
class UTigerBufferedActionRanged : public UTigerBufferedAction
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerBufferedActionRanged");
		return ptr;
	}



};

// Class Tiger.TigerBufferedActionReload
// 0x0000 (FullSize[0x0048] - InheritedSize[0x0048])
class UTigerBufferedActionReload : public UTigerBufferedAction
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerBufferedActionReload");
		return ptr;
	}



};

// Class Tiger.TigerBufferedActionSprint
// 0x0000 (FullSize[0x0048] - InheritedSize[0x0048])
class UTigerBufferedActionSprint : public UTigerBufferedAction
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerBufferedActionSprint");
		return ptr;
	}



};

// Class Tiger.TigerBufferedActionSwitchWeapon
// 0x0008 (FullSize[0x0050] - InheritedSize[0x0048])
class UTigerBufferedActionSwitchWeapon : public UTigerBufferedAction
{
public:
	unsigned char                                      UnknownData_PXPU[0x8];                                     // 0x0048(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerBufferedActionSwitchWeapon");
		return ptr;
	}



};

// Class Tiger.TigerBufferedActionToggleHSenses
// 0x0000 (FullSize[0x0048] - InheritedSize[0x0048])
class UTigerBufferedActionToggleHSenses : public UTigerBufferedAction
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerBufferedActionToggleHSenses");
		return ptr;
	}



};

// Class Tiger.TigerPlayerCameraManager
// 0x0140 (FullSize[0x2900] - InheritedSize[0x27C0])
class ATigerPlayerCameraManager : public APlayerCameraManager
{
public:
	float                                              MinSpringArmLengthWhenLookingUp;                           // 0x27C0(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              BaseTurnRate;                                              // 0x27C4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              BaseLookUpRate;                                            // 0x27C8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_0N9Q[0x4];                                     // 0x27CC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UClass*                                      CameraPresetsAdditive[0x4];                                // 0x27D0(0x0020) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMatineeCameraShake*                         AdditiveCameraShakeInstances[0x4];                         // 0x27F0(0x0020) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMatineeCameraShake*                         CurrentPresetShakeBehaviour;                               // 0x2810(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTigerFullscreenFXManager*                   FullscreenFXManager;                                       // 0x2818(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCurveFloat*                                 RecoilResetCurve;                                          // 0x2820(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCurveFloat*                                 RecoilResetSpeedCurve;                                     // 0x2828(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              TimeBeforeRecoilReset;                                     // 0x2830(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_JGHJ[0x4];                                     // 0x2834(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UCurveFloat*                                 VerticalRecoilCurve;                                       // 0x2838(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCurveFloat*                                 HorizontalRecoilCurve;                                     // 0x2840(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ATigerPlayer*                                TigerPlayer;                                               // 0x2848(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ATigerBloodVeinPawn*                         BloodVeinPawn;                                             // 0x2850(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ATigerPlayerController*                      TigerPlayerController;                                     // 0x2858(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_0IEB[0x8];                                     // 0x2860(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UCurveFloat*                                 DefaultTransitionCurve;                                    // 0x2868(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTigerCameraPreset*                          CameraPresetOverride;                                      // 0x2870(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTigerCameraPreset*                          CameraPresetIndoorOverride;                                // 0x2878(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTigerSpringArmComponent*                    CurrentSpringArm;                                          // 0x2880(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTigerCameraBehavior*                        CurrentCameraBehavior;                                     // 0x2888(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTigerCameraPreset*                          PreviousCameraPreset;                                      // 0x2890(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_8LOG[0x38];                                    // 0x2898(0x0038) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class UTigerCameraBehavior*>                CachedCameraBehaviors;                                     // 0x28D0(0x0010) (ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	TArray<class UTigerAdditiveCameraBehavior*>        AdditiveCameraBehaviors;                                   // 0x28E0(0x0010) (ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_9I0X[0x10];                                    // 0x28F0(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerPlayerCameraManager");
		return ptr;
	}



	class UCurveFloat* SelectPresetTransitionCurve(class UTigerCameraPreset* InPreviousPreset, class UTigerCameraPreset* InNewPreset);
	void OverrideCameraPreset(class UClass* CameraPresetClass, float Duration, class UClass* CameraPresetClassIndoor);
	void OnChangingCameraPreset(class UClass* InCurrentCameraPresetClass, class UClass* InNewCameraPresetClass);
	bool HasActiveCameraAnimations();
	class AActor* GetViewTargetBlueprint();
	void ForceFinishCurrentCameraTransition();
	class UClass* EvaluateCameraPreset();
};

// Class Tiger.TigerPlayerClanData
// 0x0130 (FullSize[0x0160] - InheritedSize[0x0030])
class UTigerPlayerClanData : public UDataAsset
{
public:
	struct FText                                       DISPLAYNAME;                                               // 0x0030(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	Tiger_ETigerClan                                   ClanType;                                                  // 0x0048(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_MD4E[0x7];                                     // 0x0049(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UTexture2D*                                  IconTexture;                                               // 0x0050(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                                  LargeIconTexture;                                          // 0x0058(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      CharacterCreationStartingOutfitPath[0x50];                 // 0x0060(0x0050) UNKNOWN PROPERTY: SoftClassProperty
	TArray<class UClass*>                              BodyTypeItems;                                             // 0x00B0(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<class UTigerPowerKit*>                      PowerKits;                                                 // 0x00C0(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class UClass*                                      UtilityPower;                                              // 0x00D0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                                  UtilityPowerIcon;                                          // 0x00D8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundBase*                                  StaggeredByAttackSound;                                    // 0x00E0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      FallShakeLowDrop;                                          // 0x00E8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      FallShakeHighDrop;                                         // 0x00F0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTigerAnimationSetAsset*                     ClanAnimationSet[0x2];                                     // 0x00F8(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bBloodDropGlows;                                           // 0x0108(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_DBDI[0x7];                                     // 0x0109(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TMap<Tiger_ETigerClan, float>                      ClanSpecificDiablerizeOffsets;                             // 0x0110(0x0050) (Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerPlayerClanData");
		return ptr;
	}



};

// Class Tiger.TigerItemCheatCommandsAsset
// 0x0050 (FullSize[0x0080] - InheritedSize[0x0030])
class UTigerItemCheatCommandsAsset : public UDataAsset
{
public:
	TMap<struct FString, class UTigerItemAsset*>       Commands;                                                  // 0x0030(0x0050) (Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerItemCheatCommandsAsset");
		return ptr;
	}



};

// Class Tiger.TigerPlayerController
// 0x0630 (FullSize[0x0BA8] - InheritedSize[0x0578])
class ATigerPlayerController : public APlayerController
{
public:
	struct FScriptMulticastDelegate                    OnPersistentPlayerInitialisedEvent;                        // 0x0578(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnGhostModeSet;                                            // 0x0588(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnBeginPlay;                                               // 0x0598(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnPlayerStateCreated;                                      // 0x05A8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnClientDownedEnemyPlayer;                                 // 0x05B8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnCancelPsoCaching;                                        // 0x05C8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_RXZZ[0x30];                                    // 0x05D8(0x0030) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class ATigerLocalAIController*                     LocalAIController;                                         // 0x0608(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      LocalAIControllerClass;                                    // 0x0610(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ATigerLocalAIControllerBase*                 GameplayBenchmarkController;                               // 0x0618(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      GameplayBenchmarkControllerClass;                          // 0x0620(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_GHCH[0x10];                                    // 0x0628(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UAkAudioEvent*                               MusicAudioEvent;                                           // 0x0638(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                      SeamlessAudioActor;                                        // 0x0640(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_WNNN[0x18];                                    // 0x0648(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UTigerUserInputBinding*                      UserInputBindings;                                         // 0x0660(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnUseGamepadChanged;                                       // 0x0668(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	bool                                               bSilentMusic;                                              // 0x0678(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_Q6C1[0x3];                                     // 0x0679(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                RedGasAkEventID;                                           // 0x067C(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                CloseToRedGasAkEventID;                                    // 0x0680(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_07QH[0x4];                                     // 0x0684(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnItemPickedUp;                                            // 0x0688(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnInventoryToggle;                                         // 0x0698(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnInitialLevelStreamingCompletedDelegate;                  // 0x06A8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UTigerResurrectComponent*                    ResurrectComponent;                                        // 0x06B8(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ATigerClientInteractiveSpawner*              ClientSpawner;                                             // 0x06C0(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_LPBV[0x8];                                     // 0x06C8(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UClass*                                      SpectatingClass;                                           // 0x06D0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTigerMapInfoDataAsset*                      MapInfoAsset;                                              // 0x06D8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UClass*                                      PlayerMapMarkerClass;                                      // 0x06E0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UClass*                                      UserInputSettingsClass;                                    // 0x06E8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UClass*                                      RevealedItemMapMarkerWidgetClass;                          // 0x06F0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UClass*                                      RevealedItemCompassObjectWidgetClass;                      // 0x06F8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UClass*                                      QuestMapMarkerClass;                                       // 0x0700(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              ControlRotationSpeedStandingStill;                         // 0x0708(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_XPZX[0x4];                                     // 0x070C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UCurveFloat*                                 ControlRotationSpeedMovingCurve;                           // 0x0710(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              ControlRotationSpeedMoving;                                // 0x0718(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              MinControlRotationSpeedMoving;                             // 0x071C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              InstantControlRotationTimeThreshold;                       // 0x0720(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              CycleWeaponsHolsterHoldTime;                               // 0x0724(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              SprintCancelTimeOnGamepad;                                 // 0x0728(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              SprintGamepadInputLimit;                                   // 0x072C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              SprintGamepadInputAngle;                                   // 0x0730(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_103W[0x4];                                     // 0x0734(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              RandomizedDamageScale;                                     // 0x0738(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              MouseScrollWeaponChangeCooldown;                           // 0x073C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_BLPI[0x4];                                     // 0x0740(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              TigerStuckTriggerZ;                                        // 0x0744(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              ClimbingInputZCutOff;                                      // 0x0748(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              MinimumUpwardClimbAngle;                                   // 0x074C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              MaximumSidewaysClimbDeviation;                             // 0x0750(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              ClimbingOverHangZCutOff;                                   // 0x0754(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              ClimbingHalfAngleInputDifferenceAllowed;                   // 0x0758(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bOnlyStartClimbIfLookingAtWall;                            // 0x075C(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_4FKV[0x3];                                     // 0x075D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UAkAudioEvent*                               TargetDownedAudioEvent;                                    // 0x0760(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAkAudioEvent*                               PlayerDownedAudioEvent;                                    // 0x0768(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAkAudioEvent*                               GuidingAudioEvent;                                         // 0x0770(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              GuidingAudioCooldown;                                      // 0x0778(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_ENOT[0x4];                                     // 0x077C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UCurveFloat*                                 AimAtEnemyGamepadRotationMultiplierCurve;                  // 0x0780(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCurveFloat*                                 AimAtEnemyGamepadRotationMultiplierCurveAiming;            // 0x0788(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCurveFloat*                                 GamepadCameraYawStrengthCurve;                             // 0x0790(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCurveFloat*                                 GamepadCameraPitchStrengthCurve;                           // 0x0798(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCurveFloat*                                 GamepadRangedCameraYawStrengthCurve;                       // 0x07A0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCurveFloat*                                 GamepadRangedCameraPitchStrengthCurve;                     // 0x07A8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCurveFloat*                                 GamepadAimingCameraYawStrengthCurve;                       // 0x07B0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCurveFloat*                                 GamepadAimingCameraPitchStrengthCurve;                     // 0x07B8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCurveFloat*                                 GamepadCameraYawAccelerationCurve;                         // 0x07C0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCurveFloat*                                 GamepadCameraPitchAccelerationCurve;                       // 0x07C8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCurveFloat*                                 GamepadRangedCameraYawAccelerationCurve;                   // 0x07D0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCurveFloat*                                 GamepadRangedCameraPitchAccelerationCurve;                 // 0x07D8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCurveFloat*                                 GamepadAimingCameraYawAccelerationCurve;                   // 0x07E0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCurveFloat*                                 GamepadAimingCameraPitchAccelerationCurve;                 // 0x07E8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              DisciplineWeaponAbilityTriggerWindow;                      // 0x07F0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              HeightenedSensesPadTriggerwindow;                          // 0x07F4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              ConsumableWheelTriggerWindow;                              // 0x07F8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_RPK9[0x4];                                     // 0x07FC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UForceFeedbackEffect*                        DamageTakenForceFeedback;                                  // 0x0800(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              DamageTakenForceFeedbackCooldown;                          // 0x0808(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_2JV0[0x4];                                     // 0x080C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UForceFeedbackEffect*                        DeathForceFeedback;                                        // 0x0810(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UForceFeedbackEffect*                        DownedForceFeedback;                                       // 0x0818(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UForceFeedbackEffect*                        SoftLandingForceFeedback;                                  // 0x0820(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UForceFeedbackEffect*                        HeavyLandingForceFeedback;                                 // 0x0828(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ATigerSpectatorPawn*                         TigerSpectatorPawn;                                        // 0x0830(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              HeavyAttackTriggerTime;                                    // 0x0838(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              HeavyAttackTriggerTimeGamepad;                             // 0x083C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	Tiger_ETigerMusicAudioState                        MusicAudioState;                                           // 0x0840(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	Tiger_ETigerBlindedAudioState                      BlindedAudioState;                                         // 0x0841(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	Tiger_ETigerIndoorAudioState                       IndoorAudioState;                                          // 0x0842(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	Tiger_ETigerMainMenuAudioState                     MainMenuAudioState;                                        // 0x0843(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	Tiger_ETigerAmbienceAudioState                     AmbienceAudioState;                                        // 0x0844(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	Tiger_ETigerCombatAudioState                       CombatAudioState;                                          // 0x0845(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	Tiger_ETigerFeedingAudioState                      FeedingAudioState;                                         // 0x0846(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_UA1S[0x1];                                     // 0x0847(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              AssaultBorderMusicDistance;                                // 0x0848(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              RedGasLastWaveAssaultBorderMusicDistance;                  // 0x084C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              RedGasLastStageAssaultBorderMusicDistance;                 // 0x0850(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              AmbientMusicTimer;                                         // 0x0854(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              NoAmbientMusicTimer;                                       // 0x0858(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              NoAmbienceMusicTimerInterval;                              // 0x085C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              AmbientMusicTimerInterval;                                 // 0x0860(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector2D                                   RightThumbstick;                                           // 0x0864(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class ATigerPaperDoll>              PaperDoll;                                                 // 0x086C(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_YG9O[0x4];                                     // 0x0874(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UTigerInteractionControllerComponent*        InteractionControllerComponent;                            // 0x0878(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTigerClientSeasonalRewardCollection*        ClientSeasonalRewardCollection;                            // 0x0880(0x0008) (Edit, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTigerClientChallengesCollection*            ClientChallengesCollection;                                // 0x0888(0x0008) (Edit, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTigerThrallSystem*                          ThrallComponent;                                           // 0x0890(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTigerCollectibleSystem*                     CollectibleComponent;                                      // 0x0898(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTigerQuestSystem*                           QuestComponent;                                            // 0x08A0(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTSSClientComponent*                         AntiCheatTssComponent;                                     // 0x08A8(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	Tiger_ETigerMusicAudioState                        OverrideMusicAudioState;                                   // 0x08B0(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_MK4S[0x7];                                     // 0x08B1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UClass*                                      ActionBufferClass;                                         // 0x08B8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTigerActionBuffer*                          ActionBuffer;                                              // 0x08C0(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_2Y0S[0x10];                                    // 0x08C8(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class ATigerPlayer*                                TigerPlayerPawn;                                           // 0x08D8(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_Z5IU[0x8];                                     // 0x08E0(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class ATigerBloodVeinPawn*                         TigerBloodVeinPawn;                                        // 0x08E8(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_TUSF[0x8];                                     // 0x08F0(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UTigerMapGameData*                           MapGameData;                                               // 0x08F8(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTigerInWorldIconController*                 InWorldIconController;                                     // 0x0900(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTigerPingControllerComponent*               PingControllerComponent;                                   // 0x0908(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTigerContextualHelpComponent*               ContextualHelpComponent;                                   // 0x0910(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTigerEmoteControllerComponent*              EmoteControllerComponent;                                  // 0x0918(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTigerChatComponent*                         ChatComponent;                                             // 0x0920(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_HT66[0x78];                                    // 0x0928(0x0078) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UTigerMapMarkerProxy*                        PlayerMapMarkerProxy;                                      // 0x09A0(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_FC81[0x8];                                     // 0x09A8(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UInputComponent*                             GhostInputComponent;                                       // 0x09B0(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UInputComponent*                             SpectateInputComponent;                                    // 0x09B8(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UInputComponent*                             HUDInputComponent;                                         // 0x09C0(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class ATigerWorldCompositionGrid*                  StreamingGrid;                                             // 0x09C8(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_NLKV[0x2];                                     // 0x09D0(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	Tiger_ETigerWeaponSlot                             PreviouslyEquippedRangedSlot;                              // 0x09D2(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_KGO2[0x41];                                    // 0x09D3(0x0041) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              MouseSidewaysSprintSafetyAngle;                            // 0x0A14(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              PitchSensitivityModifier;                                  // 0x0A18(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              YawSensitivityModifier;                                    // 0x0A1C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              PitchAccelerationDeadZone;                                 // 0x0A20(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              YawAccelerationDeadZone;                                   // 0x0A24(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              PitchRangedAccelerationDeadZone;                           // 0x0A28(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              YawRangedAccelerationDeadZone;                             // 0x0A2C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               bUndoAccelerationInDeadZone;                               // 0x0A30(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_RZWY[0x7];                                     // 0x0A31(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	unsigned char                                      NPCCheatCommandsAsset[0x28];                               // 0x0A31(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	class UTigerNPCCheatCommandsAsset*                 NPCCheatCommands;                                          // 0x0A60(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      ItemCheatCommandsAsset[0x28];                              // 0x0A68(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	class UTigerItemCheatCommandsAsset*                ItemCheatCommands;                                         // 0x0A90(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class ATigerNPCInstantSpawner*                     NpcCheatSpawner;                                           // 0x0A98(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTigerWheelWidget*                           CurrentWheelWidget;                                        // 0x0AA0(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTigerVendorComponent*                       ElysiumVendorComponent;                                    // 0x0AA8(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_2H8U[0x60];                                    // 0x0AB0(0x0060) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               bPawnRotatesWithCameraWhileIdle;                           // 0x0B10(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               bUseTurnInPlace;                                           // 0x0B11(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               bPrintRightGamepadAxis;                                    // 0x0B12(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_V61F[0x1D];                                    // 0x0B13(0x001D) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FText                                       KilledBloodHuntedPlayerText;                               // 0x0B30(0x0018) (Edit, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_KCJJ[0xC];                                     // 0x0B48(0x000C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              TimeUntilKeyIsHeld;                                        // 0x0B54(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_LD02[0x18];                                    // 0x0B58(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<TWeakObjectPtr<class ATigerSHPBMarker>>     DiscoveredSHPBMarkers;                                     // 0x0B70(0x0010) (ZeroConstructor, Transient, UObjectWrapper, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_CNFO[0x28];                                    // 0x0B80(0x0028) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerPlayerController");
		return ptr;
	}



	void WaitForPersistantPlayerStateInitialisation(const struct FScriptDelegate& OnLoaded);
	void UseWeaponAbility();
	void TryReload();
	void ToggleShowCombatStatus();
	void TigerTrackLocomotionData();
	void TigerToggleServerGunSoundRpcs();
	void TigerToggleOutlines();
	void TigerToggleElysiumMobility();
	void TigerToggleDebugWallGrind(bool bInShouldPrintVelocity, bool bInShowVisualDebug, bool bInDebugVFX, bool bInShowSimulation);
	void TigerToggleCrosshairDebug();
	void TigerToggleCharacterCard();
	void TigerTestSpawnMechanic();
	void TigerTakeDamage(float DamageAmount);
	void TigerSwitchCharacter(int InCharacterSlot);
	void TigerStuck(float DropHeightInMeters);
	void TigerStopServerProfiler();
	void TigerStopServerNetworkProfiler();
	void TigerStartServerProfiler(float Duration);
	void TigerStartServerNetworkProfiler(float InDuration);
	void TigerSpectate();
	void TigerSpawnBotsFromServer(uint32_t InNumberOfBotsToSpawn);
	void TigerSpawnBotsFromClient(uint32_t InNumberOfBotsToSpawn);
	void TigerSkipSpawnCountdownTimer();
	void TigerShowPlayers(int InShowPlayers);
	void TigerShowNPCToPlayerSightData(float InScreenDuration);
	void TigerShowJumpLength(float DebugDrawDuration);
	void TigerShowFreeRunningVolumes();
	void TigerShowDPS();
	void TigerShowCAPs(float DebugDrawDuration);
	void TigerSetServerRespawn(int RespawnType);
	void TigerSetSafeZoneMarginRelative(float InWidthRel, float InHeightRel);
	void TigerSetSafeZoneMarginPixel(float InWidthPix, float InHeightPix);
	void TigerSetPlayerIsReadyToPlay();
	void TigerSetMuteAudio(bool bInShouldMute);
	void TigerSetHolyIncenseSpeedMultiplier(float InSpeedMultiplier);
	void TigerSetHolyIncenseElapsedTime(float InTotalElapsedTime);
	void TigerSetBloodVeinMoveSpeedMultipliers(float InMainSpeedMultiplier, float InBranchSpeedMultiplier);
	void TigerServerLogSignificance();
	void TigerServerConsoleExec(const struct FString& InExecString);
	void TigerSendPlayerServerPose(float InInterval);
	void TigerSavePlayerLocation();
	void TigerRevive();
	void TigerResurrectMember(float InOffsetX, float InOffsetY, float InOffsetZ);
	void TigerRestoreMasquerade();
	void TigerResetDialogues();
	void TigerResetDialogueCategories();
	void TigerRebindBoundConsoleCommand(const struct FString& NewConsoleCommand);
	void TigerPrintTraversalState(float InScreenTime);
	void TigerPrintServerTickRate();
	void TigerPrintNumberOfPlayersInGame();
	void TigerPrintCurrentAnimationSetsUsed(float ScreenDuration);
	void TigerPlayerLocalBenchmarkEnable(bool bInNowEnabled);
	void TigerPlayerLocalAIEnable(bool bInNowEnabled);
	void TigerNextSpawn();
	void TigerLogState(bool bShouldLog);
	void TigerLogAllSyncedMasqueradeInstances(float InScreenDuration);
	void TigerLoadPlayerLocation();
	void TigerLoadLocalStoreConfig(Tiger_ETigerMetaStoreCategoryType InStoreCategoryType, const struct FString& InFilePath);
	void TigerKickMe();
	void TigerGetNpcCount();
	void TigerGetMovingNpcCount();
	void TigerFakeMatchmakingReady(const struct FString& InSoloOrSquadOfFour);
	void TigerEndMatch();
	void TigerEnableServerAutoStats();
	void TigerDumpLocomotionData();
	void TigerDisableGamepad();
	void TigerDeleteCharacterSlot(unsigned char InCharacterSlot);
	void TigerDebugTraversalStates(bool bInEnableTraversalDebugging, bool bInPrintStatesToScreen, float InDebugLedgeGrabTime);
	void TigerDebugPrintRootMotionFlags();
	void TigerDebugPreMatchState();
	void TigerDebugPlayerProjectilePooling(int InShouldShowPoolMovements);
	void TigerDebugLoadingStates();
	void TigerDebugHolyIncense();
	void TigerDebugGameFlowStates();
	void TigerDebugDrawNpcMovementRestrictionBounds(float InDebugDrawLifetime);
	void TigerDebugCharacterSpeed();
	void TigerDebugCharacterPath(float Duration);
	void TigerDeactivateMasqueradeConsequence(const struct FString& InConsequenceName);
	void TigerCancelPsoCaching__DelegateSignature();
	void TigerCameraUrl();
	void TigerBuildVersion();
	void TigerBuildScreenshotMap();
	void TigerBecomeBloodhunted();
	void TigerBackendUrl();
	void TigerAllBecomeBloodhunted();
	void TigerAddItem(const struct FString& ItemName, int Count);
	void TigerActivateMasqueradeConsequence(const struct FString& InConsequenceName);
	void StartAttackMouse();
	void StartAttackGamepad();
	void ShutdownServer();
	void ShowMouseCursor(bool bInShouldStopAlternateAction);
	bool ShouldPlayForceFeedback();
	void SetupAsBot(class ATigerPlayerState* inTigerPlayerState);
	void SetPlayerIsReadyToPlay();
	void SetInCinematic(bool bCinematicState);
	void SetHUDInputEnabled(bool bIsEnabled, bool bInShouldStopAlternateAction);
	void SetFogDensity(float Value);
	void SetActiveFindSessionInstance(class UTigerFindSessionAsync* FindSessionInstance);
	void Server_ToggleElysiumMobility();
	void Server_TigerTrackLocomotionData();
	void Server_TigerToggleServerGunSoundRpcs();
	void Server_TigerToggleDebugWallGrind(bool bInShouldPrintVelocity, bool bInShowVisualDebug, bool bInDebugVFX, bool bInShowSimulation);
	void Server_TigerTestSpawnMechanic();
	void Server_TigerTeleportPlayer(const struct FVector& Location, const struct FRotator& Rotation);
	void Server_TigerTakeDamage(float DamageAmount);
	void Server_TigerStuck(float DropHeightInMeters);
	void Server_TigerStopServerProfiler();
	void Server_TigerStopServerNetworkProfiler();
	void Server_TigerStartServerProfiler(float Duration);
	void Server_TigerStartServerNetworkProfiler(float InDuration);
	void Server_TigerSkipSpawnCountdownTimer();
	void Server_TigerShowNPCToPlayerSightData(float InScreenDuration);
	void Server_TigerShowCaps(float DebugDrawLength);
	void Server_TigerServerConsoleExec(const struct FString& InExecString);
	void Server_TigerSendPlayerServerPose(float InInterval);
	void Server_TigerRevive();
	void Server_TigerRestoreMasquerade();
	void Server_TigerPrintTraversalState(float InScreenTime);
	void Server_TigerPrintServerTickRate();
	void Server_TigerPrintNumberOfPlayersInGame();
	void Server_TigerNextSpawn();
	void Server_TigerLogSignificance();
	void Server_TigerLoadLocalStoreConfig(Tiger_ETigerMetaStoreCategoryType InStoreCategoryType, const struct FString& InFilePath);
	void Server_TigerEndMatch();
	void Server_TigerDumpLocomotionData();
	void Server_TigerDebugTraversalStates(bool bInEnableTraversalDebugging, bool bInPrintStatesToScreen, float InDebugLedgeGrabTime);
	void Server_TigerDebugPrematchState();
	void Server_TigerDebugLoadingStates();
	void Server_TigerDebugDrawPlayerGrid(float DebugDrawLifetime);
	void Server_TigerDebugDrawNpcMovementRestrictionBounds(float InDebugDrawLifetime);
	void Server_TigerDebugCharacterPath(float Duration);
	void Server_TigerDeactivateMasqueradeConsequence(const struct FString& InConsequenceName);
	void Server_TigerBecomeBloodhunted(bool bInAllPlayers);
	void Server_TigerAddItem(class UTigerItemAsset* ItemAsset, int RequestedCount, Tiger_ETigerTelemetryItemSourceID InItemSourceID);
	void Server_TigerActivateMasqueradeConsequence(const struct FString& InConsequenceName);
	void Server_TeleportToMapLocation(const struct FVector2D& Location);
	void Server_StopUsingConsumable();
	void Server_StopFireWeapon();
	void Server_StopBlocking();
	void Server_StopAiming();
	void Server_StartHeavySwing(bool bDisabledRootMotion);
	void Server_StartBlocking();
	void Server_StartAiming();
	void Server_Spectate();
	void Server_SpawnBots(int InNumberOfBotsToSpawn);
	void Server_ShutdownServer();
	void Server_SetRespawn(int RespawnType);
	void Server_SetPlayerIsReadyToPlay();
	void Server_SetMatchmakingID(int InMatchmakingID);
	void Server_SetBloodVeinMoveSpeedMultipliers(float InMainSpeedMultiplier, float InBranchSpeedMultiplier);
	void Server_SaveBloodTrack(TArray<class UTigerBloodTrackPassiveConfig*> NewBloodTrack);
	void Server_ResetDialogues();
	void Server_RequestNewSpawnLocation(const struct FVector& InDesiredSpawnLocation);
	void Server_ReloadWeapon();
	void Server_MarkDialogueAsRead(int InDialogueId, const struct FString& InNpcIdentifier, unsigned char InCategory, class ATigerBaseNPC* InteractingCharacter);
	void Server_LeaveMatchAndRequestMatchStats();
	void Server_KillSelf();
	void Server_KickMe();
	void Server_Jump();
	void Server_GhostFollowPrevPlayer();
	void Server_GhostFollowNextPlayer();
	void Server_GetNpcCount();
	void Server_GetMovingNpcCount();
	void Server_FireWeaponMulti(int InFirstProjectileId, const struct FVector_NetQuantize10& InPreviousCharacterLocation, TArray<struct FTigerFireProjectileDataInterpolated> InProjectiles);
	void Server_FireWeapon(int InProjectileId, const struct FVector_NetQuantize10& InPreviousCharacterLocation, const struct FTigerFireProjectileData& InProjectile);
	void Server_FakeMatchmakingReady(Tiger_ETigerGroupingMode InGroupingMode);
	void Server_EquipWeapon(Tiger_ETigerWeaponSlot WeaponSlot, bool bInstantSwitch, unsigned char RequestId);
	void Server_EnableServerAutoStats();
	void Server_EnableLootBox(class ATigerLootBox* LootBox);
	void Server_DiscoveredSHPB(class ATigerSHPBMarker* DiscoveredMarker);
	void Server_ClientReportRangedWeaponHits(TArray<struct FTigerRangedHitInfo> InHits);
	void Server_ClientReportRangedWeaponHit(const struct FTigerRangedHitInfo& InHit);
	void Server_Cheat_UpdateSeasonProgress(int InExpToAdd, int InLevelsToAdd);
	void Server_Cheat_UnlockAllItemsInDatabase();
	void Server_Cheat_ToggleNoAggro();
	void Server_Cheat_ToggleGod();
	void Server_Cheat_ToggleFreeReload();
	void Server_Cheat_TigerSetSessionProgressToBattlepassLevel(int InLevel, bool bInShouldOwnBattlepass);
	void Server_Cheat_TigerCompleteNextChallengeWeekly();
	void Server_Cheat_TigerCompleteNextChallengeDaily();
	void Server_Cheat_SubmitChallengeProgress();
	void Server_Cheat_SpawnNpc(const struct FName& NPCType, const struct FVector& Location, Tiger_ETigerBloodPotency InPotency, Tiger_ETigerBloodType InBloodType);
	void Server_Cheat_Slomo(float NewTimeDilation);
	void Server_Cheat_SetMatchesPlayed(int InNumberMatches);
	void Server_Cheat_SetHolyIncenseElapsedTime(float InTotalElapsedTime, float InSpeedMultiplier);
	void Server_Cheat_ResetDialogueCategories();
	void Server_Cheat_RemoveHolyIncense();
	void Server_Cheat_RegisterGrimoireEntryAsUnread(uint32_t InGrimoireEntryId);
	void Server_Cheat_RegisterGrimoireEntryAsUnlocked(uint32_t InGrimoireEntryId);
	void Server_Cheat_RegisterGrimoireEntryAsLocked(uint32_t InGrimoireEntryId);
	void Server_Cheat_IncrementPremiumCurrency(uint64_t InAmountToAdd);
	void Server_Cheat_DisableDisciplineCost();
	void Server_Cheat_DestroyNpcWithinRadius(float InRadius, bool bInExludeDebugTarget);
	void Server_Cheat_DebugHolyIncense();
	void Server_Cheat_Crash();
	void Server_Cheat_ClearInGameTalents();
	void Server_Cheat_BringMeHome();
	void Server_Cheat_AddSoftCurrency(int InAmount, uint64_t InCurrencyId);
	void Server_Cheat_AddLevels(int InNumLevels);
	void Server_Cheat_AddInGameTalent(const struct FString& TalentToAdd);
	void Server_Cheat_AddExperience(int ExperienceAmount);
	void Server_CancelHeavyAttack();
	void Server_ActivateCarAlarm(const struct FTigerAIPlayerAction& InPlayerAction);
	void Server_AbortReloadWeapon();
	void Server_AbortChannelingDiscipline(Tiger_ETigerDisciplinesEnum DisciplineEnum);
	void ResetActions();
	void ReleaseWeaponAbility();
	void RefreshEquippedWeapon();
	int PostSeamlessAkEvent(class UAkAudioEvent* InEvent);
	void OnToggleMainMenu();
	void OnToggleInventory();
	void OnPreMatchAssetsLoadedMulti__DelegateSignature();
	void OnPreMatchAssetsLoaded__DelegateSignature();
	void OnPlayerStateCreated__DelegateSignature(class ATigerPlayerState* TigerPlayerState);
	void OnPersistentPlayerInitialisedSingle__DelegateSignature(class ATigerPlayerController* PlayerController);
	void OnPersistentPlayerInitialised__DelegateSignature(class ATigerPlayerController* PlayerController);
	void OnPersistentPlayerInitialised();
	void OnLastWaveFinished();
	void OnItemPickedUp__DelegateSignature(class UTigerItemAsset* Item, int Count);
	void OnInventoryToggled__DelegateSignature();
	void OnInitialLevelStreamingCompleted__DelegateSignature();
	void OnInGameMenuToggled(bool bIsOpen);
	void OnGhostModeSet__DelegateSignature(bool bIsGhostModeEnabled);
	void OnDownedEnemyPlayer__DelegateSignature(class ATigerPlayer* InPlayer);
	void OnClanLevelUpdated__DelegateSignature(uint32_t OldLevel, uint32_t NewLevel);
	void OnBeginPlay__DelegateSignature();
	void MarkDialogueAsRead(int InDialogueId, const struct FString& InNpcIdentifier, unsigned char InCategory);
	class UTigerSharedMouseCursor* MakeSharedMouseCursor();
	void KillSelf();
	bool IsWheelUIOpen();
	bool IsUsingCrosshairDebug();
	bool IsSpectating();
	bool IsProbablyUsingGamepadInput();
	bool IsPreSpawnStreamingDone();
	void IsPreMatchAssetsLoadedAsync(const struct FScriptDelegate& InDelegate);
	bool IsLocalBot();
	bool IsInTutorial();
	bool IsInTransferFromMatch();
	bool IsInMatch();
	bool IsInElysium();
	bool IsInCinematic();
	bool IsInBenchmark();
	bool IsGhostModeEnabled();
	void InGameMenuToggled(bool bIsOpen);
	void HideMouseCursor();
	bool HasWeaponForSlot(Tiger_ETigerWeaponSlot Slot);
	bool HasRangedWeaponCurrentlyEquipped();
	bool HasLocalPlayerSpawned();
	bool HasLoadedRewards();
	bool HasGamepadMovedMouse();
	bool HasBegunPlay();
	void HandlePreSpawnLoadingCheckTimerTick();
	class ATigerSpectatorPawn* GetTigerSpectatorPawn();
	class ATigerPlayerState* GetTigerPlayerState();
	class ATigerPlayer* GetTigerPlayer();
	class UTigerPersistentPlayerState* GetTigerPersistentPlayerState();
	class ATigerMatchHUD* GetTigerMatchHUD();
	class UTigerGameInstance* GetTigerGameInstance();
	class ATigerElysiumHUD* GetTigerElysiumHUD();
	class ATigerHUD* GetTigerBaseHUD();
	struct FVector2D GetRightStickAnalogValues();
	class UTigerPromptCollectionWidget* GetPromptCollection();
	class UTigerMapGameData* GetMapGameData();
	struct FVector2D GetLeftStickAnalogValues();
	struct FLinearColor GetHitmarkerColor(bool bInWasDowned, bool bInWasKilled, bool bInWasCriticalHit, bool bInHasExtraHealth, float InRangedDamageFalloffPercent);
	class UTigerDisciplineComponent* GetDisciplineComponenet();
	struct FLinearColor GetDamageTextColor(bool bInWasDowned, bool bInWasKilled, bool bInWasCriticalHit, bool bInHasExtraHealth, float InRangedDamageFalloffPercent);
	Tiger_ETigerWeaponSlot GetCurrentlyEquippedSlot();
	class UTigerClientSeasonalRewardCollection* GetClientSeasonalRewardCollection();
	class UTigerClientChallengesCollection* GetClientChallengesCollection();
	class ATigerBloodVeinPawn* GetBloodVeinPawn();
	struct FVector2D GetAnalogueCursorDelta();
	class UTigerFindSessionAsync* GetActiveFindSessionInstance();
	bool EquipWeaponForSlot(Tiger_ETigerWeaponSlot Slot, bool bInstantSwitch, bool bNotifyServer);
	void EnableGhostMode();
	bool DesiresAiming();
	void Debug_ShowCharacterCard();
	void Client_StopBlocking();
	void Client_ShowWinScreen();
	void Client_ShowDeathScreen(int8_t InPlayerPlacement, int8_t InNumGroupsAtStart, const struct FString& InInstigatorName, Tiger_ETigerKillerType InKillerType, bool bInReturnToElysiumOnClose);
	void Client_SetPlayerSpawnLocation(const struct FVector& InSpawnLocation);
	void Client_SetMatchStats(const struct FTigerMatchStats& MatchStats);
	void Client_SetIsBenchmarkController(bool bInIsBenchmarkController);
	void Client_SetCameraRotation(float InYaw, float InPitch);
	void Client_SendMapSelectionInformation(TArray<struct FTigerClientSpawnLocationInfo> InSpawnInformation);
	void Client_ReceiveLootBoxContentUpdate(class ATigerLootBox* LootBox, TArray<struct FTigerItemData> ReceivedItemList);
	void Client_PrintString(const struct FString& InMessage, float InScreenDuration, bool bInWriteToLog, const struct FCoreUObject_FColor& InColor, bool bInNewerOntop);
	void Client_OnShowDamageFeedback(class ATigerCharacter* InHitChar, class UClass* InDamageTypeClass, const struct FVector_NetQuantize& InHitLocationOffset, int16_t InTotalDamageDealt, int16_t InHealthDamageDealt, float InNewHealth, bool bInHasExtraHealth, bool bInHasShield, bool bInWasCriticalHit, bool bInWasDowned, bool bInWasKilled, float InRangedDamageFallofPercent);
	void Client_OnPlayerKicked(const struct FTigerOnlineErrorCode& InErrorCode);
	void Client_OnPlayerDeath(const struct FString& PlayerName, const struct FString& InstigatorName, bool bIsPlayerInSameGroup);
	void Client_OnEliminatedPlayer(const struct FString& InPlayerName, bool bInWasBloodHunted);
	void Client_OnDownedPlayer(class ATigerPlayerState* InPlayerState, bool bInBloodHunted);
	void Client_InvalidateReadyToPlayStateAndRequestRecheck();
	void Client_HighlightItem(class ATigerItemWorldRepresentation* Item);
	void Client_HandleBenchmarkTestsStarted(const struct FString& InOutputFile);
	void Client_HandleBenchmarkTestsFinished();
	void Client_EquipWeaponFailed(Tiger_ETigerWeaponSlot WeaponSlot, unsigned char RequestId);
	void Client_DebugDrawShapes(TArray<struct FTigerNetworkedDebugShape> Shapes);
	void Client_DebugDrawShape(const struct FTigerNetworkedDebugShape& Shape);
	void Client_Debug_DrawServerProjectileSpawnLocation(const struct FVector& ProjectileSpawnLocation);
	void Client_AbortReloadWeapon();
	bool CheckShouldShowClimbPrompt();
	void Cheat_ToggleUIVisibility();
	void CancelFindSession(Tiger_ETigerTelemetryMatchmackingCancelReason InCancelReason);
	void AttackRelease();
};

// Class Tiger.TigerPlayerDataService
// 0x0038 (FullSize[0x0060] - InheritedSize[0x0028])
class UTigerPlayerDataService : public UObject
{
public:
	unsigned char                                      UnknownData_8YJF[0x28];                                    // 0x0028(0x0028) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UTigerRequestUtility*                        TigerRequestUtility;                                       // 0x0050(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_K6TZ[0x8];                                     // 0x0058(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerPlayerDataService");
		return ptr;
	}



};

// Class Tiger.TigerMacroExperienceAsset
// 0x0050 (FullSize[0x0080] - InheritedSize[0x0030])
class UTigerMacroExperienceAsset : public UDataAsset
{
public:
	TMap<Tiger_ETigerPlayerEvent, int>                 EventMacroExperience;                                      // 0x0030(0x0050) (Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerMacroExperienceAsset");
		return ptr;
	}



};

// Class Tiger.TigerPlayerGrid
// 0x0040 (FullSize[0x0268] - InheritedSize[0x0228])
class ATigerPlayerGrid : public AActor
{
public:
	TArray<struct FTigerPlayerGridCell>                Cells;                                                     // 0x0228(0x0010) (Edit, ZeroConstructor, EditConst, Protected, NativeAccessSpecifierProtected)
	struct FVector2D                                   GridSize;                                                  // 0x0238(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                GridRows;                                                  // 0x0240(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                GridColumns;                                               // 0x0244(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                CellDirectNeighborsToCheck;                                // 0x0248(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_HIE2[0x4];                                     // 0x024C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UBoxComponent*                               GridBoxComponent;                                          // 0x0250(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bShowGrid;                                                 // 0x0258(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_T9X3[0xF];                                     // 0x0259(0x000F) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerPlayerGrid");
		return ptr;
	}



};

// Class Tiger.TigerPlayerGroup
// 0x0070 (FullSize[0x0098] - InheritedSize[0x0028])
class UTigerPlayerGroup : public UObject
{
public:
	unsigned char                                      UnknownData_JZNL[0x30];                                    // 0x0028(0x0030) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<TWeakObjectPtr<class ATigerPlayerState>>    Members;                                                   // 0x0058(0x0010) (ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_DWQ5[0x10];                                    // 0x0068(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<TWeakObjectPtr<class ATigerPlayerState>>    Invitations;                                               // 0x0078(0x0010) (ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPrivate)
	class UTigerPingCoordinator*                       PingCoordinator;                                           // 0x0088(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_2ZQA[0x8];                                     // 0x0090(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerPlayerGroup");
		return ptr;
	}



	TArray<class ATigerPlayerState*> GetMembersAsRawPointers();
};

// Class Tiger.TigerPlayerMarkerWidget
// 0x0000 (FullSize[0x02B0] - InheritedSize[0x02B0])
class UTigerPlayerMarkerWidget : public UTigerMapMarkerWidget
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerPlayerMarkerWidget");
		return ptr;
	}



};

// Class Tiger.StaticPiercingPhysics
// 0x0010 (FullSize[0x0038] - InheritedSize[0x0028])
class UStaticPiercingPhysics : public UObject
{
public:
	TArray<struct FStaticPhysicsPiercingData>          SimulatedPhysicsStaticPiercings;                           // 0x0028(0x0010) (ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.StaticPiercingPhysics");
		return ptr;
	}



};

// Class Tiger.TigerStatisticsGatherer
// 0x0060 (FullSize[0x0288] - InheritedSize[0x0228])
class ATigerStatisticsGatherer : public AActor
{
public:
	TMap<struct FString, float>                        AnimationSequences;                                        // 0x0228(0x0050) (Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic)
	float                                              ProcessingCullDistance;                                    // 0x0278(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                MaxComponentProcessingCountPerFrame;                       // 0x027C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bVisualizeProcessedComponents;                             // 0x0280(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_0HZ3[0x7];                                     // 0x0281(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerStatisticsGatherer");
		return ptr;
	}



};

// Class Tiger.TigerStatsSubsystem
// 0x00D0 (FullSize[0x0100] - InheritedSize[0x0030])
class UTigerStatsSubsystem : public UGameInstanceSubsystem
{
public:
	unsigned char                                      UnknownData_6MI5[0xD0];                                    // 0x0030(0x00D0) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerStatsSubsystem");
		return ptr;
	}



};

// Class Tiger.TigerStore
// 0x0010 (FullSize[0x0238] - InheritedSize[0x0228])
class ATigerStore : public AActor
{
public:
	class UTigerBlueprintLootLocationComponent*        LootConfiguration;                                         // 0x0228(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bHasAlarmedTriggered;                                      // 0x0230(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_KYX5[0x7];                                     // 0x0231(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerStore");
		return ptr;
	}



};

// Class Tiger.TigerStyledRichTextBlock
// 0x0010 (FullSize[0x0688] - InheritedSize[0x0678])
class UTigerStyledRichTextBlock : public URichTextBlock
{
public:
	struct FDataTableRowHandle                         TextStyleRow;                                              // 0x0678(0x0010) (Edit, NoDestructor, Protected, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerStyledRichTextBlock");
		return ptr;
	}



	void SetWrapTextAt(float InWrapTextAt);
	void SetTextStyleSetButKeepTextStyle(class UDataTable* InNewTextStyleSet);
	void SetTextStyle(const struct FDataTableRowHandle& InTextStyle);
	void SetDefaultUIColor(Tiger_ETigerUIColor InTigerUIColor, Tiger_ETigerColourSpace InTigerColourSpace);
	void SetDefaultShadowUIColorAndOpacity(Tiger_ETigerUIColor InTigerUIColor, Tiger_ETigerColourSpace InTigerColourSpace, float InOpacity);
	void SetDefaultShadowUIColor(Tiger_ETigerUIColor InTigerUIColor, Tiger_ETigerColourSpace InTigerColourSpace);
	void SetDefaultOutline(const struct FFontOutlineSettings& InOutlineSettings);
	void RefreshSlateTextBlock();
	void ClearDefaultStyleOverrides();
};

// Class Tiger.TigerStyledRichTextBlockDecorator
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class UTigerStyledRichTextBlockDecorator : public URichTextBlockDecorator
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerStyledRichTextBlockDecorator");
		return ptr;
	}



};

// Class Tiger.TigerInteractiveObject
// 0x0058 (FullSize[0x0280] - InheritedSize[0x0228])
class ATigerInteractiveObject : public AActor
{
public:
	bool                                               bHasInteractionTrigger;                                    // 0x0228(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bHasEnterVolumeTrigger;                                    // 0x0229(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bHasShootingTrigger;                                       // 0x022A(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_DMBT[0x5];                                     // 0x022B(0x0005) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FText                                       InteractionText;                                           // 0x0230(0x0018) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	class UBoxComponent*                               InteractionVolume;                                         // 0x0248(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBoxComponent*                               EnterVolume;                                               // 0x0250(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBoxComponent*                               ShootingVolume;                                            // 0x0258(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              InteractionTime;                                           // 0x0260(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_WQ5J[0x4];                                     // 0x0264(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class USceneComponent*                             SceneRoot;                                                 // 0x0268(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_EUOZ[0x8];                                     // 0x0270(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	Tiger_EInteractiveObjectState                      InteractionState;                                          // 0x0278(0x0001) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_JKTH[0x3];                                     // 0x0279(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              CurrentInteractionTimeLeft;                                // 0x027C(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerInteractiveObject");
		return ptr;
	}



	void UpdateDuration(float DeltaSeconds);
	void SleepInteraction();
	void OnRep_Interaction(Tiger_EInteractiveObjectState OldState);
	void OnJumpToFinalState();
	void OnInteract(Tiger_EInteractiveObjectState ActivatedTrigger);
	void Multicast_SetInteractionState(Tiger_EInteractiveObjectState NewState);
	void Interact(Tiger_EInteractiveObjectState ActivatedTrigger, class UTigerInteractionControllerComponent* Interacter);
	bool HasDuration();
	Tiger_EInteractiveObjectState GetInteractionState();
	void CancelInteraction(class UTigerInteractionControllerComponent* Interacter);
	void BeginOverlappedProjectile(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void BeginOverlappedCharacter(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
};

// Class Tiger.TigerLootBox
// 0x0070 (FullSize[0x02F0] - InheritedSize[0x0280])
class ATigerLootBox : public ATigerInteractiveObject
{
public:
	unsigned char                                      UnknownData_7BF9[0x8];                                     // 0x0280(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UClass*                                      PickupItemClass;                                           // 0x0288(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAkAudioEvent*                               StartInteractSound;                                        // 0x0290(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAkAudioEvent*                               StopInteractSound;                                         // 0x0298(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	Tiger_ETigerItemRarity                             CurrentHighestRarity;                                      // 0x02A0(0x0001) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_VL09[0x7];                                     // 0x02A1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FTigerItemData>                      ItemList;                                                  // 0x02A8(0x0010) (BlueprintVisible, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	bool                                               bWasSpawnedOnPlayerDeath;                                  // 0x02B8(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bHasBeenPreviouslyOpened;                                  // 0x02B9(0x0001) (BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_NRSA[0x2];                                     // 0x02BA(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TWeakObjectPtr<class ATigerPlayerController>       CurrentInteractingPlayerController;                        // 0x02BC(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_5LJH[0x4];                                     // 0x02C4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UBoxComponent*                               CancelInteractionVolume;                                   // 0x02C8(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_S01P[0x18];                                    // 0x02D0(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	Tiger_ETigerTelemetryItemSourceID                  TelemetrySourceID;                                         // 0x02E8(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_7EWE[0x7];                                     // 0x02E9(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerLootBox");
		return ptr;
	}



	void SetTelemetrySourceID(Tiger_ETigerTelemetryItemSourceID InSourceID);
	void OnReset();
	void OnRep_OpenedState();
	void OnRep_HighestRarityUpdated(Tiger_ETigerItemRarity OldRarity);
	void OnOpenedStateReplicated(Tiger_EInteractiveObjectState State);
	void OnOpened();
	void OnOpenBoxAnimation();
	void OnLocalPlayerInteractionCancelled();
	void OnListUpdated(TArray<struct FTigerItemData> NewItemList);
	void OnHighestRarityUpdated(Tiger_ETigerItemRarity NewHighestRarity);
	void Multicast_SetInteractionStateForNonInteractingPlayer(Tiger_EInteractiveObjectState NewState);
	void Multicast_OpenBoxAnimation();
	void Multicast_Enable();
	bool IsOpened();
	bool HasLoot();
	struct FText GetDescriptionText();
	void DisableLootBox();
	void ClientCloseLid();
	void ClientCloseBoxGUI();
};

// Class Tiger.TigerSupplyDrop
// 0x0060 (FullSize[0x0350] - InheritedSize[0x02F0])
class ATigerSupplyDrop : public ATigerLootBox
{
public:
	class UBoxComponent*                               BoxRoot;                                                   // 0x02F0(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_6RDY[0x8];                                     // 0x02F8(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FTransform                                  FinalTransform;                                            // 0x0300(0x0030) (Net, IsPlainOldData, RepNotify, NoDestructor, Protected, NativeAccessSpecifierProtected)
	class UTigerItemLootTable*                         LootTable;                                                 // 0x0330(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                MinNumItems;                                               // 0x0338(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                MaxNumItems;                                               // 0x033C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              MaxFallSpeed;                                              // 0x0340(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_4EPU[0xC];                                     // 0x0344(0x000C) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerSupplyDrop");
		return ptr;
	}



	void OnRep_FinalTransform();
	void HideParachute();
};

// Class Tiger.TigerSupplyDropHelicopter
// 0x0000 (FullSize[0x0228] - InheritedSize[0x0228])
class ATigerSupplyDropHelicopter : public AActor
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerSupplyDropHelicopter");
		return ptr;
	}



};

// Class Tiger.TigerTalentAsset
// 0x0100 (FullSize[0x0130] - InheritedSize[0x0030])
class UTigerTalentAsset : public UDataAsset
{
public:
	Tiger_ETigerTalentType                             TalentType;                                                // 0x0030(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_CZJE[0x7];                                     // 0x0031(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FText                                       DISPLAYNAME;                                               // 0x0038(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class UTexture2D*                                  TalentIcon;                                                // 0x0050(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTigerCharacterStatModification             StatModifications;                                         // 0x0058(0x00B4) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	int                                                TalentTier;                                                // 0x010C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnlocksAtInGameLevel;                                      // 0x0110(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_9FFN[0x7];                                     // 0x0111(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FText                                       Description;                                               // 0x0118(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerTalentAsset");
		return ptr;
	}



};

// Class Tiger.TigerTalentTierClanLevelRequirementsAsset
// 0x0050 (FullSize[0x0080] - InheritedSize[0x0030])
class UTigerTalentTierClanLevelRequirementsAsset : public UDataAsset
{
public:
	TMap<int, int>                                     TalentTierClanLevelRequirement;                            // 0x0030(0x0050) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerTalentTierClanLevelRequirementsAsset");
		return ptr;
	}



};

// Class Tiger.TigerTalentComponent
// 0x00E8 (FullSize[0x0198] - InheritedSize[0x00B0])
class UTigerTalentComponent : public UActorComponent
{
public:
	class UDataTable*                                  TalentListTable;                                           // 0x00B0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTigerTalentTierClanLevelRequirementsAsset*  TalentTierRequirements;                                    // 0x00B8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UTigerTalentAsset*>                   Talents;                                                   // 0x00C0(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<class UTigerTalentAsset*>                   UnlockedTalents;                                           // 0x00D0(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_YCWY[0xB8];                                    // 0x00E0(0x00B8) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerTalentComponent");
		return ptr;
	}



	void UpdateSelectedTalentsFromTrainer(TArray<int> NewTalents);
	void Server_UpdateSelectedTalentsFromTrainer(TArray<int> NewTalents);
	TArray<class UTigerTalentAsset*> GetTalentsUnlockedAtLevel(int Level);
	TArray<class UTigerTalentAsset*> GetTalents();
	void Client_SetPlayerTalentsByIDs(TArray<int> InTalents);
	void Client_SetPlayerTalents(TArray<class UTigerTalentAsset*> InTalents);
};

// Class Tiger.TigerTalentDisplayMenu
// 0x0010 (FullSize[0x02C8] - InheritedSize[0x02B8])
class UTigerTalentDisplayMenu : public UTigerIngameSubmenuWidget
{
public:
	TArray<class UTigerTalentAsset*>                   CurrentTalentAssets;                                       // 0x02B8(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerTalentDisplayMenu");
		return ptr;
	}



	void PopulateTalentDisplayMenu();
	void OnPopulateTalentDisplayMenu();
};

// Class Tiger.TigerTeamViewUI
// 0x0038 (FullSize[0x02B8] - InheritedSize[0x0280])
class UTigerTeamViewUI : public UTigerWidget
{
public:
	TArray<class ATigerPlayerState*>                   OtherGroupMembers;                                         // 0x0280(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	class UTigerPreMatchPaperDollComponent*            PreMatchPaperDollComp;                                     // 0x0290(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FString                                     PreHighlightTag;                                           // 0x0298(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FName>                               GroupMemberPaperDollTags;                                  // 0x02A8(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerTeamViewUI");
		return ptr;
	}



	void OnGroupMemberAdded(unsigned char InMemberId, class ATigerPlayerState* InPlayerState, bool bInIsLeftSide, class ATigerPaperDoll* InPaperDoll);
	void HandleGroupMembersChanged(class UTigerGroupStateComponent* InGroupStateComponent, TArray<class ATigerPlayerState*> InPreviousMembers);
};

// Class Tiger.TigerTelemetryDataDefinitions
// 0x0020 (FullSize[0x0048] - InheritedSize[0x0028])
class UTigerTelemetryDataDefinitions : public UObject
{
public:
	Tiger_ETigerPowerKitType                           ArchetypeDefinitions;                                      // 0x0028(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	Tiger_ETigerClan                                   ClanDefinitions;                                           // 0x0029(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	Tiger_ETigerTelemetryDamageCauser                  DamageSourceIdentifiers;                                   // 0x002A(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	Tiger_ETigerTelemetryExpSource                     ExperienceSources;                                         // 0x002B(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	Tiger_ETigerTelemetryDamageType                    DamageTypes;                                               // 0x002C(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	Tiger_ETigerDisciplinesEnum                        Disciplines;                                               // 0x002D(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	Tiger_ETigerTelemetryMatchmackingCancelReason      MatchmakingCancelReasons;                                  // 0x002E(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	Tiger_ETigerTelemetryCauseOfPingRemoval            CauseOfPingRemoval;                                        // 0x002F(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	Tiger_ETigerTelemetryDeviceType                    DeviceTypes;                                               // 0x0030(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	Tiger_ETigerTelemetryPlatformType                  PlatformTypes;                                             // 0x0031(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	Tiger_ETigerTelemetryMapIds                        MapIds;                                                    // 0x0032(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	Tiger_ETigerTelemetryRankedMode                    RankedModes;                                               // 0x0033(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	Tiger_ETigerTelemetryGameplayMode                  GameplayModes;                                             // 0x0034(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	Tiger_ETigerTelemetryChallengeType                 ChallengeTypes;                                            // 0x0035(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	Tiger_ETigerTelemetryItemSourceID                  TelemetrySourceID;                                         // 0x0036(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	Tiger_ETigerTelemetryBattlepassType                BattlepassTypes;                                           // 0x0037(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	Tiger_ETigerTelemetryHardCurrencyRecieveMethod     HardCurrencyReceiveMethod;                                 // 0x0038(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	Tiger_ETigerTelemetryNetworkType                   NetworkTypes;                                              // 0x0039(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	Tiger_ETigerTelemetryNetworkIpType                 NetworkIPType;                                             // 0x003A(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	Tiger_ETigerTelemetryAceRebirthType                RebirthType;                                               // 0x003B(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	Tiger_ETigerTelemetryMetaItemSourceType            MetaItemSourceType;                                        // 0x003C(0x0001) ELEMENT_SIZE_MISMATCH (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_QYVR[0x3];                                     // 0x003C(0x0003) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
	Tiger_ETigerTelemetryAceDeathType                  DeathType;                                                 // 0x0040(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_ERF8[0x7];                                     // 0x0041(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerTelemetryDataDefinitions");
		return ptr;
	}



};

// Class Tiger.TigerTelemetryEventHandler
// 0x0528 (FullSize[0x0550] - InheritedSize[0x0028])
class UTigerTelemetryEventHandler : public UObject
{
public:
	class USharkTelemetry*                             SharkTelemetry;                                            // 0x0028(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTigerGameInstance*                          GameInstance;                                              // 0x0030(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_TZFC[0x518];                                   // 0x0038(0x0518) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerTelemetryEventHandler");
		return ptr;
	}



	void CacheTransactionalData(const struct FTigerPersistentPlayerTransactionalData& InTransactionalData);
};

// Class Tiger.TigerTelemetryIDInterface
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class UTigerTelemetryIDInterface : public UInterface
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerTelemetryIDInterface");
		return ptr;
	}



};

// Class Tiger.TigerTextWidget
// 0x0000 (FullSize[0x0280] - InheritedSize[0x0280])
class UTigerTextWidget : public UTigerWidget
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerTextWidget");
		return ptr;
	}



	class UTextBlock* GetText();
};

// Class Tiger.TigerThrallMapData
// 0x0008 (FullSize[0x0038] - InheritedSize[0x0030])
class UTigerThrallMapData : public UDataAsset
{
public:
	class UTexture2D*                                  Map;                                                       // 0x0030(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerThrallMapData");
		return ptr;
	}



};

// Class Tiger.TigerThrallMapUI
// 0x0010 (FullSize[0x03C0] - InheritedSize[0x03B0])
class UTigerThrallMapUI : public UTigerSceneBackgroundUI
{
public:
	struct FName                                       SubLevelName;                                              // 0x03B0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       SubLevelCamName;                                           // 0x03B8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerThrallMapUI");
		return ptr;
	}



};

// Class Tiger.TigerThrallMenu
// 0x0020 (FullSize[0x03D0] - InheritedSize[0x03B0])
class UTigerThrallMenu : public UTigerSceneBackgroundUI
{
public:
	TArray<class UTigerLocalThrallData*>               ThrallSlots;                                               // 0x03B0(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	class UTigerLocalThrallData*                       CurrentThrall;                                             // 0x03C0(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	Tiger_ETigerThrallMenu                             ThrallMenuIndex;                                           // 0x03C8(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_OEO0[0x7];                                     // 0x03C9(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerThrallMenu");
		return ptr;
	}



	bool IsCurrentSlotEmpty();
	void InitialiseOnOpen(class ATigerPlayerController* InController);
	void IncrementIndex();
	int GetSlotIndex();
	void DecrementIndex();
};

// Class Tiger.TigerThrallMissionDetailsUi
// 0x0070 (FullSize[0x02D0] - InheritedSize[0x0260])
class UTigerThrallMissionDetailsUi : public UUserWidget
{
public:
	struct FText                                       MissionName;                                               // 0x0260(0x0018) (BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	struct FText                                       MissionObjective;                                          // 0x0278(0x0018) (BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	struct FText                                       MissionStatRequirements;                                   // 0x0290(0x0018) (BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	int                                                MissionRewardXp;                                           // 0x02A8(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_SA2R[0x4];                                     // 0x02AC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FText                                       MissionRewardItems;                                        // 0x02B0(0x0018) (BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	int                                                MissionTurnsLeft;                                          // 0x02C8(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_RKPO[0x4];                                     // 0x02CC(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerThrallMissionDetailsUi");
		return ptr;
	}



	void LoadMissionDetails(int InMissionUId);
};

// Class Tiger.TigerChallengeHeadshots
// 0x0028 (FullSize[0x00D8] - InheritedSize[0x00B0])
class UTigerChallengeHeadshots : public UTigerChallenge
{
public:
	struct FTigerChallengeRequirementWeaponType        RequiredWeaponConstraint;                                  // 0x00B0(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_549B[0x10];                                    // 0x00C8(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerChallengeHeadshots");
		return ptr;
	}



};

// Class Tiger.TigerCharacterMovementComponent
// 0x0230 (FullSize[0x0D30] - InheritedSize[0x0B00])
class UTigerCharacterMovementComponent : public UCharacterMovementComponent
{
public:
	class UTigerTraversalFiniteStateMachine*           FiniteStateMachine;                                        // 0x0B00(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_LQER[0x18];                                    // 0x0B08(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              MaxSprintSpeed;                                            // 0x0B20(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SprintSpeedMultiplier;                                     // 0x0B24(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_1M4N[0x4];                                     // 0x0B28(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              ForwardAngleThreshold;                                     // 0x0B2C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_V90M[0x8];                                     // 0x0B30(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UTigerSprintConfig*                          SprintConfig;                                              // 0x0B38(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaxJumpHeight;                                             // 0x0B40(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bPreventFallingSlide;                                      // 0x0B44(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_2PMV[0x3];                                     // 0x0B45(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              DownedMaxSpeed;                                            // 0x0B48(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_XDUD[0x4];                                     // 0x0B4C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnDodge;                                                   // 0x0B50(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	float                                              WallClimbCombineThresholdSquared;                          // 0x0B60(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_RLGM[0x4];                                     // 0x0B64(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UTigerImpendingCollisionCalculator*          ImpendingCollisionCalculator;                              // 0x0B68(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              TimeUntilCollision;                                        // 0x0B70(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              AngleToImpendingCollisionWithClimbableSurface;             // 0x0B74(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              CharacterAngleToImpendingCollisionWithClimbableSurface;    // 0x0B78(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bAboutToCollideWithClimbableSurface;                       // 0x0B7C(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_XKZ5[0x17];                                    // 0x0B7D(0x0017) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	uint32_t                                           ElysiumBlockedTraversalStates;                             // 0x0B94(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bEnableRestrictedElysiumMobility;                          // 0x0B98(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bIsInLedgeGrab;                                            // 0x0B99(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bContinueToUseClimbCameraDuringLedgeGrab;                  // 0x0B9A(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bWasLastLandingHard;                                       // 0x0B9B(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_SP0F[0x8];                                     // 0x0B9C(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FName                                       RightHandBoneName;                                         // 0x0BA4(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FName                                       LeftHandBoneName;                                          // 0x0BAC(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FName                                       RightFootBoneName;                                         // 0x0BB4(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FName                                       LeftFootBoneName;                                          // 0x0BBC(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              JumpCapsuleHeightReduction;                                // 0x0BC4(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_ET45[0x48];                                    // 0x0BC8(0x0048) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FTigerDeltaCorrectionData                   CurrentDeltaCorrectedAnimationData;                        // 0x0C10(0x0040) (NoDestructor, NativeAccessSpecifierPrivate)
	bool                                               bUseCustomCurvesExclusivelyForInclineSpeedModification;    // 0x0C50(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_WKTP[0x7];                                     // 0x0C51(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UCurveFloat*                                 InclineMovementMultiplierCurve;                            // 0x0C58(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCurveFloat*                                 DeclineMovementMultiplierCurve;                            // 0x0C60(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCurveFloat*                                 BackwardsMovementMultiplierCurve;                          // 0x0C68(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              BackwardsAngleThreshold;                                   // 0x0C70(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_5BNW[0x14];                                    // 0x0C74(0x0014) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UClass*                                      SprintConfigClass;                                         // 0x0C88(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCurveFloat*                                 AimGlideProgressCurve;                                     // 0x0C90(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCurveFloat*                                 AimGlideDragOverVelocityCurve;                             // 0x0C98(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCurveFloat*                                 AimGlideLateralDragCurve;                                  // 0x0CA0(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCurveFloat*                                 AimGlideAirControlCurve;                                   // 0x0CA8(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               bResetAimGlideOnDoubleJump;                                // 0x0CB0(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_OZ8W[0x7];                                     // 0x0CB1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UAnimMontage*                                PendingPreMovementMontage;                                 // 0x0CB8(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_NB9V[0x3C];                                    // 0x0CC0(0x003C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FVector                                     LastWallJumpedNormal;                                      // 0x0CFC(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_RZSX[0x28];                                    // 0x0D08(0x0028) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerCharacterMovementComponent");
		return ptr;
	}



	void TigerDelegateOnDodged__DelegateSignature(const struct FVector& RelativeLaunchDirection);
	bool ShouldUseClimbingCamera();
	bool ShouldRestrictMobility(Tiger_ETigerTraversalState InPotentialActionToRestrict);
	void Server_SetDeltaCorrectionEndPoint(const struct FVector& EndPosition);
	void PlayDeltaCorrectedAnimation(class UAnimMontage* AnimMontageToCorrect, const struct FVector& PositionToCorrectTo, bool bShouldAdjustAnimationPlayRate);
	void Multicast_WallJump();
	void Multicast_UpdateWallJump(Shark_ESharkFourWayDirection InDesiredWallJumpDirection, unsigned char InDesiredWallJumpAnimState, const struct FVector& InWallNormal, const struct FVector& InWallJumpVelocity);
	void Multicast_StopClimb();
	void Multicast_ReplicateState(Tiger_ETigerTraversalState InTraversalStateType, Tiger_ETigerTraversalTransitionAction InAction);
	void Multicast_FinishWallJump();
	void Multicast_BeginClimb(class AActor* InTargetClimbObject, const struct FVector& InClimbStartLocation);
	void Multicast_AirDash(Shark_ESharkFourWayDirection InDashDirection, float InAirDashAngleInDegrees);
	bool IsSprintingAtFullSpeed();
	bool IsSprinting();
	bool IsSliding();
	bool IsSlideJumping();
	bool IsInWallJump();
	bool IsInWallHang();
	bool IsInWallGrind();
	bool IsInLowVault();
	bool IsInLedgeGrab();
	bool IsInAirDash();
	bool IsAimGliding();
	float GetTimeSinceStartedMovingFreely();
	float GetSlideSurfacePitch();
	float GetLastDodgeTime();
	float GetFloorPitch();
	float GetAimGlideStrength();
	void FreezeMovement();
	void DoForcedMove(const struct FVector& TargetLocation, float TravelTime, bool bInAir, float ExitVelocityScale, bool bAllowPlayerBreak, bool bAllowCancelOnArrival);
	void ApplyKnockback(const struct FVector& InVelocity);
};

// Class Tiger.TigerSceneRenderItemWidget
// 0x0070 (FullSize[0x02F0] - InheritedSize[0x0280])
class UTigerSceneRenderItemWidget : public UTigerWidget
{
public:
	struct FScriptMulticastDelegate                    OnItemSpawned;                                             // 0x0280(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FVector                                     ItemSpawnLocation;                                         // 0x0290(0x000C) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_WVRN[0x4];                                     // 0x029C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	unsigned char                                      DefaultItemClass[0x28];                                    // 0x029C(0x0028) UNKNOWN PROPERTY: SoftClassProperty
	class UMaterialInterface*                          RenderTargetMaterial;                                      // 0x02C8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bOverrideItemRenderTarget;                                 // 0x02D0(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_L60U[0x7];                                     // 0x02D1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class AActor*                                      SpawnedItem;                                               // 0x02D8(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_4I7C[0x10];                                    // 0x02E0(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerSceneRenderItemWidget");
		return ptr;
	}



	void SpawnItem(class UClass* InActorClass);
	void OverrideRenderTextureTarget(class AActor* InActor);
	void OnItemSpawned__DelegateSignature(class AActor* InSpawnedItem);
	class UTextureRenderTarget2D* GetRenderTextureFromMaterial();
};

// Class Tiger.TigerCharacterPaperDollWidget
// 0x0090 (FullSize[0x0380] - InheritedSize[0x02F0])
class UTigerCharacterPaperDollWidget : public UTigerSceneRenderItemWidget
{
public:
	struct FTigerCharacterAppearance                   Apperance;                                                 // 0x02F0(0x0080) (BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	class UTigerPlayerClanData*                        ClanData;                                                  // 0x0370(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bUseSharedPaperDoll;                                       // 0x0378(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_0RRQ[0x7];                                     // 0x0379(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerCharacterPaperDollWidget");
		return ptr;
	}



	void SetFromApperance(const struct FTigerCharacterAppearance& InApperance, class UTigerPlayerClanData* InClanData, const struct FScriptDelegate& InDelegate);
	void OnCharacterAppearanceUpdated__DelegateSignature();
	class ATigerPaperDoll* GetPaperDoll();
};

// Class Tiger.TigerPhysicalInteractionAnimationAsset
// 0x00C0 (FullSize[0x00F0] - InheritedSize[0x0030])
class UTigerPhysicalInteractionAnimationAsset : public UDataAsset
{
public:
	struct FTigerPhysicalInteractionMontages           FeedingDataByVampireGender[0x2];                           // 0x0030(0x00C0) (Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerPhysicalInteractionAnimationAsset");
		return ptr;
	}



};

// Class Tiger.TigerPhysicalInteraction
// 0x0018 (FullSize[0x0040] - InheritedSize[0x0028])
class UTigerPhysicalInteraction : public UObject
{
public:
	unsigned char                                      UnknownData_DKJW[0x10];                                    // 0x0028(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TWeakObjectPtr<class ATigerPlayer>                 OtherPlayer;                                               // 0x0038(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerPhysicalInteraction");
		return ptr;
	}



};

// Class Tiger.TigerPhysicalInteractionDiablerize
// 0x0050 (FullSize[0x0090] - InheritedSize[0x0040])
class UTigerPhysicalInteractionDiablerize : public UTigerPhysicalInteraction
{
public:
	float                                              DiablerizeTime;                                            // 0x0040(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bInstantInterrupt;                                         // 0x0044(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_1TPS[0x3];                                     // 0x0045(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UTigerPhysicalInteractionAnimationAsset*     DiablerizeAnimationAsset;                                  // 0x0048(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_55KQ[0x40];                                    // 0x0050(0x0040) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerPhysicalInteractionDiablerize");
		return ptr;
	}



};

// Class Tiger.TigerPhysicalInteractionRevive
// 0x0008 (FullSize[0x0048] - InheritedSize[0x0040])
class UTigerPhysicalInteractionRevive : public UTigerPhysicalInteraction
{
public:
	unsigned char                                      UnknownData_9KTT[0x8];                                     // 0x0040(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerPhysicalInteractionRevive");
		return ptr;
	}



};

// Class Tiger.TigerCharacterPoseableMeshAnimInstance
// 0x0058 (FullSize[0x0310] - InheritedSize[0x02B8])
class UTigerCharacterPoseableMeshAnimInstance : public UAnimInstance
{
public:
	class UTigerCharacterMeshManager*                  MeshManager;                                               // 0x02B8(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<struct FName, struct FTigerCharacterPoseableMeshBoneData> NameToDataLut;                                             // 0x02C0(0x0050) (Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerCharacterPoseableMeshAnimInstance");
		return ptr;
	}



	void GetBoneOffsetTransform(const struct FName& InName, struct FVector* OutLocation, struct FRotator* OutRotation);
};

// Class Tiger.TigerCharacterPoseableMesh
// 0x0010 (FullSize[0x0038] - InheritedSize[0x0028])
class UTigerCharacterPoseableMesh : public UObject
{
public:
	class USkeletalMesh*                               Mesh;                                                      // 0x0028(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      AnimClass;                                                 // 0x0030(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerCharacterPoseableMesh");
		return ptr;
	}



};

// Class Tiger.TigerCharCustomizationComponent
// 0x0058 (FullSize[0x0108] - InheritedSize[0x00B0])
class UTigerCharCustomizationComponent : public UActorComponent
{
public:
	struct FScriptMulticastDelegate                    OnAppearanceChanged;                                       // 0x00B0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_X5V2[0x10];                                    // 0x00C0(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UTigerCharacterMeshManager*                  MeshManager;                                               // 0x00D0(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTigerClanCustomizationOptions*              CustomizationOptions;                                      // 0x00D8(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FTigerCharacterCustomizationParameters> AdditionalParametersToApply;                               // 0x00E0(0x0010) (ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_2M7W[0x11];                                    // 0x00F0(0x0011) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	Tiger_ETigerLodSplitMeshQuality                    MeshQuality;                                               // 0x0101(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_F9H9[0x6];                                     // 0x0102(0x0006) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerCharCustomizationComponent");
		return ptr;
	}



	void SetOutfitFromSetup(const struct FTigerPersistentOutfitSetup& OutfitSetup);
	void SetMeshManager(class UTigerCharacterMeshManager* MeshManager);
	void SetAppearanceByPreviewData(const struct FTigerPreviewerData& NewAppearance);
	void SetAppearance(const struct FTigerCharacterAppearance& NewAppearance);
	void OnAppearanceChangedMulticast__DelegateSignature();
	bool HasAppearanceBeenSet();
	class UTigerCharacterTattooCustomization* GetTattoo(int TattooIndex, bool* bIsValid);
	class UTigerCharacterOutfitConfiguration* GetOutfitConfigurationByPath();
	struct FTigerPreviewerData GetAppearanceData();
};

// Class Tiger.TigerChatComponent
// 0x0038 (FullSize[0x00E8] - InheritedSize[0x00B0])
class UTigerChatComponent : public UActorComponent
{
public:
	struct FSharkTokenBucket                           ClientMessageTokenBucket;                                  // 0x00B0(0x000C) (Edit, DisableEditOnInstance, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FSharkTokenBucket                           ServerMessageTokenBucket;                                  // 0x00BC(0x000C) (Edit, DisableEditOnInstance, NoDestructor, Protected, NativeAccessSpecifierProtected)
	bool                                               bIsChatBanned;                                             // 0x00C8(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_17VK[0x1F];                                    // 0x00C9(0x001F) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerChatComponent");
		return ptr;
	}



	bool TryGetMessageToken(float* OutTimeUntilTokenAvailable);
	void Server_SetGeneralChatMute(bool bInShouldMuteGeneralChat);
	void Server_MutePlayer(const struct FTigerPersistentPlayerID& InPlayerId);
	void OnPersistentPlayerStateInitialized(class ATigerPlayerController* InPlayerController);
	void OnMuteStatusChanged(const struct FTigerMuteInfo& InMuteInfo);
	void OnChatMessageReceived(const struct FTigerChatMessage& InMessage);
	void OnBanStatusUpdated(const struct FTigerMuteInfo& InMuteInfo);
	bool IsSoloMatch();
	bool IsGeneralChatMuted();
	struct FTigerMuteInfo GetMutedInfo();
	void CreateChatWindow();
	void Client_ReceiveServerMessage(const struct FString& InServerMessage);
	void Client_ReceiveChatMessage(const struct FTigerChatMessage& InMessage);
};

// Class Tiger.TigerCheatManager
// 0x0000 (FullSize[0x0078] - InheritedSize[0x0078])
class UTigerCheatManager : public UCheatManager
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerCheatManager");
		return ptr;
	}



	void TigerUpdateSeasonProgress(int ExpToAdd, int LevelsToAdd);
	void TigerUnlockThrall(Tiger_ETigerThrallId InThrallId);
	void TigerUnlockAllThralls();
	void TigerUnlockAllSkills();
	void TigerUnlockAllItemsInDatabase();
	void TigerToggleVisualLogger();
	void TigerToggleNoAggro();
	void TigerToggleClientSideHitDetectionRanged();
	void TigerToggleClientSideHitDetectionMelee();
	void TigerThrallTickAllStatModifiers();
	void TigerThrallMissionUpdateAll();
	void TigerThrallMissionStatusChange(int InThrallMissionId, bool bIsActive);
	void TigerThrallMissionAdvanceTurns(int InThrallMissionId, uint32_t InTurns);
	void TigerThrallAddStatModifier(unsigned char InSlotIndex, const struct FName& InModifierName);
	void TigerTeleportToCameraLink();
	void TigerSubmitChallengeProgress();
	void TigerStartQuest(const struct FString& InQuestlineId, const struct FString& InQuestId);
	void TigerSpawnNpcAtCursorWithPotency(const struct FName& NPCType, Tiger_ETigerBloodPotency InPotency, Tiger_ETigerBloodType InBloodType);
	void TigerSpawnNpcAtCursor(const struct FName& NPCType);
	void TigerSleep(float SleepMs);
	void TigerSkipPsoCaching();
	void TigerShowMatchTimer();
	void TigerShowDoNotUseMeshes();
	void TigerShowActiveAnimationsOnActors(bool bShouldShow);
	void TigerSetWeatherScenario(const struct FString& InScenarioName);
	void TigerSetSessionProgressToBattlepassLevel(int InLevel, bool bInShouldOwnBattlepass);
	void TigerSetMatchesPlayed(int InNumberMatches);
	void TigerSetCharacterData(const struct FString& ClanText, int PowerKitIndex, const struct FString& GenderText);
	void TigerSetAppearance(const struct FString& AppearanceText);
	void TigerServerCrash();
	void TigerSerializeStatistics();
	void TigerResetQuests();
	void TigerRemoveThrall(unsigned char InSlot);
	void TigerRemoveHolyIncense();
	void TigerRemoveAllThralls();
	void TigerRegisterGrimoireEntryAsUnread(const struct FString& InGrimoireEntryId);
	void TigerRegisterGrimoireEntryAsUnlocked(const struct FString& InGrimoireEntryId);
	void TigerRegisterGrimoireEntryAsRead(const struct FString& InGrimoireEntryId);
	void TigerRegisterGrimoireEntryAsLocked(const struct FString& InGrimoireEntryId);
	void TigerRegisterAllGrimoireEntriesAsUnread();
	void TigerRegisterAllGrimoireEntriesAsUnlocked();
	void TigerRegisterAllGrimoireEntriesAsRead();
	void TigerRegisterAllGrimoireEntriesAsLocked();
	void TigerRainAmount(float RainAmount);
	void TigerQuitTutorial();
	void TigerPrintCompleteQuestInfo();
	void TigerPrintActiveQuestInfo();
	void TigerListThrallTrueStats();
	void TigerListThralls();
	void TigerListSoftCurrencies();
	void TigerListPlayerCharacters();
	void TigerIncrementPremiumCurrency(uint64_t InAmountToAdd);
	void TigerFreeReload();
	void TigerEnableStatisticsGathering(bool bShouldBeEnabled);
	void TigerDisableDisciplineCost();
	void TigerDestroyNpcWithinRadiusIgnoreDebugTarget(float InRadius);
	void TigerDestroyNpcWithinRadius(float Radius);
	void TigerDebugDrawPlayerGrid(float DebugDrawLifetime);
	void TigerCreateDefaultCharacterAtSlot(const struct FString& InArchetypeName, unsigned char InCharacterSlot);
	void TigerCrash();
	void TigerCompleteQuest(const struct FString& InQuestlineId, const struct FString& InQuestId);
	void TigerCompleteNextChallengeWeekly();
	void TigerCompleteNextChallengeDaily();
	void TigerClearInGameTalents();
	void TigerChangeThrallStats(unsigned char InSlotIndex, int InPerception, int InCommitment, int InDominance, int InSociability, int InProficiency, int InStealth, int InStamina, int InCombat);
	void TigerBringMeHome();
	void TigerBreakMasquerade();
	void TigerAddSoftCurrency(int InAmount, const struct FString& InCurrencyIdAsString);
	void TigerAddInGameTalent(const struct FString& TalentToAdd);
	void TigerAddInGameLevels(int InNumLevels);
	void TigerAddExperience(int ExperienceAmount);
	void OnGetPlayerCharactersRsp(TArray<struct FTigerPersistentPlayerCharacter> InCharacters, const struct FString& InErrorString);
};

// Class Tiger.TigerClanLevelWidget
// 0x0008 (FullSize[0x0268] - InheritedSize[0x0260])
class UTigerClanLevelWidget : public UUserWidget
{
public:
	unsigned char                                      UnknownData_WA04[0x8];                                     // 0x0260(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerClanLevelWidget");
		return ptr;
	}



	void UpdateClanLevel(Tiger_ETigerClan Clan);
	void OnClanLevelUpdated(int NewClanLevel);
	int GetCurrentClanLevel();
};

// Class Tiger.TigerClientInteractiveObject
// 0x0010 (FullSize[0x0290] - InheritedSize[0x0280])
class ATigerClientInteractiveObject : public ATigerInteractiveObject
{
public:
	unsigned char                                      UnknownData_8360[0x10];                                    // 0x0280(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerClientInteractiveObject");
		return ptr;
	}



};

// Class Tiger.TigerClientInteractiveSpawner
// 0x0100 (FullSize[0x0328] - InheritedSize[0x0228])
class ATigerClientInteractiveSpawner : public AActor
{
public:
	unsigned char                                      UnknownData_V94M[0xB0];                                    // 0x0228(0x00B0) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TMap<uint32_t, struct FClientSpawnData>            PendingCreationQueue;                                      // 0x02D8(0x0050) (NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerClientInteractiveSpawner");
		return ptr;
	}



	void Server_ValidateInteraction(class UTigerInteractionControllerComponent* InInteractor, uint32_t InClientObjectUID);
	void OnClientObjectDestroyed(class AActor* InDestroyedActor);
	void Client_SpawnInteractiveObjects(TArray<struct FClientSpawnData> InSpawnList);
	void Client_OnInteractionValidated(class UTigerInteractionControllerComponent* InInteractor, uint32_t InClientObjectUID, bool InSuccess);
	void Client_DestroyInteractiveObjects(TArray<uint32_t> InDestroyList);
};

// Class Tiger.TigerPushConnectionManager
// 0x0080 (FullSize[0x00A8] - InheritedSize[0x0028])
class UTigerPushConnectionManager : public UObject
{
public:
	class UTigerGameInstance*                          GameInstance;                                              // 0x0028(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_3RMA[0x78];                                    // 0x0030(0x0078) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerPushConnectionManager");
		return ptr;
	}



};

// Class Tiger.TigerClientPushConnectionManager
// 0x0050 (FullSize[0x00F8] - InheritedSize[0x00A8])
class UTigerClientPushConnectionManager : public UTigerPushConnectionManager
{
public:
	unsigned char                                      UnknownData_09SM[0x50];                                    // 0x00A8(0x0050) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerClientPushConnectionManager");
		return ptr;
	}



};

// Class Tiger.TigerClimbablePipe
// 0x0008 (FullSize[0x0230] - InheritedSize[0x0228])
class ATigerClimbablePipe : public AActor
{
public:
	unsigned char                                      UnknownData_1CD4[0x8];                                     // 0x0228(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerClimbablePipe");
		return ptr;
	}



};

// Class Tiger.TigerCollectibleProgressCache
// 0x0050 (FullSize[0x0078] - InheritedSize[0x0028])
class UTigerCollectibleProgressCache : public UObject
{
public:
	unsigned char                                      UnknownData_JXZO[0x50];                                    // 0x0028(0x0050) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerCollectibleProgressCache");
		return ptr;
	}



};

// Class Tiger.TigerCollectibleData
// 0x0060 (FullSize[0x0090] - InheritedSize[0x0030])
class UTigerCollectibleData : public UDataAsset
{
public:
	uint32_t                                           CollectibleId;                                             // 0x0030(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_EJKK[0x4];                                     // 0x0034(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FText                                       CollectibleName;                                           // 0x0038(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FText                                       CollectibleDescription;                                    // 0x0050(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	int                                                TotalRequired;                                             // 0x0068(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_XYSS[0x4];                                     // 0x006C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UTigerGrimoireEntry*                         GrimoireEntryToUnlock;                                     // 0x0070(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTigerCollectibleGrimoireEntrySet*           GrimoireEntrySet;                                          // 0x0078(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FTigerItemId>                        RewardIds;                                                 // 0x0080(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerCollectibleData");
		return ptr;
	}



};

// Class Tiger.TigerCollectibleGrimoireEntrySet
// 0x0010 (FullSize[0x0040] - InheritedSize[0x0030])
class UTigerCollectibleGrimoireEntrySet : public UDataAsset
{
public:
	TArray<class UTigerGrimoireEntry*>                 Set;                                                       // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerCollectibleGrimoireEntrySet");
		return ptr;
	}



};

// Class Tiger.TigerCollectibleSystem
// 0x00A0 (FullSize[0x0150] - InheritedSize[0x00B0])
class UTigerCollectibleSystem : public UActorComponent
{
public:
	class UClass*                                      CollectiblePickupExpEvent;                                 // 0x00B0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTigerItemAsset*                             GenericCollectibleItemAsset;                               // 0x00B8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_IMD1[0x90];                                    // 0x00C0(0x0090) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerCollectibleSystem");
		return ptr;
	}



	void Server_AwardCollectible(class UTigerCollectibleData* InCollectible);
	void ProcessCollectible(const struct FText& InCollectibleId);
	class UTigerCollectibleData* GetCollectibleWithName(const struct FText& InCollectibleName);
	void Client_ProcessCollectible(uint32_t InCollectibleId);
};

// Class Tiger.TigerCollectibleSystemSettings
// 0x0028 (FullSize[0x0060] - InheritedSize[0x0038])
class UTigerCollectibleSystemSettings : public UDeveloperSettings
{
public:
	unsigned char                                      CollectiblesTable[0x28];                                   // 0x0038(0x0028) UNKNOWN PROPERTY: SoftObjectProperty


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerCollectibleSystemSettings");
		return ptr;
	}



	bool STATIC_IsTableReady();
	class UDataTable* STATIC_GetCollectiblesTable();
};

// Class Tiger.TigerMaxIntAggregator
// 0x0018 (FullSize[0x0040] - InheritedSize[0x0028])
class UTigerMaxIntAggregator : public UObject
{
public:
	unsigned char                                      UnknownData_LT9E[0x18];                                    // 0x0028(0x0018) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerMaxIntAggregator");
		return ptr;
	}



	void RemoveValue(int Value);
	void AddValue(int Value);
};

// Class Tiger.TigerFloatMinAggregator
// 0x0018 (FullSize[0x0040] - InheritedSize[0x0028])
class UTigerFloatMinAggregator : public UObject
{
public:
	unsigned char                                      UnknownData_947E[0x18];                                    // 0x0028(0x0018) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerFloatMinAggregator");
		return ptr;
	}



	void RemoveValue(float Value);
	void AddValue(float Value);
};

// Class Tiger.TigerFloatAverageAggregator
// 0x0018 (FullSize[0x0040] - InheritedSize[0x0028])
class UTigerFloatAverageAggregator : public UObject
{
public:
	unsigned char                                      UnknownData_NK8E[0x18];                                    // 0x0028(0x0018) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerFloatAverageAggregator");
		return ptr;
	}



	void RemoveValue(float Value);
	void AddValue(float Value);
};

// Class Tiger.TigerFloatMultiplierAggregator
// 0x0018 (FullSize[0x0040] - InheritedSize[0x0028])
class UTigerFloatMultiplierAggregator : public UObject
{
public:
	unsigned char                                      UnknownData_U1B5[0x18];                                    // 0x0028(0x0018) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerFloatMultiplierAggregator");
		return ptr;
	}



	void RemoveValue(float Value);
	void AddValue(float Value);
};

// Class Tiger.TigerBoolAnyAggregator
// 0x0018 (FullSize[0x0040] - InheritedSize[0x0028])
class UTigerBoolAnyAggregator : public UObject
{
public:
	unsigned char                                      UnknownData_CPMB[0x18];                                    // 0x0028(0x0018) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerBoolAnyAggregator");
		return ptr;
	}



	void RemoveValue(bool Value);
	void AddValue(bool Value);
};

// Class Tiger.TigerFloatCurveMultiplierAggregator
// 0x0018 (FullSize[0x0040] - InheritedSize[0x0028])
class UTigerFloatCurveMultiplierAggregator : public UObject
{
public:
	unsigned char                                      UnknownData_PUFL[0x18];                                    // 0x0028(0x0018) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerFloatCurveMultiplierAggregator");
		return ptr;
	}



	void RemoveValue(class UCurveFloat* Value);
	void AddValue(class UCurveFloat* Value);
};

// Class Tiger.TigerCombatComponent
// 0x0098 (FullSize[0x0148] - InheritedSize[0x00B0])
class UTigerCombatComponent : public UActorComponent
{
public:
	class UClass*                                      DefaultUnarmedWeaponClass;                                 // 0x00B0(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTigerItemAsset*                             DefaultMeleeItemAsset;                                     // 0x00B8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTigerItemAsset*                             DefaultRangedItemAsset;                                    // 0x00C0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint32_t                                           DefaultRangedStartingAmmo;                                 // 0x00C8(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_2WJS[0x4];                                     // 0x00CC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnEnterCombat;                                             // 0x00D0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnLeaveCombat;                                             // 0x00E0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UClass*                                      CurrentWeaponClass;                                        // 0x00F0(0x0008) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UClass*                                      CurrentMeleeWeaponClass;                                   // 0x00F8(0x0008) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UClass*                                      CurrentVisibleWeaponClass;                                 // 0x0100(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              OutOfCombatTime;                                           // 0x0108(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              EnterCombatEmissiveStrength;                               // 0x010C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              ExitCombatEmissiveStrength;                                // 0x0110(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FName                                       CombatMaterialParameterName;                               // 0x0114(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_91BH[0xC];                                     // 0x011C(0x000C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              EntityDetectionSphere;                                     // 0x0128(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_TBN7[0x8];                                     // 0x012C(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	unsigned char                                      CombatState;                                               // 0x0134(0x0001) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_07AO[0x13];                                    // 0x0135(0x0013) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerCombatComponent");
		return ptr;
	}



	void OnRep_CombatStateChanged();
	void OnCombatAction();
	void Multicast_SetCurrentMeleeWeaponClass(class UClass* MeleeWeaponClass);
	void Multicast_OnDesiredWeaponChanged(class UClass* WeaponClass, class UClass* MeleeWeaponClass, bool bInstantSwitch);
	bool IsInCombat();
	bool HasEquippedWeapon();
	Tiger_ETigerEquippedWeaponType GetEquippedWeaponType();
	class UTigerWeapon* GetCurrentWeaponClassDefaultObject();
	class UClass* GetCurrentWeaponClass();
	class UTigerMeleeWeapon* GetCurrentMeleeWeaponClassDefaultObject();
	class UClass* GetCurrentMeleeWeaponClass();
	bool EquipWeapon(Tiger_ETigerWeaponSlot Slot, class UClass* WeaponClass, bool bInstantSwitch);
	void CheckForCombat();
};

// Class Tiger.TigerCompassMarkerComponent
// 0x0028 (FullSize[0x00D8] - InheritedSize[0x00B0])
class UTigerCompassMarkerComponent : public UActorComponent
{
public:
	class UTigerCompassMarkerWidget*                   CompassMarkerWidget;                                       // 0x00B0(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                                  MarkerTexture;                                             // 0x00B8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bShouldShowByDefault;                                      // 0x00C0(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_VN2Y[0x17];                                    // 0x00C1(0x0017) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerCompassMarkerComponent");
		return ptr;
	}



	void Show();
	void Hide();
};

// Class Tiger.TigerCompassMarkerWidget
// 0x0018 (FullSize[0x0298] - InheritedSize[0x0280])
class UTigerCompassMarkerWidget : public UTigerWidget
{
public:
	struct FVector                                     MarkerWorldLocation;                                       // 0x0280(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_6LNP[0x4];                                     // 0x028C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UTexture2D*                                  MarkerTexture;                                             // 0x0290(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerCompassMarkerWidget");
		return ptr;
	}



	void SetColorBasedOnPlayerIndex(unsigned char InIndex);
	float GetRelativeAngleOnCompass();
};

// Class Tiger.TigerCompassUI
// 0x0000 (FullSize[0x0280] - InheritedSize[0x0280])
class UTigerCompassUI : public UTigerWidget
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerCompassUI");
		return ptr;
	}



	void ShowCompassObject(class UTigerCompassMarkerWidget* CompassObject);
	void HideCompassObject(class UTigerCompassMarkerWidget* CompassObject);
};

// Class Tiger.TigerConsumableAsset
// 0x0048 (FullSize[0x0170] - InheritedSize[0x0128])
class UTigerConsumableAsset : public UTigerItemAsset
{
public:
	class UAnimMontage*                                Montage;                                                   // 0x0128(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bCanBeUsedWhileMoving;                                     // 0x0130(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_Q8FP[0x3];                                     // 0x0131(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              UseTime;                                                   // 0x0134(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                MaxStack;                                                  // 0x0138(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_LGFF[0x4];                                     // 0x013C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UAkAudioEvent*                               BeginUseAudioEvent;                                        // 0x0140(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               UseSuccessfulAudioEvent;                                   // 0x0148(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               UseFailedAudioEvent;                                       // 0x0150(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      SuccessfulUseCharacterEffect;                              // 0x0158(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      BeginUsePostProcess;                                       // 0x0160(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      SuccessfulBuffPostProcess;                                 // 0x0168(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerConsumableAsset");
		return ptr;
	}



};

// Class Tiger.TigerHealingConsumableAsset
// 0x0008 (FullSize[0x0178] - InheritedSize[0x0170])
class UTigerHealingConsumableAsset : public UTigerConsumableAsset
{
public:
	float                                              HealAmount;                                                // 0x0170(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_7E6A[0x4];                                     // 0x0174(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerHealingConsumableAsset");
		return ptr;
	}



};

// Class Tiger.TigerBuffingConsumableAsset
// 0x0008 (FullSize[0x0178] - InheritedSize[0x0170])
class UTigerBuffingConsumableAsset : public UTigerConsumableAsset
{
public:
	class UClass*                                      BuffToApply;                                               // 0x0170(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerBuffingConsumableAsset");
		return ptr;
	}



};

// Class Tiger.TigerRevealItemConsumableAsset
// 0x0008 (FullSize[0x0178] - InheritedSize[0x0170])
class UTigerRevealItemConsumableAsset : public UTigerConsumableAsset
{
public:
	float                                              MaxDistanceToItem;                                         // 0x0170(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_L7BF[0x4];                                     // 0x0174(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerRevealItemConsumableAsset");
		return ptr;
	}



};

// Class Tiger.TigerSupplyDropConsumableAsset
// 0x0018 (FullSize[0x0188] - InheritedSize[0x0170])
class UTigerSupplyDropConsumableAsset : public UTigerConsumableAsset
{
public:
	class UClass*                                      SupplyDropFlare;                                           // 0x0170(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      SupplyDropHelicopterActor;                                 // 0x0178(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              DistanceFromPlayer;                                        // 0x0180(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              Height;                                                    // 0x0184(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerSupplyDropConsumableAsset");
		return ptr;
	}



};

// Class Tiger.TigerConsumablesComponent
// 0x00D8 (FullSize[0x0188] - InheritedSize[0x00B0])
class UTigerConsumablesComponent : public UActorComponent
{
public:
	struct FScriptMulticastDelegate                    OnUseConsumableFinished;                                   // 0x00B0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnUseConsumableStarted;                                    // 0x00C0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnUseConsumableCancelled;                                  // 0x00D0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnUseConsumablePrevented;                                  // 0x00E0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UAnimMontage*                                FallbackUseMontage;                                        // 0x00F0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTigerConsumableAsset*                       QuickUseConsumable;                                        // 0x00F8(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UClass*                                      MovableBuffClass;                                          // 0x0100(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                CancelConsumableUseOnTraversalAction;                      // 0x0108(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_MA4Y[0x4];                                     // 0x010C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class ATigerPlayer*                                Player;                                                    // 0x0110(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAnimMontage*                                CurrentMontage;                                            // 0x0118(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTigerConsumableAsset*                       CurrentConsumable;                                         // 0x0120(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTigerConsumableAsset*                       QuickConsumables[0x6];                                     // 0x0128(0x0030) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_N6JN[0x30];                                    // 0x0158(0x0030) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerConsumablesComponent");
		return ptr;
	}



	void UseCallback();
	bool TriggerUseQuickUseConsumable();
	bool TriggerUseConsumable(class UTigerConsumableAsset* Consumable);
	bool TriggerDropConsumable(class UTigerConsumableAsset* Consumable);
	void TigerDelegateConsumableSuccessfullyFinishedUse__DelegateSignature(class UTigerConsumableAsset* Consumable);
	void TigerDelegateConsumableStartedUse__DelegateSignature(class UTigerConsumableAsset* Consumable);
	void TigerDelegateConsumablePrevented__DelegateSignature(class UTigerConsumableAsset* Consumable);
	void TigerDelegateConsumableCancelledUse__DelegateSignature(class UTigerConsumableAsset* Consumable);
	void Server_UseConsumable(class UTigerConsumableAsset* Consumable);
	void Server_StopUseConsumable(class UTigerConsumableAsset* InConsumable);
	void OnTraversalAction(class ATigerPlayer* InPlayer, Tiger_ETigerTraversalAction InTraversalAction);
	void Multicast_StopUseConsumable(class UTigerConsumableAsset* InConsumable);
	void Multicast_SimulateUseConsumable(class UTigerConsumableAsset* Consumable, float UseTime);
	bool IsUsingConsumable();
	bool IsPlayingConsumableMontage();
	float GetUseProgress();
	class UTigerConsumableAsset* GetCurrentlyUsingConsumable();
	bool GetConsumableAtIndex(int Index, class UTigerConsumableAsset** Consumable, int* Stack);
	void Client_UseConsumableFailed(class UTigerConsumableAsset* InConsumable);
	bool CanPickUpConsumable(class UTigerConsumableAsset* Consumable);
	bool CanBePickedup(class UTigerConsumableAsset* Consumable);
};

// Class Tiger.TigerConsumableWheelWidget
// 0x0018 (FullSize[0x02B8] - InheritedSize[0x02A0])
class UTigerConsumableWheelWidget : public UTigerWheelWidget
{
public:
	class ATigerPlayer*                                Player;                                                    // 0x02A0(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTigerConsumablesComponent*                  ConsumablesComponent;                                      // 0x02A8(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTigerInventoryComponent*                    InventoryComponent;                                        // 0x02B0(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerConsumableWheelWidget");
		return ptr;
	}



};

// Class Tiger.TigerContextualHelp
// 0x0088 (FullSize[0x00B0] - InheritedSize[0x0028])
class UTigerContextualHelp : public UObject
{
public:
	float                                              LifeTimeInSeconds;                                         // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_MY06[0x4];                                     // 0x002C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FText                                       HeaderText;                                                // 0x0030(0x0018) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FText                                       DescriptionText;                                           // 0x0048(0x0018) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FName                                       InputAction;                                               // 0x0060(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bShouldHideOnInput;                                        // 0x0068(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_W2O3[0x7];                                     // 0x0069(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	unsigned char                                      Icon[0x28];                                                // 0x0069(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	int                                                MatchesPlayedLimit;                                        // 0x0098(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bWantsToShow;                                              // 0x009C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_6HI5[0x3];                                     // 0x009D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              CooldownInSeconds;                                         // 0x00A0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	Tiger_ETigerContextualHelpType                     ContextualHelpType;                                        // 0x00A4(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	Tiger_ETigerContextualHelpShouldShowInGameMode     ShouldShowInGameMode;                                      // 0x00A5(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_KWET[0xA];                                     // 0x00A6(0x000A) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerContextualHelp");
		return ptr;
	}



	void SetupTriggerConditions(const struct FTigerContextualHelpContext& InContext);
	void OnPlayerSpawned(class ATigerPlayer* InTigerPlayer);
	void OnHide(class ATigerPlayerController* InTigerPlayerController);
	bool HasReachedMaxMatchesPlayedLimit(const struct FTigerContextualHelpContext& InContext);
	void ExtendLifetime(float InLifeTimeInSeconds, Tiger_ETigerContextualHelpType InType);
	bool CanEverShow(const struct FTigerContextualHelpContext& InContext);
};

// Class Tiger.TigerContextualHelpComponent
// 0x0050 (FullSize[0x0100] - InheritedSize[0x00B0])
class UTigerContextualHelpComponent : public UActorComponent
{
public:
	class ATigerPlayerController*                      TigerPlayerController;                                     // 0x00B0(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTigerContextualHelpUI*                      ContextualHelpUI;                                          // 0x00B8(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FTigerCurrentContextualHelp>         ActiveContextualHelps;                                     // 0x00C0(0x0010) (ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	TArray<class UTigerContextualHelp*>                ContextualHelpCandidates;                                  // 0x00D0(0x0010) (ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      ContextualHelpTypes[0x10];                                 // 0x00E0(0x0010) UNKNOWN PROPERTY: ArrayProperty
	float                                              CooldownTime;                                              // 0x00F0(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              MinimumDisplayTime;                                        // 0x00F4(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_GRFQ[0x8];                                     // 0x00F8(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerContextualHelpComponent");
		return ptr;
	}



	void PrepareContextualHelpComponentsForCurrentSession(const struct FTigerContextualHelpContext& InContext);
	void OnPersistentPlayerStateInitialized(class ATigerPlayerController* InPlayerController);
	TArray<class UTigerContextualHelp*> GetCurrentContextualHelpCandidates();
};

// Class Tiger.TigerContextualHelpUI
// 0x0000 (FullSize[0x0280] - InheritedSize[0x0280])
class UTigerContextualHelpUI : public UTigerWidget
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerContextualHelpUI");
		return ptr;
	}



	void OnShowHelpWidget(class UTigerContextualHelp* InData, Tiger_ETigerContextualHelpType InType);
	void OnHideHelpWidget(class UTigerContextualHelp* InData, float* OutAnimationDuration, Tiger_ETigerContextualHelpType InType);
};

// Class Tiger.TigerCrosshairWidget
// 0x0060 (FullSize[0x02E0] - InheritedSize[0x0280])
class UTigerCrosshairWidget : public UTigerWidget
{
public:
	Tiger_ETargetInteraction                           PreviousInteraction;                                       // 0x0280(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_V8NH[0x7];                                     // 0x0281(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UObject*                                     PreviousInteractionObject;                                 // 0x0288(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class ATigerCharacter>              PreviousInteractionCharacter;                              // 0x0290(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTigerInventoryComponent*                    Inventory;                                                 // 0x0298(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInstanceDynamic*                    ProgressBarMaterial;                                       // 0x02A0(0x0008) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                                RootPanel;                                                 // 0x02A8(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ATigerPlayer*                                TigerPlayer;                                               // 0x02B0(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTigerWeaponCrosshairWidget*                 CurrentWeaponCrosshair;                                    // 0x02B8(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UTigerWeaponCrosshairWidget*>         PreviousWeaponCrosshairs;                                  // 0x02C0(0x0010) (ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	float                                              ProgressValue;                                             // 0x02D0(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	Tiger_ETigerUIColor                                CurrentProgressBarColor;                                   // 0x02D4(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_RUZU[0xB];                                     // 0x02D5(0x000B) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerCrosshairWidget");
		return ptr;
	}



	void UpdateInteraction(Tiger_ETargetInteraction Interaction, class UObject* InteractionObject);
	void SetProgressBarColor(Tiger_ETigerUIColor UIColor);
	void OnShowHitMarker(const struct FLinearColor& HitmarkerColor, bool bWasDownedOrKilled);
	void OnInventoryUpdated();
};

// Class Tiger.TigerCrowdAgentComponent
// 0x0008 (FullSize[0x00B8] - InheritedSize[0x00B0])
class UTigerCrowdAgentComponent : public UActorComponent
{
public:
	unsigned char                                      UnknownData_ZRYT[0x8];                                     // 0x00B0(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerCrowdAgentComponent");
		return ptr;
	}



};

// Class Tiger.TigerCSVTable
// 0x0018 (FullSize[0x0040] - InheritedSize[0x0028])
class UTigerCSVTable : public UObject
{
public:
	unsigned char                                      UnknownData_Y0J7[0x18];                                    // 0x0028(0x0018) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerCSVTable");
		return ptr;
	}



	void WriteToFile(const struct FString& Filename, const struct FString& Path);
	void SetValueString(int Row, int Column, const struct FString& Value);
	void SetValueFloat(int Row, int Column, float Value);
	int AddColumn(const struct FString& ColumnName);
	void AccumulateValue(int Row, int Column, float Value);
};

// Class Tiger.TigerItemDatabase
// 0x0050 (FullSize[0x0078] - InheritedSize[0x0028])
class UTigerItemDatabase : public UObject
{
public:
	TMap<struct FName, struct FTigerItemDatabaseCategory> ItemsByCategory;                                           // 0x0028(0x0050) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerItemDatabase");
		return ptr;
	}



	void OnItemLoaded__DelegateSignature(const struct FTigerItemId& ItemId, class UTigerInventoryItemBase* InventoryItem);
	void LoadItemIdAsync(const struct FTigerItemId& InItemId, const struct FScriptDelegate& InDelegate);
	void GetItemPath(const struct FTigerItemId& InItemId);
	struct FTigerItemId GetItemIdFromPath(const struct FSoftObjectPath& InObjectPath);
	class UTigerInventoryItemBase* GetItem(const struct FTigerItemId& InItemId);
};

// Class Tiger.TigerItemPreviewInputComponent
// 0x0020 (FullSize[0x0158] - InheritedSize[0x0138])
class UTigerItemPreviewInputComponent : public UInputComponent
{
public:
	float                                              CameraSensitivityTurnMultiplier;                           // 0x0138(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              CameraSensitivityTurnAtRateMultiplier;                     // 0x013C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              CameraSensitivityVerticalMovementMultiplier;               // 0x0140(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_N34X[0x4];                                     // 0x0144(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class ATigerBattlepassRewardPreview*               ItemActor;                                                 // 0x0148(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_RXUR[0x8];                                     // 0x0150(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerItemPreviewInputComponent");
		return ptr;
	}



};

// Class Tiger.TigerBattlepassRewardPreview
// 0x0050 (FullSize[0x0278] - InheritedSize[0x0228])
class ATigerBattlepassRewardPreview : public AActor
{
public:
	class UTigerInventoryItemBase*                     PreviewItem;                                               // 0x0228(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FName>                               CameraTags;                                                // 0x0230(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TArray<struct FTigerItemPreviewCamera>             Cameras;                                                   // 0x0240(0x0010) (ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	struct FViewTargetTransitionParams                 CameraTransitionParams;                                    // 0x0250(0x0010) (Edit, DisableEditOnInstance, NoDestructor, Protected, NativeAccessSpecifierProtected)
	float                                              CameraRadius;                                              // 0x0260(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              CameraMoveSpeed;                                           // 0x0264(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_W2GU[0x10];                                    // 0x0268(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerBattlepassRewardPreview");
		return ptr;
	}



	void SetNormalizedCameraHeight(class ACineCameraActor* InCameraActor, float InNormalizedHeight);
	void OnToggleCamera(class ACineCameraActor* InCurrentCamera, class ACineCameraActor* InNewCamera);
	void OnPreviewItemUpdated();
	void MoveToCameraIndex(int InNewCameraIndex);
	bool IsValidCameraOffset(const struct FVector& InCameraOffset);
	float GetNormalizedCameraHeight(class ACineCameraActor* InCameraActor);
	void AddWorldRotationToItem(const struct FRotator& InRotation);
};

// Class Tiger.TigerItemSpawner
// 0x0000 (FullSize[0x0228] - InheritedSize[0x0228])
class ATigerItemSpawner : public AActor
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerItemSpawner");
		return ptr;
	}



};

// Class Tiger.TigerItemWorldRepresentation
// 0x0060 (FullSize[0x0288] - InheritedSize[0x0228])
class ATigerItemWorldRepresentation : public AActor
{
public:
	unsigned char                                      UnknownData_TF3A[0x8];                                     // 0x0228(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UTigerCompassMarkerWidget*                   CompassMarker;                                             // 0x0230(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_QWK1[0x8];                                     // 0x0238(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UTigerItemAsset*                             ItemType;                                                  // 0x0240(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UDataTable*                                  RangedWeaponsDatatable;                                    // 0x0248(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_D0L1[0x18];                                    // 0x0250(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                ItemCount;                                                 // 0x0268(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_YSEC[0xC];                                     // 0x026C(0x000C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class ATigerItemCluster*                           ItemCluster;                                               // 0x0278(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint32_t                                           ItemClusterUID;                                            // 0x0280(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	Tiger_ETigerTelemetryItemSourceID                  ItemSourceID;                                              // 0x0284(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_67ZV[0x3];                                     // 0x0285(0x0003) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerItemWorldRepresentation");
		return ptr;
	}



	void SetItemOutlineVisible(bool ShowOutline);
	void SetItemAsset(class UTigerItemAsset* NewItemType, int NewItemCount);
	void OnFinalTransformReceived(const struct FTransform& InFinalTransform);
};

// Class Tiger.TigerJoinSessionAsync
// 0x0160 (FullSize[0x0190] - InheritedSize[0x0030])
class UTigerJoinSessionAsync : public UBlueprintAsyncActionBase
{
public:
	struct FScriptMulticastDelegate                    OnSuccess;                                                 // 0x0030(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnFailed;                                                  // 0x0040(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_XK3N[0x140];                                   // 0x0050(0x0140) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerJoinSessionAsync");
		return ptr;
	}



	class UTigerJoinSessionAsync* STATIC_JoinSession(class UObject* WorldContextObject, class APlayerController* PlayerController, const struct FTigerBpFindSessionSelectedSession& FoundSession);
};

// Class Tiger.TigerVoSettings
// 0x0078 (FullSize[0x00B0] - InheritedSize[0x0038])
class UTigerVoSettings : public USharkLocalDeveloperSettings
{
public:
	unsigned char                                      AudioEvent[0x28];                                          // 0x0038(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	TMap<struct FName, struct FTigerVoCategoryData>    CategoryData;                                              // 0x0060(0x0050) (Edit, Config, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerVoSettings");
		return ptr;
	}



};

// Class Tiger.TigerCharacterOutfitConfiguration
// 0x0190 (FullSize[0x02A0] - InheritedSize[0x0110])
class UTigerCharacterOutfitConfiguration : public UTigerInventoryItemBase
{
public:
	struct FTigerLodSplitMesh                          SplitMesh;                                                 // 0x0110(0x0078) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	unsigned char                                      AdditionalMesh[0x28];                                      // 0x0188(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	TArray<struct FTigerCharacterOutfitHoodieVariation> HoodieVariations;                                          // 0x01B0(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	unsigned char                                      Materials[0x50];                                           // 0x01C0(0x0050) UNKNOWN PROPERTY: MapProperty
	struct FTigerCharacterHolsteredWeaponTransforms    HolsteredWeaponsTransforms;                                // 0x0210(0x0060) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	bool                                               bHoodieUpOnThumbnail;                                      // 0x0270(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_XF16[0x7];                                     // 0x0271(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	unsigned char                                      Mesh[0x28];                                                // 0x0271(0x0028) UNKNOWN PROPERTY: SoftObjectProperty


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerCharacterOutfitConfiguration");
		return ptr;
	}



};

// Class Tiger.TigerCharacterCombinedItemConfiguration
// 0x0038 (FullSize[0x0148] - InheritedSize[0x0110])
class UTigerCharacterCombinedItemConfiguration : public UTigerInventoryItemBase
{
public:
	unsigned char                                      CombinedItemClassType[0x28];                               // 0x0110(0x0028) UNKNOWN PROPERTY: SoftClassProperty
	TArray<struct FTigerInventoryCombinedItemValue>    Items;                                                     // 0x0138(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerCharacterCombinedItemConfiguration");
		return ptr;
	}



	class UClass* GetItemFromCombinedContainer(Tiger_ETigerGender InBodyType, Tiger_ETigerPowerKitType InPowerKit, Tiger_ETigerClan InClan);
};

// Class Tiger.TigerCharacterSkinToneCustomization
// 0x0050 (FullSize[0x0160] - InheritedSize[0x0110])
class UTigerCharacterSkinToneCustomization : public UTigerInventoryItemBase
{
public:
	struct FTigerCharacterCustomizationParameters      AdditionalParameters;                                      // 0x0110(0x0038) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FLinearColor                                LightColor;                                                // 0x0148(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              LightIntensity;                                            // 0x0158(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_9P9C[0x4];                                     // 0x015C(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerCharacterSkinToneCustomization");
		return ptr;
	}



};

// Class Tiger.TigerCharacterBodyTypeCustomization
// 0x0028 (FullSize[0x0138] - InheritedSize[0x0110])
class UTigerCharacterBodyTypeCustomization : public UTigerInventoryItemBase
{
public:
	unsigned char                                      CharacterPreset[0x28];                                     // 0x0110(0x0028) UNKNOWN PROPERTY: SoftObjectProperty


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerCharacterBodyTypeCustomization");
		return ptr;
	}



};

// Class Tiger.TigerPlayerCardCustomization
// 0x0000 (FullSize[0x0110] - InheritedSize[0x0110])
class UTigerPlayerCardCustomization : public UTigerInventoryItemBase
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerPlayerCardCustomization");
		return ptr;
	}



};

// Class Tiger.TigerCharacterHeadConfiguration
// 0x0150 (FullSize[0x0260] - InheritedSize[0x0110])
class UTigerCharacterHeadConfiguration : public UTigerCharacterPartOfHeadCustomization
{
public:
	struct FTigerLodSplitMesh                          SplitMesh;                                                 // 0x0110(0x0078) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	unsigned char                                      FacePostAsset[0x28];                                       // 0x0188(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	unsigned char                                      FacePoseSourceAnimation[0x28];                             // 0x01B0(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	unsigned char                                      BodySkinMaterials[0x10];                                   // 0x01D8(0x0010) UNKNOWN PROPERTY: ArrayProperty
	unsigned char                                      SkinTones[0x10];                                           // 0x01E8(0x0010) UNKNOWN PROPERTY: ArrayProperty
	struct FName                                       HeadgearMaleSocket;                                        // 0x01F8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       HeadgearFemaleSocket;                                      // 0x0200(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       HeadgearOffsetSocketName;                                  // 0x0208(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       HeadgearOffsetLocator;                                     // 0x0210(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTigerCharacterHeadHeadgearOffset           HeadgearOffset;                                            // 0x0218(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FName                                       EyewearSocket;                                             // 0x0230(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      Mesh[0x28];                                                // 0x0238(0x0028) UNKNOWN PROPERTY: SoftObjectProperty


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerCharacterHeadConfiguration");
		return ptr;
	}



	void SetPoseableBeard(class UTigerCharacterBeardCustomization* InBeard, class UTigerCharacterMeshManager* InMeshManager);
	void SetPiercingSlotLocationAndRotation(class UTigerCharacterMeshManager* InMeshManager, const struct FName& InName, const struct FVector& InLocation, const struct FRotator& InRotation);
	void SetPiercings(class UTigerCharacterPiercingSetCustomization* InPiercingSet, class UTigerCharacterMeshManager* InMeshManager);
	void SetEyewearOffset(class UTigerCharacterMeshManager* MeshManager);
	void GetPiercingSlots(class UTigerCharacterMeshManager* InMeshManager, TMap<struct FName, struct FTigerCharacterHeadPiercingSocket>* OutSlots);
	void DrawDebugPiercingSlots(class UTigerCharacterMeshManager* InMeshManager);
};

// Class Tiger.TigerCharacterEyebrowColorCustomization
// 0x0038 (FullSize[0x0148] - InheritedSize[0x0110])
class UTigerCharacterEyebrowColorCustomization : public UTigerCharacterPartOfHeadCustomization
{
public:
	struct FTigerCharacterCustomizationParameters      AdditionalParameters;                                      // 0x0110(0x0038) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerCharacterEyebrowColorCustomization");
		return ptr;
	}



};

// Class Tiger.TigerCharacterBeardCustomization
// 0x0038 (FullSize[0x0148] - InheritedSize[0x0110])
class UTigerCharacterBeardCustomization : public UTigerCharacterPartOfHeadCustomization
{
public:
	struct FTigerCharacterCustomizationParameters      AdditionalParameters;                                      // 0x0110(0x0038) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerCharacterBeardCustomization");
		return ptr;
	}



};

// Class Tiger.TigerWorldCompositionGrid
// 0x0108 (FullSize[0x0330] - InheritedSize[0x0228])
class ATigerWorldCompositionGrid : public AActor
{
public:
	struct FScriptMulticastDelegate                    OnCellStartedLoadingEvent;                                 // 0x0228(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnCellFinishedLoadingEvent;                                // 0x0238(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnCellStartedUnloadingEvent;                               // 0x0248(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnCellFinishedUnloadingEvent;                              // 0x0258(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnPrespawnStreamingFinishedEvent;                          // 0x0268(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	Tiger_ETigerWorldCompositionGridLayout             Layout;                                                    // 0x0278(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_HCG4[0x3];                                     // 0x0279(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FVector                                     GridExtent;                                                // 0x027C(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int                                                LevelDepth;                                                // 0x0288(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              CellTriggerSizeBias;                                       // 0x028C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      BlackListedLevels[0x10];                                   // 0x0290(0x0010) UNKNOWN PROPERTY: ArrayProperty
	unsigned char                                      AdditionalLevels[0x10];                                    // 0x02A0(0x0010) UNKNOWN PROPERTY: ArrayProperty
	unsigned char                                      AlwaysLoadedLevels[0x10];                                  // 0x02B0(0x0010) UNKNOWN PROPERTY: ArrayProperty
	class UTigerWorldCompositionCellComponent*         RootCellComponent;                                         // 0x02C0(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class UTigerWorldCompositionCellComponent*> LoadingCells;                                              // 0x02C8(0x0010) (ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	TArray<class UTigerWorldCompositionCellComponent*> LoadedCells;                                               // 0x02D8(0x0010) (ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	TArray<class UTigerWorldCompositionCellComponent*> UnloadingCells;                                            // 0x02E8(0x0010) (ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	TArray<struct FTigerRecentlyStreamedCellEntries>   RecentlyLoadedCells;                                       // 0x02F8(0x0010) (ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	TArray<struct FTigerRecentlyStreamedCellEntries>   RecentlyUnloadedCells;                                     // 0x0308(0x0010) (ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	TArray<struct FTigerStreamingPlayer>               StreamingPlayers;                                          // 0x0318(0x0010) (ZeroConstructor, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_91AT[0x8];                                     // 0x0328(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerWorldCompositionGrid");
		return ptr;
	}



	void PrespawnStreamingFinished__DelegateSignature();
	void HandleOnCellStartedUnloadingEvent(class UTigerWorldCompositionCellComponent* Cell);
	void HandleOnCellStartedLoadingEvent(class UTigerWorldCompositionCellComponent* Cell);
	void HandleOnCellFinishedUnloadingEvent(class UTigerWorldCompositionCellComponent* Cell);
	void HandleOnCellFinishedLoadingEvent(class UTigerWorldCompositionCellComponent* Cell);
	void CellStartedUnloading__DelegateSignature(class UTigerWorldCompositionCellComponent* Cell);
	void CellStartedLoading__DelegateSignature(class UTigerWorldCompositionCellComponent* Cell);
	void CellFinishedUnloading__DelegateSignature(class UTigerWorldCompositionCellComponent* Cell);
	void CellFinishedLoading__DelegateSignature(class UTigerWorldCompositionCellComponent* Cell);
};

// Class Tiger.TigerWorldCompositionSettings
// 0x0210 (FullSize[0x0248] - InheritedSize[0x0038])
class UTigerWorldCompositionSettings : public UDeveloperSettings
{
public:
	struct FDirectoryPath                              StreamedLevelDirectory;                                    // 0x0038(0x0010) (Edit, Config, NativeAccessSpecifierPublic)
	Tiger_ETigerWorldCompositionProxyMode              ProxyGenerationMode;                                       // 0x0048(0x0001) (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_A89I[0x3];                                     // 0x0049(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                ActorSortingCellSizeIncrementCount;                        // 0x004C(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ActorSortingCellSizeIncrementAmount;                       // 0x0050(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMeshMergingSettings                        ProxyMeshMergeSettings;                                    // 0x0054(0x00A0) (Edit, Config, NoDestructor, NativeAccessSpecifierPublic)
	bool                                               bDoSecondProxyGenStage;                                    // 0x00F4(0x0001) (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_YGWM[0x3];                                     // 0x00F5(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FMeshProxySettings                          ProxySettings;                                             // 0x00F8(0x00A8) (Edit, Config, NoDestructor, NativeAccessSpecifierPublic)
	struct FMeshBuildSettings                          LodBuildSettings;                                          // 0x01A0(0x0030) (Edit, Config, NoDestructor, NativeAccessSpecifierPublic)
	TArray<struct FPerPlatformFloat>                   LodScreenSizes;                                            // 0x01D0(0x0010) (Edit, ZeroConstructor, Config, NativeAccessSpecifierPublic)
	bool                                               bEnableLodDitheringOnProxyMeshes;                          // 0x01E0(0x0001) (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_YTP0[0x3];                                     // 0x01E1(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              ProxySizeRequirement;                                      // 0x01E4(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bForceLoadAllCellLevels;                                   // 0x01E8(0x0001) (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bBlockOnLoad;                                              // 0x01E9(0x0001) (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bEnablePreSpawnLoading;                                    // 0x01EA(0x0001) (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bTriggerGarbageCollectionOnUnload;                         // 0x01EB(0x0001) (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_N1D3[0x4];                                     // 0x01EC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	unsigned char                                      ProxyTypeBlacklistSoft[0x10];                              // 0x01EC(0x0010) UNKNOWN PROPERTY: ArrayProperty
	unsigned char                                      StreamingTypeBlacklistSoft[0x10];                          // 0x0200(0x0010) UNKNOWN PROPERTY: ArrayProperty
	unsigned char                                      LevelClusterBlacklistSoft[0x10];                           // 0x0210(0x0010) UNKNOWN PROPERTY: ArrayProperty
	unsigned char                                      DebugVisualizationMaterialNotInFilter[0x28];               // 0x0220(0x0028) UNKNOWN PROPERTY: SoftObjectProperty


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerWorldCompositionSettings");
		return ptr;
	}



};

// Class Tiger.TigerConsiderForProxyUserData
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class UTigerConsiderForProxyUserData : public UAssetUserData
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerConsiderForProxyUserData");
		return ptr;
	}



};

// Class Tiger.TigerNeverConsiderForProxyUserData
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class UTigerNeverConsiderForProxyUserData : public UAssetUserData
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerNeverConsiderForProxyUserData");
		return ptr;
	}



};

// Class Tiger.TigerWorldCompositionLevel
// 0x0000 (FullSize[0x0150] - InheritedSize[0x0150])
class UTigerWorldCompositionLevel : public ULevelStreaming
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerWorldCompositionLevel");
		return ptr;
	}



	class UTigerWorldCompositionLevel* STATIC_LoadLevelInstanceBySoftObjectPtr(class UObject* WorldContextObject, const struct FVector& Location, const struct FRotator& Rotation, bool* bOutSuccess);
	class UTigerWorldCompositionLevel* STATIC_LoadLevelInstance(class UObject* WorldContextObject, const struct FString& LevelName, const struct FVector& Location, const struct FRotator& Rotation, bool* bOutSuccess);
};

// Class Tiger.TigerWorldMarkerComponent
// 0x0010 (FullSize[0x00C0] - InheritedSize[0x00B0])
class UTigerWorldMarkerComponent : public UActorComponent
{
public:
	class UClass*                                      WorldMarkerActorType;                                      // 0x00B0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ATigerWorldMarker*                           WorldMarkerChild;                                          // 0x00B8(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerWorldMarkerComponent");
		return ptr;
	}



};

// Class Tiger.TigerWorldSettings
// 0x0000 (FullSize[0x03A8] - InheritedSize[0x03A8])
class ATigerWorldSettings : public AWorldSettings
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerWorldSettings");
		return ptr;
	}



};

// Class Tiger.TigerWorldStatsGenerator
// 0x0090 (FullSize[0x00B8] - InheritedSize[0x0028])
class UTigerWorldStatsGenerator : public UObject
{
public:
	unsigned char                                      UnknownData_OPSE[0x90];                                    // 0x0028(0x0090) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerWorldStatsGenerator");
		return ptr;
	}



};

// Class Tiger.TigerWorldStatsComponentCountGenerator
// 0x0000 (FullSize[0x00B8] - InheritedSize[0x00B8])
class UTigerWorldStatsComponentCountGenerator : public UTigerWorldStatsGenerator
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerWorldStatsComponentCountGenerator");
		return ptr;
	}



};

// Class Tiger.TigerWorldStatsActorCountGenerator
// 0x0000 (FullSize[0x00B8] - InheritedSize[0x00B8])
class UTigerWorldStatsActorCountGenerator : public UTigerWorldStatsGenerator
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerWorldStatsActorCountGenerator");
		return ptr;
	}



};

// Class Tiger.TigerWorldStatsObjectCountGenerator
// 0x0000 (FullSize[0x00B8] - InheritedSize[0x00B8])
class UTigerWorldStatsObjectCountGenerator : public UTigerWorldStatsGenerator
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerWorldStatsObjectCountGenerator");
		return ptr;
	}



};

// Class Tiger.TigerWorldStatsBlueprintCountGenerator
// 0x0000 (FullSize[0x00B8] - InheritedSize[0x00B8])
class UTigerWorldStatsBlueprintCountGenerator : public UTigerWorldStatsGenerator
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerWorldStatsBlueprintCountGenerator");
		return ptr;
	}



};

// Class Tiger.TigerWorldStatsCommandGenerator
// 0x0010 (FullSize[0x00C8] - InheritedSize[0x00B8])
class UTigerWorldStatsCommandGenerator : public UTigerWorldStatsGenerator
{
public:
	unsigned char                                      UnknownData_GNDV[0x10];                                    // 0x00B8(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerWorldStatsCommandGenerator");
		return ptr;
	}



};

// Class Tiger.TigerWorldStatsSubSystem
// 0x00B0 (FullSize[0x00E0] - InheritedSize[0x0030])
class UTigerWorldStatsSubSystem : public UGameInstanceSubsystem
{
public:
	unsigned char                                      UnknownData_X6LF[0xB0];                                    // 0x0030(0x00B0) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerWorldStatsSubSystem");
		return ptr;
	}



	void OnCellStartedLoading(class UTigerWorldCompositionCellComponent* InCellComponent);
	void OnCellFinishedLoading();
};

// Class Tiger.TigerCharacterTattooCustomization
// 0x0038 (FullSize[0x0148] - InheritedSize[0x0110])
class UTigerCharacterTattooCustomization : public UTigerInventoryItemBase
{
public:
	struct FTigerCharacterCustomizationParameters      AdditionalParameters;                                      // 0x0110(0x0038) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerCharacterTattooCustomization");
		return ptr;
	}



};

// Class Tiger.TigerCharacterPiercingSetCustomization
// 0x0000 (FullSize[0x0110] - InheritedSize[0x0110])
class UTigerCharacterPiercingSetCustomization : public UTigerCharacterPartOfHeadCustomization
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerCharacterPiercingSetCustomization");
		return ptr;
	}



};

// Class Tiger.TigerCharacterIconCustomization
// 0x0028 (FullSize[0x0138] - InheritedSize[0x0110])
class UTigerCharacterIconCustomization : public UTigerPlayerCardCustomization
{
public:
	unsigned char                                      CharacterIcon[0x28];                                       // 0x0110(0x0028) UNKNOWN PROPERTY: SoftObjectProperty


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerCharacterIconCustomization");
		return ptr;
	}



};

// Class Tiger.TigerCharacterCardShapeCustomization
// 0x0028 (FullSize[0x0138] - InheritedSize[0x0110])
class UTigerCharacterCardShapeCustomization : public UTigerPlayerCardCustomization
{
public:
	unsigned char                                      CardShapeMask[0x28];                                       // 0x0110(0x0028) UNKNOWN PROPERTY: SoftObjectProperty


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerCharacterCardShapeCustomization");
		return ptr;
	}



};

// Class Tiger.TigerCharacterCardBackgroundCustomization
// 0x0028 (FullSize[0x0138] - InheritedSize[0x0110])
class UTigerCharacterCardBackgroundCustomization : public UTigerPlayerCardCustomization
{
public:
	unsigned char                                      CardBackground[0x28];                                      // 0x0110(0x0028) UNKNOWN PROPERTY: SoftObjectProperty


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerCharacterCardBackgroundCustomization");
		return ptr;
	}



};

// Class Tiger.TigerCharacterEmoteCustomization
// 0x0010 (FullSize[0x0120] - InheritedSize[0x0110])
class UTigerCharacterEmoteCustomization : public UTigerInventoryItemBase
{
public:
	class UAnimMontage*                                EmoteMontage;                                              // 0x0110(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bStopsMovement;                                            // 0x0118(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_4K5R[0x3];                                     // 0x0119(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              ThumbnailPoseTime;                                         // 0x011C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerCharacterEmoteCustomization");
		return ptr;
	}



};

// Class Tiger.TigerSpawnMechanic
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class UTigerSpawnMechanic : public UObject
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerSpawnMechanic");
		return ptr;
	}



};

// Class Tiger.TigerSpawnMechanicBattleRoyaleBase
// 0x0028 (FullSize[0x0050] - InheritedSize[0x0028])
class UTigerSpawnMechanicBattleRoyaleBase : public UTigerSpawnMechanic
{
public:
	class ATigerMatchGameMode*                         GameMode;                                                  // 0x0028(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class AActor*>                              AllPlayerStarts;                                           // 0x0030(0x0010) (ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	TArray<class AActor*>                              UnusedPlayerStarts;                                        // 0x0040(0x0010) (ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerSpawnMechanicBattleRoyaleBase");
		return ptr;
	}



};

// Class Tiger.TigerSpawnMechanicBattleRoyaleMapSelection
// 0x0030 (FullSize[0x0080] - InheritedSize[0x0050])
class UTigerSpawnMechanicBattleRoyaleMapSelection : public UTigerSpawnMechanicBattleRoyaleBase
{
public:
	TArray<struct FTigerDesiredSpawnLocation>          DesiredSpawnLocations;                                     // 0x0050(0x0010) (ZeroConstructor, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_A0ND[0x20];                                    // 0x0060(0x0020) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerSpawnMechanicBattleRoyaleMapSelection");
		return ptr;
	}



	void OnPreMatchStateChanged(const struct FTigerPreMatchStateInfo& InNewInfo);
};

// Class Tiger.TigerClanCustomizationOptions
// 0x0300 (FullSize[0x0328] - InheritedSize[0x0028])
class UTigerClanCustomizationOptions : public UObject
{
public:
	TArray<struct FTigerCharacterCustomizationOutfitData> Outfits;                                                   // 0x0028(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
	TArray<struct FTigerCharacterCustomizationHeadData> Heads;                                                     // 0x0038(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
	TArray<struct FTigerCharacterCustomizationItem>    Hairs;                                                     // 0x0048(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
	TArray<struct FTigerCharacterCustomizationItem>    HairColors;                                                // 0x0058(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
	TArray<struct FTigerCharacterCustomizationItem>    EyeColors;                                                 // 0x0068(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
	TArray<struct FTigerCharacterCustomizationItem>    Tattoos;                                                   // 0x0078(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
	TArray<struct FTigerCharacterCustomizationItem>    FacePaints;                                                // 0x0088(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
	TArray<struct FTigerCharacterCustomizationItem>    PiercingSets;                                              // 0x0098(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
	TArray<struct FTigerCharacterCustomizationItem>    Headgears;                                                 // 0x00A8(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
	TArray<struct FTigerCharacterCustomizationItem>    Eyewears;                                                  // 0x00B8(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
	TArray<struct FTigerCharacterCustomizationItem>    Eyebrows;                                                  // 0x00C8(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
	TArray<struct FTigerCharacterCustomizationItem>    EyebrowColors;                                             // 0x00D8(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
	TArray<struct FTigerCharacterCustomizationItem>    Beards;                                                    // 0x00E8(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
	TArray<struct FTigerCharacterCustomizationItem>    BeardColors;                                               // 0x00F8(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
	TArray<struct FTigerCharacterCustomizationItem>    CharacterIcons;                                            // 0x0108(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
	TArray<struct FTigerCharacterCustomizationItem>    CharacterCardShapes;                                       // 0x0118(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
	TArray<struct FTigerCharacterCustomizationItem>    CharacterCardTextures;                                     // 0x0128(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
	TArray<struct FTigerCharacterCustomizationItem>    Emotes;                                                    // 0x0138(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
	TMap<Tiger_ETigerCustomizationType, struct FTigerCombinedItemCustomizations> CombinedItems;                                             // 0x0148(0x0050) (Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic)
	int                                                PersistentIdTicker;                                        // 0x0198(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_WORM[0x4];                                     // 0x019C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	unsigned char                                      IdToItemLut[0x50];                                         // 0x019C(0x0050) UNKNOWN PROPERTY: MapProperty
	unsigned char                                      ItemToIdLut[0x50];                                         // 0x01F0(0x0050) UNKNOWN PROPERTY: MapProperty
	TMap<int, int>                                     IdToIndexLut;                                              // 0x0240(0x0050) (NativeAccessSpecifierPublic)
	struct FTigerCharacterCardData                     DefaultPlayerCard;                                         // 0x0290(0x0098) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerClanCustomizationOptions");
		return ptr;
	}



};

// Class Tiger.TigerCharacterEffect
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class UTigerCharacterEffect : public UObject
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerCharacterEffect");
		return ptr;
	}



	void ApplyWithTarget(class ATigerCharacter* Character, class ATigerCharacter* Target);
	void ApplyWithSocket(class ATigerCharacter* Character, const struct FName& SocketName);
	void Apply(class ATigerCharacter* Character);
};

// Class Tiger.TigerCharacterMenuUI
// 0x0000 (FullSize[0x02B8] - InheritedSize[0x02B8])
class UTigerCharacterMenuUI : public UTigerIngameSubmenuWidget
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerCharacterMenuUI");
		return ptr;
	}



	void OnDisciplinesUpdated();
};

// Class Tiger.TigerQuest
// 0x00D0 (FullSize[0x00F8] - InheritedSize[0x0028])
class UTigerQuest : public UObject
{
public:
	struct FScriptMulticastDelegate                    OnProgressChangedEvent;                                    // 0x0028(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnQuestCompletedEvent;                                     // 0x0038(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnQuestObjectiveCompletedEvent;                            // 0x0048(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FText                                       QuestName;                                                 // 0x0058(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FText                                       QuestSubheading;                                           // 0x0070(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FText                                       FlavourText;                                               // 0x0088(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TArray<class UTigerQuestObjective*>                Objectives;                                                // 0x00A0(0x0010) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	TArray<struct FTigerItemId>                        RewardIds;                                                 // 0x00B0(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	class UTigerGrimoireEntry*                         GrimoireEntryToUnlock;                                     // 0x00C0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FTigerQuestIdentifier                       QuestLookupIdentifier;                                     // 0x00C8(0x0030) (NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerQuest");
		return ptr;
	}



	void OnQuestObjectiveCompletedEvent__DelegateSignature(class UTigerQuest* Quest, class UTigerQuestObjective* Objective);
	void OnQuestCompletedEvent__DelegateSignature(class UTigerQuest* Quest);
	void OnProgressChangedEvent__DelegateSignature(class UTigerQuest* Quest);
	void OnObjectiveCompleted(class UTigerQuestObjective* InTigerObjective);
	struct FTigerItemId GetRarestRewardAsItemId();
	class UTigerInventoryItemBase* GetRarestRewardAsInventoryItem();
	struct FTigerQuestIdentifier GetQuestIdentifier();
	TArray<class UTigerQuestObjective*> GetOngoingObjectives();
	TArray<class UTigerQuestObjective*> GetIncompleteObjectives();
	TArray<class UTigerQuestObjective*> GetCompleteObjectives();
};

// Class Tiger.TigerQuestline
// 0x0068 (FullSize[0x0090] - InheritedSize[0x0028])
class UTigerQuestline : public UObject
{
public:
	struct FText                                       Title;                                                     // 0x0028(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TMap<struct FString, class UTigerQuest*>           Quests;                                                    // 0x0040(0x0050) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerQuestline");
		return ptr;
	}



};

// Class Tiger.TigerQuestCollection
// 0x0050 (FullSize[0x0080] - InheritedSize[0x0030])
class UTigerQuestCollection : public UDataAsset
{
public:
	TMap<struct FString, class UTigerQuestline*>       questLines;                                                // 0x0030(0x0050) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerQuestCollection");
		return ptr;
	}



};

// Class Tiger.TigerQuestSystem
// 0x00B8 (FullSize[0x0168] - InheritedSize[0x00B0])
class UTigerQuestSystem : public UActorComponent
{
public:
	unsigned char                                      UnknownData_HA75[0xB8];                                    // 0x00B0(0x00B8) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerQuestSystem");
		return ptr;
	}



	void Server_GatherQuestLocations();
	void OnQuestObjectiveComplete(class UTigerQuest* InQuest, class UTigerQuestObjective* InCompleteObjective);
	void OnQuestComplete(class UTigerQuest* InCompleteQuest);
	void MatchStateChanged(Tiger_ETigerMatchState OldMatchState, Tiger_ETigerMatchState NewMatchState);
	void Client_SetCachedQuestLocations(TArray<struct FTigerQuestItemLocationDetails> InCachedQuestMapLocations);
	void Client_OnQuestObjectiveComplete(const struct FTigerQuestIdentifier& InIdentifier);
	void Client_OnQuestComplete(const struct FTigerQuestIdentifier& InIdentifier);
};

// Class Tiger.TigerQueueForLogin
// 0x0058 (FullSize[0x0088] - InheritedSize[0x0030])
class UTigerQueueForLogin : public UBlueprintAsyncActionBase
{
public:
	struct FScriptMulticastDelegate                    ReadyForLogin;                                             // 0x0030(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    WaitTimeUpdated;                                           // 0x0040(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    Error;                                                     // 0x0050(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_LYEK[0x8];                                     // 0x0060(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UTigerLoginQueueService*                     LoginQueueService;                                         // 0x0068(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_C398[0x18];                                    // 0x0070(0x0018) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerQueueForLogin");
		return ptr;
	}



	void QueueForLoginOutputPin__DelegateSignature(const struct FTigerLoginQueueToken& LoginToken, const struct FTimespan& EstimatedWaitTime, const struct FString& ErrorMessage);
	class UTigerQueueForLogin* STATIC_QueueForLogin(class UObject* InWorldContextObject);
};

// Class Tiger.TigerRadarChart
// 0x00C8 (FullSize[0x01D0] - InheritedSize[0x0108])
class UTigerRadarChart : public UWidget
{
public:
	struct FSlateBrush                                 GraphImage;                                                // 0x0108(0x0088) (Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FCoreUObject_FColor                         FillColor;                                                 // 0x0190(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                Points;                                                    // 0x0194(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              Radius;                                                    // 0x0198(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              Tilt;                                                      // 0x019C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                                   Offset;                                                    // 0x01A0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                ValueMaximum;                                              // 0x01A8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                ValueMinimum;                                              // 0x01AC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<int>                                        Values;                                                    // 0x01B0(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, ZeroConstructor, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_48FL[0x10];                                    // 0x01C0(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerRadarChart");
		return ptr;
	}



	void SetValue(int InIndex, int InValue);
	void SetAllValues(TArray<int> InValues, int InDefaultValue);
	void NullifyAllValues();
};

// Class Tiger.TigerRangedWeaponComponent
// 0x0240 (FullSize[0x02F0] - InheritedSize[0x00B0])
class UTigerRangedWeaponComponent : public UActorComponent
{
public:
	struct FScriptMulticastDelegate                    OnShowCrosshairAmmoState;                                  // 0x00B0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnReloadStart;                                             // 0x00C0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnReloadFinished;                                          // 0x00D0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnReloadAborted;                                           // 0x00E0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnBurstCompleted;                                          // 0x00F0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnLowAmmo;                                                 // 0x0100(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnRangedWeaponEquipped;                                    // 0x0110(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnAimChanged;                                              // 0x0120(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UTigerBodyPartProjectileDamageModifiersAsset* BodyPartDamageModifiersAsset;                              // 0x0130(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_T25T[0x10];                                    // 0x0138(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class ATigerPlayer*                                TigerPlayer;                                               // 0x0148(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UDataTable*                                  RangedWeaponsDatatable;                                    // 0x0150(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticMesh*                                 ImpactHelperMesh;                                          // 0x0158(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAkAudioEvent*                               GotHitEvent;                                               // 0x0160(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAkAudioEvent*                               FireModeSwitchEvent;                                       // 0x0168(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTigerRangedWeapon*                          EquippedWeaponType;                                        // 0x0170(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAnimMontage*                                LastFireAnimationMontage;                                  // 0x0178(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_JGKT[0x60];                                    // 0x0180(0x0060) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FTimerHandle                                ReloadWeaponTimerHandle;                                   // 0x01E0(0x0008) (NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_LS4A[0x2];                                     // 0x01E8(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               bIsFiring;                                                 // 0x01EA(0x0001) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bWantsToFire;                                              // 0x01EB(0x0001) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bIsAiming;                                                 // 0x01EC(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_GVOI[0x23];                                    // 0x01ED(0x0023) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UStaticMeshComponent*                        ImpactHelperMeshComp;                                      // 0x0210(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_T6NH[0x2C];                                    // 0x0218(0x002C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              CoolDownOutOfAmmoAudioEvent;                               // 0x0244(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_F83Y[0x28];                                    // 0x0248(0x0028) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UTigerAICoordinator*                         AICoordinator;                                             // 0x0270(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TMap<class UClass*, class UTigerProjectilePool*>   ProjectilePoolMap;                                         // 0x0278(0x0050) (Edit, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_2GPY[0x28];                                    // 0x02C8(0x0028) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerRangedWeaponComponent");
		return ptr;
	}



	bool WeaponUsesScope();
	bool WeaponCanSwitchFireMode();
	bool WantsToFire();
	void TigerOnShowCrosshairAmmoState__DelegateSignature();
	void TigerOnReloadStart__DelegateSignature();
	void TigerOnReloadFinished__DelegateSignature();
	void TigerOnReloadAborted__DelegateSignature();
	void TigerOnRangedWeaponEquipped__DelegateSignature();
	void TigerOnLowAmmo__DelegateSignature();
	void TigerOnBurstCompleted__DelegateSignature();
	void TigerOnAimChanged__DelegateSignature(bool bIsAiming);
	bool ShouldUseAimingAnimation();
	void Server_SwitchFireMode();
	void Server_SetFireAudioState(Tiger_ETigerFireAudioState InAudioFireState);
	void Server_SetClientSideHitDetectionRanged(bool bEnableClientSideHits);
	void Server_DebugClientHit(int InProjectileId, const struct FVector& InMeshOffset, float InLastCorrectionTime, float InDeltaTime);
	void OnMontageStartedDuringReload(class UAnimMontage* Montage);
	void Multicast_UpdateReloadLoopsLeft(int8_t InReloadLoopsDelta);
	void Multicast_SetFireAudioState(Tiger_ETigerFireAudioState InAudioFireState);
	void Multicast_SetClientSideHitDetectionRanged(bool bEnableClientSideHits);
	void Multicast_PlayReloadAnimations(int8_t InReloadLoops, float InPlayRate);
	void Multicast_PlayPrimingAnimations();
	void Multicast_OnWeaponFired(const struct FVector& SpawnLocation, const struct FRotator& SpawnRotation, float FireSpread, const struct FTigerRangedRandomState& FireRandomState);
	void Multicast_OnNpcWeaponFired(const struct FVector& InSpawnLocation, const struct FRotator& InSpawnRotation, const struct FVector& InTargetLocation, float InFireSpread, const struct FTigerRangedRandomState& InFireRandomState);
	void Multicast_CreateOrUpdateAreaEffect(class UClass* InAreaEffectType, const struct FVector& InNewLocation, int InProjectileId, bool bInAllowUpdate);
	void Multicast_AbortReloadAnimation();
	bool IsLowOnLoadedAmmo();
	bool IsInReload();
	bool IsInFireMode(Tiger_ETigerWeaponFireMode FireMode);
	bool IsFiring();
	bool IsAiming();
	bool HasEquippedOrWantedWeapon();
	bool HasAmmo();
	float GetWeaponDamageValue();
	float GetReloadDonePercentage();
	int GetMaxAmmo();
	int GetLoadedAmmo();
	int GetInventoryAmmo();
	class UClass* GetHipFireCameraShake();
	class UForceFeedbackEffect* GetFireForceFeedback();
	class UTigerRangedWeapon* GetEquippedOrWantedWeapon();
	float GetCurrentSpread();
	float GetCurrentReloadDuration();
	class UClass* GetCurrentProjectileType();
	struct FTigerFireSettings GetCurrentFireSettings();
	Tiger_ETigerWeaponFireMode GetCurrentFireMode();
	float GetCurrentAimedFov();
	float GetAimSpeedMultiplier();
	class UClass* GetAimedFireCameraShake();
	void Client_SwitchFireMode(int NewFireModeIndex);
	void Client_DebugGetClientHit(int InProjectileId);
};

// Class Tiger.TigerRangedWeaponModModifier
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class UTigerRangedWeaponModModifier : public UObject
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerRangedWeaponModModifier");
		return ptr;
	}



	void OnModUnequipped(class UTigerEquippedModModifierValues* Modifiers);
	void OnModEquipped(class UTigerEquippedModModifierValues* Modifiers);
};

// Class Tiger.TigerRat
// 0x0090 (FullSize[0x0310] - InheritedSize[0x0280])
class ATigerRat : public ATigerInteractiveObject
{
public:
	unsigned char                                      UnknownData_GYJA[0x8];                                     // 0x0280(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FVector                                     LocalHandOffset;                                           // 0x0288(0x000C) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FRotator                                    LocalHandRotation;                                         // 0x0294(0x000C) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	class UAnimMontage*                                Montage;                                                   // 0x02A0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class ATigerPlayerController>       CurrentInteractingPlayerController;                        // 0x02A8(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              FeedTickTime;                                              // 0x02B0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              FeedHealthAmount;                                          // 0x02B4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              MoveSpeed;                                                 // 0x02B8(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              RotationSpeed;                                             // 0x02BC(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              MaxWaitTime;                                               // 0x02C0(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              MinWaitTime;                                               // 0x02C4(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USkeletalMeshComponent*                      RatMesh;                                                   // 0x02C8(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bShouldMove;                                               // 0x02D0(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_I05F[0x7];                                     // 0x02D1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UAkAudioEvent*                               PickUpSqueekEvent;                                         // 0x02D8(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_JV3Y[0x28];                                    // 0x02E0(0x0028) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               bIsEaten;                                                  // 0x0308(0x0001) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_FK48[0x7];                                     // 0x0309(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerRat");
		return ptr;
	}



	void OnInteractEnd();
	bool IsEaten();
};

// Class Tiger.TigerRatSpawnpointActorSpawner
// 0x0008 (FullSize[0x0200] - InheritedSize[0x01F8])
class UTigerRatSpawnpointActorSpawner : public USceneComponent
{
public:
	class UClass*                                      ActorToSpawn;                                              // 0x01F8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerRatSpawnpointActorSpawner");
		return ptr;
	}



};

// Class Tiger.TigerRatSpawnpoint
// 0x0008 (FullSize[0x0230] - InheritedSize[0x0228])
class ATigerRatSpawnpoint : public AActor
{
public:
	int                                                NumRatsToSpawn;                                            // 0x0228(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_6ZQO[0x4];                                     // 0x022C(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerRatSpawnpoint");
		return ptr;
	}



};

// Class Tiger.TigerReactToHeightenedSense
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class UTigerReactToHeightenedSense : public UInterface
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerReactToHeightenedSense");
		return ptr;
	}



	void OnLeaveHeightenedSenseArea();
	void OnEnterHeightenedSenseAreaInitial();
	void OnEnterHeightenedSenseArea();
};

// Class Tiger.TigerReflectable
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class UTigerReflectable : public UInterface
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerReflectable");
		return ptr;
	}



	class AActor* CopyAndReflect(class ATigerCharacter* InNewOwner, const struct FVector& InSpawnLocation, const struct FRotator& InSpawnRotation);
	void BlockReflect(class ATigerCharacter* ReflectOwner);
};

// Class Tiger.TigerReflector
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class UTigerReflector : public UInterface
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerReflector");
		return ptr;
	}



};

// Class Tiger.TigerRejuvenatingVoiceEffectActor
// 0x0010 (FullSize[0x0238] - InheritedSize[0x0228])
class ATigerRejuvenatingVoiceEffectActor : public AActor
{
public:
	class ATigerPlayer*                                Player;                                                    // 0x0228(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              HealAmount;                                                // 0x0230(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_CDHV[0x4];                                     // 0x0234(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerRejuvenatingVoiceEffectActor");
		return ptr;
	}



};

// Class Tiger.TigerRemoteLocalizationSubSystem
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UTigerRemoteLocalizationSubSystem : public UEngineSubsystem
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerRemoteLocalizationSubSystem");
		return ptr;
	}



};

// Class Tiger.TigerRenderingSettings
// 0x0050 (FullSize[0x0088] - InheritedSize[0x0038])
class UTigerRenderingSettings : public UDeveloperSettings
{
public:
	int                                                MaxSpotLightShadowCasters;                                 // 0x0038(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_3U5N[0x4];                                     // 0x003C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	unsigned char                                      LastLodMaterialMaster[0x28];                               // 0x003C(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	TArray<struct FName>                               LastLodExtractionParameters;                               // 0x0068(0x0010) (Edit, ZeroConstructor, Config, NativeAccessSpecifierPublic)
	unsigned char                                      MaterialsToExclude[0x10];                                  // 0x0078(0x0010) UNKNOWN PROPERTY: ArrayProperty


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerRenderingSettings");
		return ptr;
	}



};

// Class Tiger.TigerReplicationGraph
// 0x00B8 (FullSize[0x0550] - InheritedSize[0x0498])
class UTigerReplicationGraph : public UReplicationGraph
{
public:
	class UReplicationGraphNode_GridSpatialization2D*  GridNode;                                                  // 0x0498(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTigerReplicationGraphNode_GridSpatialization2D_PlayerSpawned* PlayerSpawnedGridNode;                                     // 0x04A0(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UReplicationGraphNode_ActorList*             AlwaysRelevantNode;                                        // 0x04A8(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTigerReplicationGraphNode_OwnerRelevant*    OwnerRelevantNode;                                         // 0x04B0(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_QLKC[0x98];                                    // 0x04B8(0x0098) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerReplicationGraph");
		return ptr;
	}



};

// Class Tiger.TigerReplicationGraphNode_AlwaysRelevant_ForConnection
// 0x0030 (FullSize[0x0080] - InheritedSize[0x0050])
class UTigerReplicationGraphNode_AlwaysRelevant_ForConnection : public UReplicationGraphNode
{
public:
	unsigned char                                      UnknownData_SMFE[0x18];                                    // 0x0050(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class AActor*                                      LastViewer;                                                // 0x0068(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AActor*                                      LastViewTarget;                                            // 0x0070(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_8W8R[0x8];                                     // 0x0078(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerReplicationGraphNode_AlwaysRelevant_ForConnection");
		return ptr;
	}



};

// Class Tiger.TigerReplicationGraphNode_GridSpatialization2D_PlayerSpawned
// 0x0000 (FullSize[0x0230] - InheritedSize[0x0230])
class UTigerReplicationGraphNode_GridSpatialization2D_PlayerSpawned : public UReplicationGraphNode_GridSpatialization2D
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerReplicationGraphNode_GridSpatialization2D_PlayerSpawned");
		return ptr;
	}



};

// Class Tiger.TigerReplicationGraphNode_OwnerRelevant
// 0x0030 (FullSize[0x0080] - InheritedSize[0x0050])
class UTigerReplicationGraphNode_OwnerRelevant : public UReplicationGraphNode
{
public:
	unsigned char                                      UnknownData_3LJ6[0x30];                                    // 0x0050(0x0030) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerReplicationGraphNode_OwnerRelevant");
		return ptr;
	}



};

// Class Tiger.TigerRequestUtility
// 0x0010 (FullSize[0x0038] - InheritedSize[0x0028])
class UTigerRequestUtility : public UObject
{
public:
	unsigned char                                      UnknownData_MIL0[0x10];                                    // 0x0028(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerRequestUtility");
		return ptr;
	}



};

// Class Tiger.TigerResourceBarSegmentUI
// 0x0010 (FullSize[0x0290] - InheritedSize[0x0280])
class UTigerResourceBarSegmentUI : public UTigerWidget
{
public:
	class UMaterialInstanceDynamic*                    SegmentMaterial;                                           // 0x0280(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              MinResource;                                               // 0x0288(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              MaxResource;                                               // 0x028C(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerResourceBarSegmentUI");
		return ptr;
	}



};

// Class Tiger.TigerResurrectAltar
// 0x0050 (FullSize[0x02D0] - InheritedSize[0x0280])
class ATigerResurrectAltar : public ATigerInteractiveObject
{
public:
	unsigned char                                      UnknownData_UGPA[0x8];                                     // 0x0280(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class ATigerPlayerController*                      ResurrectingPlayerController;                              // 0x0288(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              RespawnDelay;                                              // 0x0290(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               ShouldDisableAfterSingleUse;                               // 0x0294(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	Tiger_ETigerResurrectHolyIncenseInteractionType    HolyIncenseInteractionType;                                // 0x0295(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_S3AH[0x2];                                     // 0x0296(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              HolyIncensePositionCheckRate;                              // 0x0298(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              AltarDestroyDelay;                                         // 0x029C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class USceneComponent*>                     RespawnPoints;                                             // 0x02A0(0x0010) (BlueprintVisible, ExportObject, ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_WOTR[0x20];                                    // 0x02B0(0x0020) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerResurrectAltar");
		return ptr;
	}



	void SetupHolyIncenseInteraction(Tiger_ETigerMatchState InOldState, Tiger_ETigerMatchState InNewState);
	void OnWaveStoppedMoving();
	void OnWaveStartedMoving();
	void OnWaveRevealed();
	void OnResurrectInteractionFinished();
	void OnResurrect(class USceneComponent* InUsedSceneComponent, const struct FVector& InResurrectLocation, const struct FRotator& InResurrectRotation);
	void OnAltarDeactivatedAfterUse();
	void OnAltarDeactivated();
	void Multicast_OnResurrect(int InResurrectCount);
	struct FRotator GetRespawnRotationOffset(class USceneComponent* InSceneComponent, int InCurrenctResurrectIndex, int InResurrectCount);
	struct FVector GetRespawnLocationOffset(class USceneComponent* InSceneComponent, int InCurrenctResurrectIndex, int InResurrectCount);
	void DestroyAltar();
	void CheckWavePosition();
};

// Class Tiger.TigerResurrectComponent
// 0x0020 (FullSize[0x00D0] - InheritedSize[0x00B0])
class UTigerResurrectComponent : public UActorComponent
{
public:
	int                                                TokenCount;                                                // 0x00B0(0x0004) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_EJXS[0x14];                                    // 0x00B4(0x0014) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class ATigerPlayer*                                MyPawnToResurrect;                                         // 0x00C8(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerResurrectComponent");
		return ptr;
	}



	void Server_ResurrectGroupMember(const struct FVector& InLocation, const struct FRotator& InRotator);
	void ResurrectGroupMember(const struct FVector& InRespawnLocation, const struct FRotator& InRespawnRotation);
	int GetTokenCount();
};

// Class Tiger.TigerRevivingStatusUI
// 0x0060 (FullSize[0x02E0] - InheritedSize[0x0280])
class UTigerRevivingStatusUI : public UTigerWidget
{
public:
	struct FText                                       RegeneratingStatusText;                                    // 0x0280(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FText                                       DiablerizingStatusText;                                    // 0x0298(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FText                                       BeingRevivedStatusText;                                    // 0x02B0(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	Tiger_ETigerPhysicalInteraction                    PhysicalInteractionStatus;                                 // 0x02C8(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bShouldUpdateTimer;                                        // 0x02C9(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_Q6WB[0x2];                                     // 0x02CA(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              TimeLeft;                                                  // 0x02CC(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              PercentageLeft;                                            // 0x02D0(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_L2RD[0x8];                                     // 0x02D4(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               ShowPrompt;                                                // 0x02DC(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_A9UK[0x3];                                     // 0x02DD(0x0003) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerRevivingStatusUI");
		return ptr;
	}



	void StatusChanged();
};

// Class Tiger.TigerRichTextBlock
// 0x0320 (FullSize[0x0448] - InheritedSize[0x0128])
class UTigerRichTextBlock : public UTextLayoutWidget
{
public:
	struct FText                                       Text;                                                      // 0x0128(0x0018) (Edit, Protected, NativeAccessSpecifierProtected)
	struct FScriptDelegate                             TextDelegate;                                              // 0x0140(0x0010) (ZeroConstructor, InstancedReference, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FSlateFontInfo                              Font;                                                      // 0x0150(0x0058) (Edit, BlueprintVisible, BlueprintReadOnly, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                                ColorAndOpacity;                                           // 0x01A8(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UTigerRichTextBlockDecorator*>        Decorators;                                                // 0x01B8(0x0010) (ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_LWE8[0x280];                                   // 0x01C8(0x0280) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerRichTextBlock");
		return ptr;
	}



	void SetText(const struct FText& InText);
	void SetOpacity(float InOpacity);
	void SetColorAndOpacity(const struct FLinearColor& InColorAndOpacity);
	struct FText GetText();
};

// Class Tiger.TigerRichTextBlockIconDecorator
// 0x0028 (FullSize[0x0050] - InheritedSize[0x0028])
class UTigerRichTextBlockIconDecorator : public URichTextBlockDecorator
{
public:
	bool                                               bUsingGamePad;                                             // 0x0028(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_L3XH[0x7];                                     // 0x0029(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class ATigerPlayerController*                      PlayerControllerRef;                                       // 0x0030(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_6XKT[0x8];                                     // 0x0038(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UDataTable*                                  IconImages;                                                // 0x0040(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTigerKeyTextureMapping*                     KeyTextureMapping;                                         // 0x0048(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerRichTextBlockIconDecorator");
		return ptr;
	}



	void OnUseGamepadChanged(bool InUsingGamepad);
	void InitializeValues(class ATigerPlayerController* InTigerController, class UTigerStyledRichTextBlock* InOwningRichTextBlock);
	struct FSlateBrush GetBrushForKeyInternal(const struct FKey& InKey);
	struct FSlateBrush GetBrushForAxisInternal(const struct FName& InName);
	struct FSlateBrush GetBrushForActionInternal(const struct FName& InName);
};

// Class Tiger.TigerRichTextBlockDecorator
// 0x0008 (FullSize[0x0030] - InheritedSize[0x0028])
class UTigerRichTextBlockDecorator : public UObject
{
public:
	bool                                               bReveal;                                                   // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_BW8D[0x3];                                     // 0x0029(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                RevealedIndex;                                             // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerRichTextBlockDecorator");
		return ptr;
	}



};

// Class Tiger.TigerRoofSystem
// 0x0010 (FullSize[0x0238] - InheritedSize[0x0228])
class ATigerRoofSystem : public AActor
{
public:
	class USceneComponent*                             Root;                                                      // 0x0228(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              Width;                                                     // 0x0230(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              Depth;                                                     // 0x0234(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerRoofSystem");
		return ptr;
	}



	void OnUpgrade(int InVersion);
};

// Class Tiger.TigerDamageTriggerVolume
// 0x0020 (FullSize[0x0280] - InheritedSize[0x0260])
class ATigerDamageTriggerVolume : public ATriggerVolume
{
public:
	float                                              DamagePerSecond;                                           // 0x0260(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bOnlyDamageKindred;                                        // 0x0264(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bDoNotDamageDowned;                                        // 0x0265(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_T4DI[0x2];                                     // 0x0266(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              DamageRate;                                                // 0x0268(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bEnableDamage;                                             // 0x026C(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_B9ZO[0x3];                                     // 0x026D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FDamageTriggerOverlapData>           OverlappingCharacters;                                     // 0x0270(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerDamageTriggerVolume");
		return ptr;
	}



	void OnEndOverlap(class AActor* OverlappedActor, class AActor* OtherActor);
	void OnBeginOverlap(class AActor* OverlappedActor, class AActor* OtherActor);
};

// Class Tiger.TigerDamageBase
// 0x0000 (FullSize[0x0040] - InheritedSize[0x0040])
class UTigerDamageBase : public UDamageType
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerDamageBase");
		return ptr;
	}



};

// Class Tiger.DmgType_Ranged
// 0x0000 (FullSize[0x0040] - InheritedSize[0x0040])
class UDmgType_Ranged : public UTigerDamageBase
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.DmgType_Ranged");
		return ptr;
	}



};

// Class Tiger.DmgType_RangedCritical
// 0x0000 (FullSize[0x0040] - InheritedSize[0x0040])
class UDmgType_RangedCritical : public UDmgType_Ranged
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.DmgType_RangedCritical");
		return ptr;
	}



};

// Class Tiger.DmgType_Melee
// 0x0000 (FullSize[0x0040] - InheritedSize[0x0040])
class UDmgType_Melee : public UTigerDamageBase
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.DmgType_Melee");
		return ptr;
	}



};

// Class Tiger.DmgType_Discipline
// 0x0000 (FullSize[0x0040] - InheritedSize[0x0040])
class UDmgType_Discipline : public UTigerDamageBase
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.DmgType_Discipline");
		return ptr;
	}



};

// Class Tiger.DmgType_DisciplineFOTT
// 0x0000 (FullSize[0x0040] - InheritedSize[0x0040])
class UDmgType_DisciplineFOTT : public UDmgType_Discipline
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.DmgType_DisciplineFOTT");
		return ptr;
	}



};

// Class Tiger.DmgType_DOT
// 0x0000 (FullSize[0x0040] - InheritedSize[0x0040])
class UDmgType_DOT : public UTigerDamageBase
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.DmgType_DOT");
		return ptr;
	}



};

// Class Tiger.DmgType_ToreadorDOT
// 0x0000 (FullSize[0x0040] - InheritedSize[0x0040])
class UDmgType_ToreadorDOT : public UDmgType_DOT
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.DmgType_ToreadorDOT");
		return ptr;
	}



};

// Class Tiger.DmgType_GameInflicted
// 0x0000 (FullSize[0x0040] - InheritedSize[0x0040])
class UDmgType_GameInflicted : public UTigerDamageBase
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.DmgType_GameInflicted");
		return ptr;
	}



};

// Class Tiger.DmgType_Environmental
// 0x0000 (FullSize[0x0040] - InheritedSize[0x0040])
class UDmgType_Environmental : public UDmgType_GameInflicted
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.DmgType_Environmental");
		return ptr;
	}



};

// Class Tiger.DmgType_Mosquito
// 0x0000 (FullSize[0x0040] - InheritedSize[0x0040])
class UDmgType_Mosquito : public UDmgType_GameInflicted
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.DmgType_Mosquito");
		return ptr;
	}



};

// Class Tiger.DmgType_OutOfBoundsMosquito
// 0x0000 (FullSize[0x0040] - InheritedSize[0x0040])
class UDmgType_OutOfBoundsMosquito : public UDmgType_GameInflicted
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.DmgType_OutOfBoundsMosquito");
		return ptr;
	}



};

// Class Tiger.TigerDataDependentWidget
// 0x0000 (FullSize[0x0280] - InheritedSize[0x0280])
class UTigerDataDependentWidget : public UTigerWidget
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerDataDependentWidget");
		return ptr;
	}



	void OnDataLoaded();
	void ListenToDataLoadingEvent();
	bool IsDataLoaded(class ATigerPlayerController* InTigerPlayerController);
	void CheckDataLoaded(class ATigerPlayerController* InTigerPlayerController);
};

// Class Tiger.TigerDeathScreen
// 0x0058 (FullSize[0x02E8] - InheritedSize[0x0290])
class UTigerDeathScreen : public UTigerMenuWidget
{
public:
	unsigned char                                      UnknownData_7N1V[0x8];                                     // 0x0290(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TMap<Tiger_ETigerKillerType, struct FText>         KillerTypeNames;                                           // 0x0298(0x0050) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerDeathScreen");
		return ptr;
	}



	bool ShouldReturnToElysium();
	void SetInformation(int InPlayerPlacement, int InNumGroupsAtStart, const struct FString& InInstigatorPlayerName, Tiger_ETigerKillerType InKillerType);
	bool CanStartSpectating();
};

// Class Tiger.TigerDebugCameraHUD
// 0x0000 (FullSize[0x0318] - InheritedSize[0x0318])
class ATigerDebugCameraHUD : public ADebugCameraHUD
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerDebugCameraHUD");
		return ptr;
	}



};

// Class Tiger.TigerDeferredGroupRetainerBox
// 0x0000 (FullSize[0x0150] - InheritedSize[0x0150])
class UTigerDeferredGroupRetainerBox : public URetainerBox
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerDeferredGroupRetainerBox");
		return ptr;
	}



	void Construct();
};

// Class Tiger.TigerDeferredRenderBox
// 0x0010 (FullSize[0x0130] - InheritedSize[0x0120])
class UTigerDeferredRenderBox : public UContentWidget
{
public:
	unsigned char                                      UnknownData_2V0E[0x10];                                    // 0x0120(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerDeferredRenderBox");
		return ptr;
	}



};

// Class Tiger.TigerDestroySessionAsync
// 0x0048 (FullSize[0x0078] - InheritedSize[0x0030])
class UTigerDestroySessionAsync : public UBlueprintAsyncActionBase
{
public:
	struct FScriptMulticastDelegate                    OnSuccess;                                                 // 0x0030(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnFailed;                                                  // 0x0040(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_BF8T[0x28];                                    // 0x0050(0x0028) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerDestroySessionAsync");
		return ptr;
	}



	class UTigerDestroySessionAsync* STATIC_DestroySession(class UObject* WorldContextObject, Tiger_ESessionType SESSIONTYPE);
};

// Class Tiger.TigerDialogueInteractionScreen
// 0x0020 (FullSize[0x02B0] - InheritedSize[0x0290])
class UTigerDialogueInteractionScreen : public UTigerMenuWidget
{
public:
	float                                              TransitionTime;                                            // 0x0290(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class ATigerBaseNPC>                VendorNPC;                                                 // 0x0294(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class UTigerAnimInstance>           TargetAnimationInstance;                                   // 0x029C(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class UTigerInteractiveNpcComponent> InteractiveNpcComponent;                                   // 0x02A4(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_GMD5[0x4];                                     // 0x02AC(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerDialogueInteractionScreen");
		return ptr;
	}



	void TransitionToPlayerCamera();
	void TransitionToInteractionCamera();
};

// Class Tiger.TigerNpcDialogueList
// 0x0060 (FullSize[0x0090] - InheritedSize[0x0030])
class UTigerNpcDialogueList : public UDataAsset
{
public:
	struct FString                                     DialogueIdBase;                                            // 0x0030(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<struct FString, struct FTigerNpcDialogue>     DialogueLines;                                             // 0x0040(0x0050) (Edit, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerNpcDialogueList");
		return ptr;
	}



};

// Class Tiger.TigerDialogueManager
// 0x00D8 (FullSize[0x0100] - InheritedSize[0x0028])
class UTigerDialogueManager : public UObject
{
public:
	unsigned char                                      UnknownData_IMVL[0xD8];                                    // 0x0028(0x00D8) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerDialogueManager");
		return ptr;
	}



	void SortDialogueLines(class ATigerPlayerState* InState);
	bool HasMoreDialogue();
	bool HasHighPriorityDialogue();
	Tiger_ETigerClan GetSpeakerClan();
	struct FTigerNpcDialogue GetNextDialoguePack();
	bool GetNextDialogueLine(struct FText* OutText, struct FText* OutQuestDescription);
	int GetCurrentDialogueId();
	bool CanInteract();
};

// Class Tiger.TigerBlindingBeautyConfig
// 0x0078 (FullSize[0x01D8] - InheritedSize[0x0160])
class UTigerBlindingBeautyConfig : public UTigerActiveDisciplineConfig
{
public:
	class UAnimMontage*                                Montage;                                                   // 0x0160(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      BlueprintActor;                                            // 0x0168(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              BlueprintActorLifetime;                                    // 0x0170(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_4XRE[0x4];                                     // 0x0174(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UClass*                                      BlindingDebuff;                                            // 0x0178(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      CharmDebuffPlayer;                                         // 0x0180(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      CharmDebuffNpc;                                            // 0x0188(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<float>                                      BlindDuration;                                             // 0x0190(0x0010) (Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	float                                              CharmPlayerDuration;                                       // 0x01A0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              CharmNpcDuration;                                          // 0x01A4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              TriggerTime;                                               // 0x01A8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ActiveTimeAfterTrigger;                                    // 0x01AC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              GuaranteedBlindRange;                                      // 0x01B0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              LookBlindRange;                                            // 0x01B4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              LookDotProductHitThreshold;                                // 0x01B8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_9CJ4[0x4];                                     // 0x01BC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<float>                                      BlindDamage;                                               // 0x01C0(0x0010) (Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                               bShouldDamageCivilians;                                    // 0x01D0(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bUseCameraAsLookDirection;                                 // 0x01D1(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_LQ5R[0x6];                                     // 0x01D2(0x0006) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerBlindingBeautyConfig");
		return ptr;
	}



};

// Class Tiger.TigerDisciplineBlindingBeauty
// 0x0020 (FullSize[0x0098] - InheritedSize[0x0078])
class UTigerDisciplineBlindingBeauty : public UTigerDisciplineBase
{
public:
	class UTigerBlindingBeautyConfig*                  Config;                                                    // 0x0078(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class ATigerBlindingBeautyEffectActor*             BlueprintActor;                                            // 0x0080(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_78D5[0x10];                                    // 0x0088(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerDisciplineBlindingBeauty");
		return ptr;
	}



};

// Class Tiger.TigerCharmConfig
// 0x0068 (FullSize[0x01D8] - InheritedSize[0x0170])
class UTigerCharmConfig : public UTigerDisciplineAnimTriggeredConfig
{
public:
	float                                              Damage;                                                    // 0x0170(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              BondMaxDistance;                                           // 0x0174(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              BackgroundFindTargetInterval;                              // 0x0178(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              BondPlayerDuration;                                        // 0x017C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              BondNPCDuration;                                           // 0x0180(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_2R8S[0x4];                                     // 0x0184(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class UClass*>                              CharmedBuff;                                               // 0x0188(0x0010) (Edit, BlueprintVisible, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<class UClass*>                              BondingBuff;                                               // 0x0198(0x0010) (Edit, BlueprintVisible, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	class UClass*                                      OnHitEffect;                                               // 0x01A8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      ThornsBuff;                                                // 0x01B0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bShowDebugInfo;                                            // 0x01B8(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_W6Q7[0x3];                                     // 0x01B9(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              MaxDistance;                                               // 0x01BC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MinDistance;                                               // 0x01C0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              PlayerTargetMultiplier;                                    // 0x01C4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                                 AimAxisValueCurve;                                         // 0x01C8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                                 DistanceFromUseValueCurve;                                 // 0x01D0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerCharmConfig");
		return ptr;
	}



};

// Class Tiger.TigerBondingBuffInstance
// 0x0000 (FullSize[0x0088] - InheritedSize[0x0088])
class UTigerBondingBuffInstance : public UTigerBuffInstance
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerBondingBuffInstance");
		return ptr;
	}



};

// Class Tiger.TigerBondingBuff
// 0x0000 (FullSize[0x0270] - InheritedSize[0x0270])
class UTigerBondingBuff : public UTigerBuff
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerBondingBuff");
		return ptr;
	}



};

// Class Tiger.TigerDisciplineCharm
// 0x0028 (FullSize[0x0118] - InheritedSize[0x00F0])
class UTigerDisciplineCharm : public UTigerDisciplineAnimTriggered
{
public:
	unsigned char                                      UnknownData_S1UR[0x18];                                    // 0x00F0(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UTigerCharmConfig*                           Config;                                                    // 0x0108(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_KKOY[0x8];                                     // 0x0110(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerDisciplineCharm");
		return ptr;
	}



	void OnTickBond(class ATigerCharacter* Player, class ATigerCharacter* TargetNpc);
	void OnStoppedBond();
	void OnStartedBond(class ATigerCharacter* Player, class ATigerCharacter* TargetNpc);
};

// Class Tiger.TigerDisciplineComponent
// 0x01A8 (FullSize[0x0258] - InheritedSize[0x00B0])
class UTigerDisciplineComponent : public UActorComponent
{
public:
	class UTigerDisciplineConfigs*                     DisciplineConfigs;                                         // 0x00B0(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundBase*                                  DisciplineFailSound;                                       // 0x00B8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnDisciplineUsedDelegate;                                  // 0x00C0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnActivatedDisciplineDelegate;                             // 0x00D0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnDeactivatedDisciplineDelegate;                           // 0x00E0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnDisciplineUnlocked;                                      // 0x00F0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FTigerScouterCharacterData                  ScouterCharacterData;                                      // 0x0100(0x0030) (Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	class UClass*                                      PrimaryShacklesBuff;                                       // 0x0130(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UClass*                                      SecondaryShacklesBuff;                                     // 0x0138(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              WeaponRarityDamageMultipliers[0x5];                        // 0x0140(0x0014) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_74IT[0x4];                                     // 0x0154(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class ATigerPlayer*                                Player;                                                    // 0x0158(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_FOBV[0x88];                                    // 0x0160(0x0088) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TMap<Tiger_ETigerDisciplinesEnum, class UTigerDisciplineBase*> Disciplines;                                               // 0x01E8(0x0050) (NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_D9XJ[0x20];                                    // 0x0238(0x0020) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerDisciplineComponent");
		return ptr;
	}



	bool WantsToStrafe();
	void UnlockDisciplineSlot(Tiger_ETigerDisciplineSlot InDisciplineSlot);
	void UnlockDiscipline(Tiger_ETigerDisciplinesEnum InDisciplineType);
	Tiger_ETigerInputActionResult TryUseDiscipline(Tiger_ETigerDisciplineSlot Slot);
	void TryToAbortHoldingDiscipline();
	void TryToAbortChannelingDiscipline();
	Tiger_ETigerInputActionResult TryReleaseDiscipline(Tiger_ETigerDisciplineSlot InSlot);
	void TigerDelegateDisciplineUsed__DelegateSignature(Tiger_ETigerDisciplineSlot InDisciplineSlot);
	void TigerDelegateDisciplineUnlocked__DelegateSignature(Tiger_ETigerDisciplineSlot InDisciplineSlot);
	void TigerDelegateDeactivatedDiscipline__DelegateSignature(Tiger_ETigerDisciplinesEnum InDiscipline);
	void TigerDelegateActivatedDiscipline__DelegateSignature(Tiger_ETigerDisciplinesEnum InDiscipline);
	void Server_UseDiscipline(const struct FDisciplineUse& InDisciplineUse);
	void Server_TryToInterruptActiveDiscipline(Tiger_ETigerCharacterActions InAction);
	void Server_TryToAbortHoldingDiscipline();
	void Server_TryToAbortChannelingDiscipline();
	void Server_SetPreparingDiscipline(Tiger_ETigerDisciplinesEnum InDisciplineType);
	void Server_SetCrosshairHitLocation(const struct FVector& InLocation);
	void Server_ReleaseDisciplineFailed(const struct FDisciplineUse& InDisciplineUse);
	void Server_ReleaseDiscipline(const struct FDisciplineUse& InDisciplineUse);
	void Server_ForceInterruptActiveDiscipline();
	void Server_AnimTriggerNotify(const struct FDisciplineUse& DisciplineUse);
	void NotifyDisciplineEvent(Tiger_ETigerDisciplinesEnum Discipline, Tiger_ETigerDisciplineEvent Event);
	void Multicast_UseSucceeded(const struct FDisciplineUse& DisciplineUse);
	void Multicast_TryToInterruptActiveDiscipline(Tiger_ETigerCharacterActions InAction);
	void Multicast_TryToAbortHoldingDiscipline();
	void Multicast_TryToAbortChannelingDiscipline();
	void Multicast_SucceededAdditional(const struct FDisciplineUse& InDisciplineUse, bool bInSendReliableToAllTargets, unsigned char InEventFlags);
	void Multicast_ReleaseSucceeded(const struct FDisciplineUse& DisciplineUse);
	void Multicast_ForceInterruptActiveDiscipline();
	void LockDisciplineSlot(Tiger_ETigerDisciplineSlot InDisciplineSlot);
	void LockDiscipline(Tiger_ETigerDisciplinesEnum InDisciplineType);
	bool IsRecharging(Tiger_ETigerDisciplinesEnum DisciplineToGet);
	bool IsOnGlobalCoolDown();
	bool IsDisciplineUnlocked(Tiger_ETigerDisciplinesEnum DisciplineType);
	bool IsDisciplineAtMaxPowerLevel(Tiger_ETigerDisciplinesEnum DisciplineType);
	bool IsDisciplineActive(Tiger_ETigerDisciplinesEnum DisciplineType);
	bool IsAnyWeaponAbilityActive();
	bool IsAnyDisciplinePreparing();
	bool IsAnyDisciplineActive();
	void GetUnlockedDisciplines(TArray<Tiger_ETigerDisciplinesEnum>* OutUnlockedDisciplines);
	class UTexture2D* GetUIIconForSlot(Tiger_ETigerDisciplineSlot Slot);
	class UTexture2D* GetUIIconForDiscipline(Tiger_ETigerDisciplinesEnum Discipline);
	Tiger_ETigerDisciplineSlot GetSlotForDiscipline(class UTigerDisciplineBase* Discipline);
	float GetRechargeSecondsLeft(Tiger_ETigerDisciplinesEnum DisciplineToGet);
	float GetRechargePercentage(Tiger_ETigerDisciplinesEnum DisciplineToGet);
	class UTigerDisciplineBase* GetPreparingDiscipline();
	struct FText GetNameForDiscipline(Tiger_ETigerDisciplinesEnum Discipline);
	int GetDisciplinePowerLevel(Tiger_ETigerDisciplinesEnum DisciplineType);
	int GetDisciplineMaxPowerLevel(Tiger_ETigerDisciplinesEnum DisciplineType);
	Tiger_ETigerDisciplinesEnum GetDisciplineForSlot(Tiger_ETigerDisciplineSlot Slot);
	class UTigerDisciplineConfigBase* GetDisciplineConfigBySlot(Tiger_ETigerDisciplineSlot InSlot);
	class UTigerDisciplineConfigBase* GetDisciplineConfig(Tiger_ETigerDisciplinesEnum Discipline);
	class UTigerDisciplineBase* GetDiscipline(Tiger_ETigerDisciplinesEnum DisciplineToGet);
	struct FText GetDescriptionForDiscipline(Tiger_ETigerDisciplinesEnum Discipline);
	float GetCooldownSecondsLeft(Tiger_ETigerDisciplinesEnum DisciplineToGet);
	float GetCooldownPercentageBySlot(Tiger_ETigerDisciplineSlot Slot);
	float GetCooldownPercentage(Tiger_ETigerDisciplinesEnum DisciplineToGet);
	TArray<Tiger_ETigerDisciplinesEnum> GetClanDisciplinesSortedByUnlockLevel();
	Tiger_ETigerDisciplinesEnum GetBlockingDiscipline();
	class UTigerDisciplineBase* GetActiveDiscipline();
	void EquipDiscipline(Tiger_ETigerDisciplineSlot Slot, Tiger_ETigerDisciplinesEnum Discipline);
	void Client_UseSucceeded(const struct FDisciplineUse& DisciplineUse);
	void Client_UseFailed(const struct FDisciplineUse& DisciplineUse);
	void Client_UseAnimTriggeredFailed(const struct FDisciplineUse& DisciplineUse);
	void Client_UpdateDisciplineLevel(Tiger_ETigerDisciplinesEnum DisciplineType, int PowerLevel);
	void Client_TryToAbortHoldingDiscipline();
	void Client_TryToAbortChannelingDiscipline();
	void Client_SucceededAdditional(const struct FDisciplineUse& DisciplineUse, unsigned char EventFlags, class ATigerPlayer* DisciplineOwner);
	void Client_SendScoutedCharacterToGroupMember(class ATigerCharacter* InScoutedCharacter, float InTime);
	void Client_ReleaseSucceeded(const struct FDisciplineUse& DisciplineUse);
	void Client_ReleaseFailed(const struct FDisciplineUse& DisciplineUse);
	void Client_ReduceCooldowns(float InMultiplierToReduceBy, Tiger_ETigerDisciplineCooldownReductionType InReductionTypes);
	void Client_MomentumUpdateCooldowns();
	void Client_LockDiscipline(Tiger_ETigerDisciplinesEnum DisciplineType);
	void Client_LockAllDisciplines();
	void Client_CancelCooldown(Tiger_ETigerDisciplinesEnum DisciplineType);
	void AuthorityReduceCooldowns(float InAmount, Tiger_ETigerDisciplineCooldownReductionType InReductionType);
	void AddScoutedCharacter(class ATigerCharacter* InScoutedCharacter, float InTime);
};

// Class Tiger.TigerDisciplineConfigs
// 0x0050 (FullSize[0x0078] - InheritedSize[0x0028])
class UTigerDisciplineConfigs : public UObject
{
public:
	TMap<Tiger_ETigerDisciplinesEnum, class UClass*>   Configs;                                                   // 0x0028(0x0050) (Edit, BlueprintVisible, DisableEditOnInstance, UObjectWrapper, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerDisciplineConfigs");
		return ptr;
	}



};

// Class Tiger.TigerDisplacementConfig
// 0x0068 (FullSize[0x01D8] - InheritedSize[0x0170])
class UTigerDisplacementConfig : public UTigerDisciplineAnimTriggeredConfig
{
public:
	bool                                               bShowDebugInfo;                                            // 0x0170(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_BCHZ[0x3];                                     // 0x0171(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              AttackingRange;                                            // 0x0174(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              AttackingRadius;                                           // 0x0178(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              PlayerTargetMultiplier;                                    // 0x017C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MeleeAreaMultiplier;                                       // 0x0180(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_6WES[0x4];                                     // 0x0184(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UCurveFloat*                                 AimAxisValueCurve;                                         // 0x0188(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                                 DistanceFromUseValueCurve;                                 // 0x0190(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              Damage;                                                    // 0x0198(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              BackgroundFindTargetInterval;                              // 0x019C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              PlayerToScoutedTargetDotProductCutoff;                     // 0x01A0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_LJVD[0x4];                                     // 0x01A4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class USoundBase*                                  ActivationSound;                                           // 0x01A8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      DOTToApply;                                                // 0x01B0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      BuffToApplyOnCasterWhenTeleporting;                        // 0x01B8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      TargetMarkerWidgetClass;                                   // 0x01C0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                                AirMontage;                                                // 0x01C8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bInterruptClimbOnTarget;                                   // 0x01D0(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_9550[0x7];                                     // 0x01D1(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerDisplacementConfig");
		return ptr;
	}



};

// Class Tiger.TigerDisciplineDisplacement
// 0x0058 (FullSize[0x0148] - InheritedSize[0x00F0])
class UTigerDisciplineDisplacement : public UTigerDisciplineAnimTriggered
{
public:
	class UTigerWidget*                                TargetMarker;                                              // 0x00F0(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTigerDisplacementConfig*                    Config;                                                    // 0x00F8(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_V11K[0x10];                                    // 0x0100(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class ATigerCharacter*                             ClientSidePotentialTarget;                                 // 0x0110(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_5VYD[0x30];                                    // 0x0118(0x0030) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerDisciplineDisplacement");
		return ptr;
	}



	void OnLockTarget();
};

// Class Tiger.TigerEarthshockConfig
// 0x00F8 (FullSize[0x0258] - InheritedSize[0x0160])
class UTigerEarthshockConfig : public UTigerActiveDisciplineConfig
{
public:
	struct FText                                       EffectRadiusText;                                          // 0x0160(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FText                                       EffectRadiusSuffix;                                        // 0x0178(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, DisableEditOnInstance, NativeAccessSpecifierPublic)
	float                                              SurfaceAngleThreshold;                                     // 0x0190(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              KnockupInitialVelocity;                                    // 0x0194(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              HitboxConeHalfAngleInDegrees;                              // 0x0198(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              TerrainBlockTraceHeightGrace;                              // 0x019C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ConeDamageRadius;                                          // 0x01A0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              InnerHitSphereRadius;                                      // 0x01A4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ConeForwardOffset;                                         // 0x01A8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SphereTraceRadius;                                         // 0x01AC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaxRangeAngleDeviationThreshold;                           // 0x01B0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MinRangeAngleDeviationThreshold;                           // 0x01B4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MinimumRange;                                              // 0x01B8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaximumRange;                                              // 0x01BC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaximumHeight;                                             // 0x01C0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              DownTraceLength;                                           // 0x01C4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              InitialJumpApexHeight;                                     // 0x01C8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bUseSurfaceProjectedForward;                               // 0x01CC(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_UOAW[0x3];                                     // 0x01CD(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              AirAttackSpeed;                                            // 0x01D0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaxTargetEffectDistanceUp;                                 // 0x01D4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaxTargetEffectDistanceDown;                               // 0x01D8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              StunTime;                                                  // 0x01DC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                                 TravelDistanceDamageMultiplierCurve;                       // 0x01E0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              Damage;                                                    // 0x01E8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              WallAngleLandingAnimationThreshold;                        // 0x01EC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              StartLandingAnimationOffsetGround;                         // 0x01F0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              StartLandingAnimationOffsetWall;                           // 0x01F4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                                AirAttackAnimationJump;                                    // 0x01F8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                                AirAttackAnimationMidAir;                                  // 0x0200(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                                AirAttackAnimationLandGround;                              // 0x0208(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                                AirAttackAnimationLandWall;                                // 0x0210(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               TakeOffAudioEvent;                                         // 0x0218(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               LaunchAudioEvent;                                          // 0x0220(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               HitGroundSound;                                            // 0x0228(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               ImpactWarningSound;                                        // 0x0230(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              CameraShakeBoundaryHeight;                                 // 0x0238(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_A117[0x4];                                     // 0x023C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UClass*                                      CameraLowEffectShake;                                      // 0x0240(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      CameraHighEffectShake;                                     // 0x0248(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      CameraAirEffectShake;                                      // 0x0250(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerEarthshockConfig");
		return ptr;
	}



};

// Class Tiger.TigerDisciplineEarthshock
// 0x0100 (FullSize[0x0178] - InheritedSize[0x0078])
class UTigerDisciplineEarthshock : public UTigerDisciplineBase
{
public:
	struct FEarthshockUseDataNetworked                 EarthshockUseData;                                         // 0x0078(0x0034) (BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_SZUU[0x4];                                     // 0x00AC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UTigerEarthshockConfig*                      EarthshockConfig;                                          // 0x00B0(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_4CEF[0xC0];                                    // 0x00B8(0x00C0) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerDisciplineEarthshock");
		return ptr;
	}



	void OnTargetIndicatorUpdated(bool bInHasTargetLocation, const struct FVector& InTargetLocation, const struct FVector& InSurfaceNormal, bool bInTargetIsWall);
	void OnSpawnTargetIndicator();
	void OnRemoveTargetIndicator();
	void OnLanded(const struct FVector& InLocation, const struct FVector& InSurfaceNormal, bool bInTargetIsWall);
	void OnEnemyCharacterHit(class ATigerCharacter* InHitCharacter);
	void OnDescentForcedMoveDone(Tiger_ETigerForcedMoveResult ForcedMoveResult);
	void Multicast_SimulatedProxyImpact(const struct FVector& InConeDirection);
	float GetLeapTime(const struct FVector& InLeapVector);
	struct FVector GetConeDirection();
	bool EvaluateIsTargetLocationValid(bool bIsWall, const struct FHitResult& InHitSurface);
	struct FVector CalculateKnockbackForce(class ATigerCharacter* InHitCharacter);
	struct FVector CalculateConeDirection();
};

// Class Tiger.TigerFlowerOfDeathConfig
// 0x0030 (FullSize[0x0190] - InheritedSize[0x0160])
class UTigerFlowerOfDeathConfig : public UTigerActiveDisciplineConfig
{
public:
	bool                                               ShowDebugCapsule;                                          // 0x0160(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_2TPO[0x3];                                     // 0x0161(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              TargetRadius;                                              // 0x0164(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              OverrideDuration;                                          // 0x0168(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              Damage;                                                    // 0x016C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      EffectBlueprint;                                           // 0x0170(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                                AttackerAnimation;                                         // 0x0178(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundBase*                                  ActivationSound;                                           // 0x0180(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      SpeedBuff;                                                 // 0x0188(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerFlowerOfDeathConfig");
		return ptr;
	}



};

// Class Tiger.TigerDisciplineFlowerOfDeath
// 0x0020 (FullSize[0x0098] - InheritedSize[0x0078])
class UTigerDisciplineFlowerOfDeath : public UTigerDisciplineBase
{
public:
	class UTigerFlowerOfDeathConfig*                   Config;                                                    // 0x0078(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_AB4L[0x18];                                    // 0x0080(0x0018) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerDisciplineFlowerOfDeath");
		return ptr;
	}



};

// Class Tiger.TigerFOTTConfig
// 0x0150 (FullSize[0x02B0] - InheritedSize[0x0160])
class UTigerFOTTConfig : public UTigerActiveDisciplineConfig
{
public:
	bool                                               bDebugHitboxVisualization;                                 // 0x0160(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bDebugWallhitAngle;                                        // 0x0161(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_T51M[0x2];                                     // 0x0162(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FVector                                     HitBoxExtents;                                             // 0x0164(0x000C) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     HitBoxOffset;                                              // 0x0170(0x000C) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_08BI[0x4];                                     // 0x017C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FText                                       KnockbackDistanceText;                                     // 0x0180(0x0018) (Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<float>                                      KnockbackDistanceTooltipValues;                            // 0x0198(0x0010) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FText                                       KnockbackDistanceSuffix;                                   // 0x01A8(0x0018) (Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)
	float                                              KnockbackTime;                                             // 0x01C0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              TimeBeforeRagdollOnDeadNPCs;                               // 0x01C4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              RagdollKnockbackForceMultiplier;                           // 0x01C8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              KnockbackStunDuration;                                     // 0x01CC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              KnockbackAngle;                                            // 0x01D0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaxChargeDuration;                                         // 0x01D4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              AttackDuration;                                            // 0x01D8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaxWallStunAnglePitchDiff;                                 // 0x01DC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaxWallStunAngleYawDiff;                                   // 0x01E0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MinimumChargeupTime;                                       // 0x01E4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              EndOfAttackPercentageSpeedKept;                            // 0x01E8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              HitTargetsPercentageSpeedKept;                             // 0x01EC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      SelfbuffWhileCharging;                                     // 0x01F0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      TargetKnockedIntoWallBuff;                                 // 0x01F8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                                 TravelDistance;                                            // 0x0200(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UCurveFloat*>                         KnockbackDistance;                                         // 0x0208(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class UCurveFloat*                                 FistDamage;                                                // 0x0218(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                                 TargetWallHitDamage;                                       // 0x0220(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                                 TargetWallHitStun;                                         // 0x0228(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              WallEffectRadius;                                          // 0x0230(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              WallEffectStayTime;                                        // 0x0234(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              WallEffectFadeTime;                                        // 0x0238(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_UV2B[0x4];                                     // 0x023C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UTigerAnimationSetAsset*                     ChargeupBlendspaceAnimationSet;                            // 0x0240(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                                TargetKnockbackAnimation;                                  // 0x0248(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                                 KnockbackAnimationPlayrate;                                // 0x0250(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                                ChargeupAnimation;                                         // 0x0258(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                                ChargeupAnimationAir;                                      // 0x0260(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ChargeupAnimationSpeed;                                    // 0x0268(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       FullyChargedSectionName;                                   // 0x026C(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_TO8J[0x4];                                     // 0x0274(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UAnimMontage*                                AttackerAnimation;                                         // 0x0278(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                                AttackerAnimationAir;                                      // 0x0280(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              AttackAnimationSpeed;                                      // 0x0288(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_TBJ3[0x4];                                     // 0x028C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UAnimMontage*                                RecoverAnimation;                                          // 0x0290(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                                RecoverAnimationAir;                                       // 0x0298(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                                WallHitStunAnimation;                                      // 0x02A0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               WallHitAudioEvent;                                         // 0x02A8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerFOTTConfig");
		return ptr;
	}



};

// Class Tiger.TigerDisciplineFOTT
// 0x0078 (FullSize[0x00F0] - InheritedSize[0x0078])
class UTigerDisciplineFOTT : public UTigerDisciplineBase
{
public:
	class UTigerFOTTConfig*                            Config;                                                    // 0x0078(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_R3DR[0x30];                                    // 0x0080(0x0030) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UParticleSystemComponent*                    PlayerChargeupParticles;                                   // 0x00B0(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UParticleSystemComponent*                    PlayerAttackParticles;                                     // 0x00B8(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UParticleSystemComponent*                    PlayerAttackEndParticles;                                  // 0x00C0(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_DU5M[0x28];                                    // 0x00C8(0x0028) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerDisciplineFOTT");
		return ptr;
	}



	void TickDisciplineEvent(float DeltaTime);
	void OwnerCollided(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, const struct FHitResult& Hit);
	void OnTargetHitSomething(class ATigerCharacter* Target, const struct FVector& HitLocation, const struct FVector& HitNormal);
	void OnStartedChargeup();
	void OnReleasedChargeup();
	void OnHitSomething(bool bHitACharacter);
	void OnCollidedWithWall(const struct FVector& HitLocation, const struct FVector& HitNormal);
	void OnAbortedChargeup();
	void Multicast_FOTTKnockback(class ATigerCharacter* TigerChar, const struct FVector& HitLocation, const struct FVector& EndLocation, bool bWasKilledByHit);
	float GetChargeupProgress(bool ClampProgressAtOne);
	void CharacterCollided(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, const struct FHitResult& Hit);
	void ApplyFOTT(const struct FDisciplineUse& DisciplineUse);
};

// Class Tiger.TigerFrenzyConfig
// 0x0040 (FullSize[0x01A0] - InheritedSize[0x0160])
class UTigerFrenzyConfig : public UTigerActiveDisciplineConfig
{
public:
	float                                              RoarRadius;                                                // 0x0160(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              RoarDamage;                                                // 0x0164(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              GroundedTime;                                              // 0x0168(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ImmobilizeTime;                                            // 0x016C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              DelayBeforeRoarEffect;                                     // 0x0170(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_IEMA[0x4];                                     // 0x0174(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UClass*                                      FrenzyBuff;                                                // 0x0178(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                                RoarAnimation;                                             // 0x0180(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundBase*                                  RoarSound;                                                 // 0x0188(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundBase*                                  BuffActiveSound;                                           // 0x0190(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystem*                             RoarParticles;                                             // 0x0198(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerFrenzyConfig");
		return ptr;
	}



};

// Class Tiger.TigerDisciplineFrenzy
// 0x0020 (FullSize[0x0098] - InheritedSize[0x0078])
class UTigerDisciplineFrenzy : public UTigerDisciplineBase
{
public:
	unsigned char                                      UnknownData_ZJGD[0x10];                                    // 0x0078(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UTigerFrenzyConfig*                          Config;                                                    // 0x0088(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_GCG7[0x8];                                     // 0x0090(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerDisciplineFrenzy");
		return ptr;
	}



};

// Class Tiger.TigerGuardBreakConfig
// 0x0038 (FullSize[0x0198] - InheritedSize[0x0160])
class UTigerGuardBreakConfig : public UTigerActiveDisciplineConfig
{
public:
	float                                              DashDistance;                                              // 0x0160(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              StartupTime;                                               // 0x0164(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              DashTime;                                                  // 0x0168(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              StrikeDelay;                                               // 0x016C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              StrikeDuration;                                            // 0x0170(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              OnHitDamage;                                               // 0x0174(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              BlockedOnHitDamage;                                        // 0x0178(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_710X[0x4];                                     // 0x017C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UClass*                                      OnHitDebuff;                                               // 0x0180(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     HitBoxSize;                                                // 0x0188(0x000C) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               DrawDebugInfo;                                             // 0x0194(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_1SY4[0x3];                                     // 0x0195(0x0003) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerGuardBreakConfig");
		return ptr;
	}



	void OnTargetsHitByStrike(TArray<class ATigerCharacter*> Targets);
	void OnStrike(class ATigerCharacter* Character);
	void OnStartup(class ATigerCharacter* Character);
	void OnDash(class ATigerCharacter* Character, const struct FVector& Location, const struct FVector& Direction);
};

// Class Tiger.TigerDisciplineGuardBreak
// 0x0030 (FullSize[0x00A8] - InheritedSize[0x0078])
class UTigerDisciplineGuardBreak : public UTigerDisciplineBase
{
public:
	class UTigerGuardBreakConfig*                      Config;                                                    // 0x0078(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_6JZL[0x28];                                    // 0x0080(0x0028) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerDisciplineGuardBreak");
		return ptr;
	}



};

// Class Tiger.TigerIncitePainConfig
// 0x0010 (FullSize[0x0180] - InheritedSize[0x0170])
class UTigerIncitePainConfig : public UTigerDisciplineAnimTriggeredConfig
{
public:
	float                                              DamageAmount;                                              // 0x0170(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              Radius;                                                    // 0x0174(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              Reach;                                                     // 0x0178(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bDebugDraw;                                                // 0x017C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_NU2Z[0x3];                                     // 0x017D(0x0003) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerIncitePainConfig");
		return ptr;
	}



};

// Class Tiger.TigerDisciplineIncitePain
// 0x0008 (FullSize[0x00F8] - InheritedSize[0x00F0])
class UTigerDisciplineIncitePain : public UTigerDisciplineAnimTriggered
{
public:
	class UTigerIncitePainConfig*                      Config;                                                    // 0x00F0(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerDisciplineIncitePain");
		return ptr;
	}



};

// Class Tiger.TigerJumpConfig
// 0x0080 (FullSize[0x01F0] - InheritedSize[0x0170])
class UTigerJumpConfig : public UTigerDisciplineAnimTriggeredConfig
{
public:
	bool                                               bDebugJumpline;                                            // 0x0170(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bDebugBlockJump;                                           // 0x0171(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_QRDQ[0x2];                                     // 0x0172(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              JumpVelocity;                                              // 0x0174(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bAllowDoublejumpAfterDiscipline;                           // 0x0178(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bShouldDelayJumpInAir;                                     // 0x0179(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_U4ZV[0x6];                                     // 0x017A(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UAnimMontage*                                LaunchMontage;                                             // 0x0180(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                                GroundAnticipationMontage;                                 // 0x0188(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              CameraPresetDuration;                                      // 0x0190(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_JRGW[0x4];                                     // 0x0194(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UMaterial*                                   JumpFullscreenPostFX;                                      // 0x0198(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialParameterCollection*                JumpPostFXCollection;                                      // 0x01A0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       JumpPostFXStrengthParameterName;                           // 0x01A8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              JumpPostFXMaxStrength;                                     // 0x01B0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              JumpEffectsDuration;                                       // 0x01B4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              JumpEffectsLerpInTime;                                     // 0x01B8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              JumpEffectsLerpOutTime;                                    // 0x01BC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               LeapStartedAudio;                                          // 0x01C0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     FeetObstacleOffset;                                        // 0x01C8(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ObstacleDistanceCheck;                                     // 0x01D4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              PartiallyBlockedJumpModifier;                              // 0x01D8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              BackLeapPitch;                                             // 0x01DC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                                 LeapPitchCurve;                                            // 0x01E0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bCanLeapBackward;                                          // 0x01E8(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_KPI4[0x3];                                     // 0x01E9(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              AnimationBlendoutTime;                                     // 0x01EC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerJumpConfig");
		return ptr;
	}



};

// Class Tiger.TigerDisciplineJump
// 0x0068 (FullSize[0x0158] - InheritedSize[0x00F0])
class UTigerDisciplineJump : public UTigerDisciplineAnimTriggered
{
public:
	unsigned char                                      UnknownData_KMEH[0x8];                                     // 0x00F0(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UTigerJumpConfig*                            Config;                                                    // 0x00F8(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCapsuleComponent*                           CapsuleOverlapComponent;                                   // 0x0100(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_ALJT[0x40];                                    // 0x0108(0x0040) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class AActor*>                              ActorsThatOverlapped;                                      // 0x0148(0x0010) (ZeroConstructor, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerDisciplineJump");
		return ptr;
	}



	void OnLeapStarted();
	void OnLeapEnded();
	struct FVector GetTargetPosition(const struct FVector& PlayerEyeLocation, const struct FRotator& CameraRotation, float JumpCheckDistance);
};

// Class Tiger.TigerLaceratingThrowConfig
// 0x0058 (FullSize[0x01C8] - InheritedSize[0x0170])
class UTigerLaceratingThrowConfig : public UTigerDisciplineAnimTriggeredConfig
{
public:
	class UClass*                                      KnifeActor;                                                // 0x0170(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UClass*>                              BuffToApplyOnHit;                                          // 0x0178(0x0010) (Edit, BlueprintVisible, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	float                                              ProjectileSpeed;                                           // 0x0188(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              DamageOnHit;                                               // 0x018C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              Reach;                                                     // 0x0190(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_HMC1[0x4];                                     // 0x0194(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FText                                       SlowText;                                                  // 0x0198(0x0018) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FText                                       SlowSuffix;                                                // 0x01B0(0x0018) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerLaceratingThrowConfig");
		return ptr;
	}



};

// Class Tiger.TigerDisciplineLaceratingThrow
// 0x0008 (FullSize[0x00F8] - InheritedSize[0x00F0])
class UTigerDisciplineLaceratingThrow : public UTigerDisciplineAnimTriggered
{
public:
	class UTigerLaceratingThrowConfig*                 Config;                                                    // 0x00F0(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerDisciplineLaceratingThrow");
		return ptr;
	}



};

// Class Tiger.TigerMajestyConfig
// 0x0060 (FullSize[0x01C0] - InheritedSize[0x0160])
class UTigerMajestyConfig : public UTigerActiveDisciplineConfig
{
public:
	class UAnimMontage*                                Montage;                                                   // 0x0160(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ApplyEffectTime;                                           // 0x0168(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_8GK7[0x4];                                     // 0x016C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FText                                       CharmDurationText;                                         // 0x0170(0x0018) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FText                                       CharmDurationSuffix;                                       // 0x0188(0x0018) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	TArray<class UClass*>                              CharmedBuff;                                               // 0x01A0(0x0010) (Edit, BlueprintVisible, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	bool                                               bDoFacingCheckOnNPCs;                                      // 0x01B0(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bIsEntityImmune;                                           // 0x01B1(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bRequireLineOfSight;                                       // 0x01B2(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_JNJK[0x1];                                     // 0x01B3(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              Radius;                                                    // 0x01B4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              FacingAllowedYawDifference;                                // 0x01B8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bDebugDraw;                                                // 0x01BC(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_D3GE[0x3];                                     // 0x01BD(0x0003) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerMajestyConfig");
		return ptr;
	}



};

// Class Tiger.TigerMajestyBuffInstance
// 0x0000 (FullSize[0x0088] - InheritedSize[0x0088])
class UTigerMajestyBuffInstance : public UTigerBuffInstance
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerMajestyBuffInstance");
		return ptr;
	}



};

// Class Tiger.TigerMajestyBuff
// 0x0008 (FullSize[0x0278] - InheritedSize[0x0270])
class UTigerMajestyBuff : public UTigerBuff
{
public:
	float                                              NPCDuration;                                               // 0x0270(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_GX1O[0x4];                                     // 0x0274(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerMajestyBuff");
		return ptr;
	}



};

// Class Tiger.TigerDisciplineMajesty
// 0x0010 (FullSize[0x0088] - InheritedSize[0x0078])
class UTigerDisciplineMajesty : public UTigerDisciplineBase
{
public:
	class UTigerMajestyConfig*                         Config;                                                    // 0x0078(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_AO7N[0x8];                                     // 0x0080(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerDisciplineMajesty");
		return ptr;
	}



};

// Class Tiger.TigerParticleStrategy
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class UTigerParticleStrategy : public UObject
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerParticleStrategy");
		return ptr;
	}



};

// Class Tiger.TigerParticleStrategyPostSpawn
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class UTigerParticleStrategyPostSpawn : public UTigerParticleStrategy
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerParticleStrategyPostSpawn");
		return ptr;
	}



	void ExecutePostSpawnStrategy(class UParticleSystemComponent* InParticleToExecuteOn, class ATigerCharacter* InParticleInstigator);
};

// Class Tiger.TigerDisciplineParticleStrategy
// 0x0030 (FullSize[0x0058] - InheritedSize[0x0028])
class UTigerDisciplineParticleStrategy : public UTigerParticleStrategyPostSpawn
{
public:
	struct FLinearColor                                StandardColorOverride;                                     // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                                EnemyColorOverride;                                        // 0x0038(0x0010) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	Tiger_ETigerDisciplineParticleStrategyColorModes   ColorOverrideMode;                                         // 0x0048(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_FKIY[0x3];                                     // 0x0049(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FName                                       ColorParameterName;                                        // 0x004C(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_6Y5Q[0x4];                                     // 0x0054(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerDisciplineParticleStrategy");
		return ptr;
	}



	void PickColors(class UParticleSystemComponent* InParticleToExecuteOn, class ATigerCharacter* InParticleInstigator, struct FLinearColor* OutStandardColorOverride, struct FLinearColor* OutEnemyColorOverride);
	void ApplyColors(class UParticleSystemComponent* InParticleToExecuteOn, class ATigerCharacter* InParticleInstigator, const struct FLinearColor& InStandardColorOverride, const struct FLinearColor& InEnemyColorOverride);
};

// Class Tiger.TigerPassionConfig
// 0x0120 (FullSize[0x0280] - InheritedSize[0x0160])
class UTigerPassionConfig : public UTigerActiveDisciplineConfig
{
public:
	float                                              ProjectileMinLengthScale;                                  // 0x0160(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ProjectileMaxLengthScale;                                  // 0x0164(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ProjectileMinWidthScale;                                   // 0x0168(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ProjectileMaxWidthScale;                                   // 0x016C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ProjectileMinHeightScale;                                  // 0x0170(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ProjectileMaxHeightScale;                                  // 0x0174(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ProjectileMinSpeed;                                        // 0x0178(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ProjectileMaxSpeed;                                        // 0x017C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ProjectileMinRange;                                        // 0x0180(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ProjectileMaxRange;                                        // 0x0184(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              PanicMinDuration;                                          // 0x0188(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              PanicMaxDuration;                                          // 0x018C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ApathyMinDuration;                                         // 0x0190(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ApathyMaxDuration;                                         // 0x0194(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ApathyStartSlowMultiplier;                                 // 0x0198(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ApathyEndSlowMultiplier;                                   // 0x019C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              WrathMinDuration;                                          // 0x01A0(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              WrathMaxDuration;                                          // 0x01A4(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              WrathMinAdditionalDamageMultiplier;                        // 0x01A8(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              WrathMaxAdditionalDamageMultiplier;                        // 0x01AC(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                                ChooseEffectAnimation;                                     // 0x01B0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                                ChargeEffectAnimation;                                     // 0x01B8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                                ReleaseEffectAnimation;                                    // 0x01C0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<Tiger_ETigerPassionEffect, class UClass*>     EffectBuffs;                                               // 0x01C8(0x0050) (Edit, DisableEditOnInstance, UObjectWrapper, NativeAccessSpecifierPublic)
	TMap<Tiger_ETigerPassionEffect, class UParticleSystem*> ProjectileParticles;                                       // 0x0218(0x0050) (Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class UClass*                                      ProjectileActor;                                           // 0x0268(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              TimeBetweenEffectChange;                                   // 0x0270(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ChooseEffectTimeOut;                                       // 0x0274(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaxChargeTime;                                             // 0x0278(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              UsageCooldown;                                             // 0x027C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerPassionConfig");
		return ptr;
	}



};

// Class Tiger.TigerDisciplinePassion
// 0x0028 (FullSize[0x00A0] - InheritedSize[0x0078])
class UTigerDisciplinePassion : public UTigerDisciplineBase
{
public:
	class UTigerPassionConfig*                         Config;                                                    // 0x0078(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_YUZC[0x20];                                    // 0x0080(0x0020) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerDisciplinePassion");
		return ptr;
	}



};

// Class Tiger.TigerProjectionDashConfig
// 0x0080 (FullSize[0x01F0] - InheritedSize[0x0170])
class UTigerProjectionDashConfig : public UTigerDisciplineAnimTriggeredConfig
{
public:
	class UAnimMontage*                                DownedMontage;                                             // 0x0170(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                                DashStartMontage;                                          // 0x0178(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                                DashEnterMontage;                                          // 0x0180(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                                DashExitMontage;                                           // 0x0188(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                                  DashIcon;                                                  // 0x0190(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      DashBuff;                                                  // 0x0198(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      ThornsBuff;                                                // 0x01A0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      ProjectionActor;                                           // 0x01A8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      TargetIndicatorActor;                                      // 0x01B0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     TargetingRayStartOffset;                                   // 0x01B8(0x000C) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              DelayBeforeDashIsPossible;                                 // 0x01C4(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              DashSpeed;                                                 // 0x01C8(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              DashExitVelocityScale;                                     // 0x01CC(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              DashEnterDuration;                                         // 0x01D0(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              DashExitDuration;                                          // 0x01D4(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ProjectionMaxDistance;                                     // 0x01D8(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ProjectionAutoDespawnDistance;                             // 0x01DC(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ProjectionSpeed;                                           // 0x01E0(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ProjectionStoppedLifetime;                                 // 0x01E4(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              TargetIndicatorLerpSpeed;                                  // 0x01E8(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bDashMoveToExit;                                           // 0x01EC(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	Tiger_ETigerProjectionDashCooldownStart            CooldownStart;                                             // 0x01ED(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_N7IW[0x2];                                     // 0x01EE(0x0002) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerProjectionDashConfig");
		return ptr;
	}



};

// Class Tiger.TigerDisciplineProjectionDash
// 0x0078 (FullSize[0x0168] - InheritedSize[0x00F0])
class UTigerDisciplineProjectionDash : public UTigerDisciplineAnimTriggered
{
public:
	struct FVector                                     DashStartLocation;                                         // 0x00F0(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                                     DashEnterLocation;                                         // 0x00FC(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                                     DashExitLocation;                                          // 0x0108(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                                     DashEndLocation;                                           // 0x0114(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTigerProjectionDashConfig*                  Config;                                                    // 0x0120(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class ATigerProjectionDashProjectile*              SpawnedProjection;                                         // 0x0128(0x0008) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_F21Y[0x18];                                    // 0x0130(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class AActor*                                      TargetIndicator;                                           // 0x0148(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_2QGW[0x18];                                    // 0x0150(0x0018) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerDisciplineProjectionDash");
		return ptr;
	}



	void Server_StopProjection(float InLerpAlpha);
	void OnProjectionDestroyedOnClient(Tiger_ETigerProjectionDashEndReason InReason);
	void OnOwnerLifeStatusChanged(Tiger_ETigerPlayerLifeStatus InNewLifeStatus);
	void OnForcedMoveResult(Tiger_ETigerForcedMoveResult InForcedMoveResult);
	void OnDashStart();
	void OnDashExit();
	void OnDashEnter();
	void OnDashEnd();
	void Multicast_DashStart(const struct FVector& InStartLocation, const struct FVector& InEnterLocation, const struct FVector& InEndLocation);
	void Multicast_DashExit(const struct FVector& InExitLocation, const struct FVector& InEndLocation);
	void Multicast_DashEnter();
	void Multicast_DashEnd(const struct FVector& InStartLocation, const struct FVector& InEnterLocation, const struct FVector& InExitLocation, const struct FVector& InEndLocation);
	float GetCurrentProjectionMaxDistanceRatio();
	void Client_TimeoutProjection();
	void Client_DespawnProjectionDueToRange();
};

// Class Tiger.TigerRejuvenatingVoiceConfig
// 0x0058 (FullSize[0x01C8] - InheritedSize[0x0170])
class UTigerRejuvenatingVoiceConfig : public UTigerDisciplineAnimTriggeredConfig
{
public:
	class UAnimMontage*                                DownedMontage;                                             // 0x0170(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                                DownedCancelMontage;                                       // 0x0178(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                                DownedInterruptMontage;                                    // 0x0180(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                                CancelMontage;                                             // 0x0188(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                                InterruptMontage;                                          // 0x0190(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      HealingBuff;                                               // 0x0198(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ReceivedDamageThreshold;                                   // 0x01A0(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              CasterHealRange;                                           // 0x01A4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ProjectionHealRange;                                       // 0x01A8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ProjectionHealMultiplier;                                  // 0x01AC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SelfHealFlat;                                              // 0x01B0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SelfHealPercent;                                           // 0x01B4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              TeamHealFlat;                                              // 0x01B8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              TeamHealPercent;                                           // 0x01BC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              HealTickRate;                                              // 0x01C0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bOnlyHealRecentDamage;                                     // 0x01C4(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bRecentDamageVisibleForGroup;                              // 0x01C5(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bShouldGlideWhenActive;                                    // 0x01C6(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_4DFZ[0x1];                                     // 0x01C7(0x0001) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerRejuvenatingVoiceConfig");
		return ptr;
	}



};

// Class Tiger.TigerDisciplineRejuvenatingVoice
// 0x0048 (FullSize[0x0138] - InheritedSize[0x00F0])
class UTigerDisciplineRejuvenatingVoice : public UTigerDisciplineAnimTriggered
{
public:
	class UTigerRejuvenatingVoiceConfig*               Config;                                                    // 0x00F0(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_ZOL7[0x40];                                    // 0x00F8(0x0040) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerDisciplineRejuvenatingVoice");
		return ptr;
	}



	void PulseHeal(float InHealMultiplier, bool bInOnCaster, bool bInOnProjection);
	void OnPlayerExit(class ATigerPlayer* InPlayer);
	void OnPlayerEnter(class ATigerPlayer* InPlayer);
	void OnPlayerDamageTaken(class AActor* InDamagedActor, float InDamage, class UDamageType* InDamageType, class AController* InInstigatedBy, class AActor* InDamageCauser);
	void OnHealStop();
	void OnHealStart();
	void OnHealPulse(bool bInOnProjection);
	void Multicast_PlayerExit(class ATigerPlayer* InPlayer);
	void Multicast_PlayerEnter(class ATigerPlayer* InPlayer);
	void Multicast_InterruptChanneling();
	void Multicast_HealStop();
	void Multicast_HealStart();
	void Multicast_HealPulse(bool bInOnProjection);
	void Multicast_BuffHealTick(class ATigerPlayer* InBuffOwner, unsigned char InHealAmount);
	bool HasProjection();
	struct FVector GetProjectionLocation();
	class AActor* GetProjectionActor();
};

// Class Tiger.TigerRepositionConfig
// 0x0028 (FullSize[0x0188] - InheritedSize[0x0160])
class UTigerRepositionConfig : public UTigerActiveDisciplineConfig
{
public:
	class UClass*                                      TracerActor;                                               // 0x0160(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      RewindBuff;                                                // 0x0168(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              RewindTimeSeconds;                                         // 0x0170(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SampleRate;                                                // 0x0174(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              RewindSpeed;                                               // 0x0178(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              RewindPlaybackTimeMin;                                     // 0x017C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              RewindPlaybackTimeMax;                                     // 0x0180(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_I72T[0x4];                                     // 0x0184(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerRepositionConfig");
		return ptr;
	}



};

// Class Tiger.TigerBuffRepositionInstance
// 0x0010 (FullSize[0x0098] - InheritedSize[0x0088])
class UTigerBuffRepositionInstance : public UTigerBuffInstance
{
public:
	class UPrimitiveComponent*                         Root;                                                      // 0x0088(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_AMFT[0x8];                                     // 0x0090(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerBuffRepositionInstance");
		return ptr;
	}



};

// Class Tiger.TigerBuffReposition
// 0x0008 (FullSize[0x0278] - InheritedSize[0x0270])
class UTigerBuffReposition : public UTigerBuffStun
{
public:
	float                                              NoiseNotifyEventRange;                                     // 0x0270(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_FSTO[0x4];                                     // 0x0274(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerBuffReposition");
		return ptr;
	}



};

// Class Tiger.TigerRepositionTracer
// 0x0000 (FullSize[0x0228] - InheritedSize[0x0228])
class ATigerRepositionTracer : public AActor
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerRepositionTracer");
		return ptr;
	}



	void Trace(TArray<struct FVector> PreviousLocations, float Duration);
};

// Class Tiger.TigerDisciplineReposition
// 0x0028 (FullSize[0x00A0] - InheritedSize[0x0078])
class UTigerDisciplineReposition : public UTigerDisciplineBase
{
public:
	class UTigerRepositionConfig*                      Config;                                                    // 0x0078(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_8V96[0x20];                                    // 0x0080(0x0020) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerDisciplineReposition");
		return ptr;
	}



};

// Class Tiger.TigerScoutsConfig
// 0x0050 (FullSize[0x01C0] - InheritedSize[0x0170])
class UTigerScoutsConfig : public UTigerDisciplineAnimTriggeredConfig
{
public:
	class UClass*                                      ScoutActor;                                                // 0x0170(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      PassiveClass;                                              // 0x0178(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              RevealDuration;                                            // 0x0180(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              PassiveScanRadius;                                         // 0x0184(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ActiveScanRadius;                                          // 0x0188(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ScoutDespawnDistance;                                      // 0x018C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              Reach;                                                     // 0x0190(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ScoutingMaxDistanceFromOwner;                              // 0x0194(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              TargetLocationNormalOffset;                                // 0x0198(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_1V2A[0x4];                                     // 0x019C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UAnimMontage*                                AirMontage;                                                // 0x01A0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               RevealedCharacterAudioEvent;                               // 0x01A8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       BoneToSpawnFrom;                                           // 0x01B0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bShouldAlwaysStartFromPlayer;                              // 0x01B8(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_V3O5[0x7];                                     // 0x01B9(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerScoutsConfig");
		return ptr;
	}



};

// Class Tiger.TigerDisciplineScouts
// 0x0020 (FullSize[0x0110] - InheritedSize[0x00F0])
class UTigerDisciplineScouts : public UTigerDisciplineAnimTriggered
{
public:
	class UTigerFamiliarScoutPassive*                  Server_PassiveComponent;                                   // 0x00F0(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class ATigerFamiliarScout*                         Server_SpawnedFamiliar;                                    // 0x00F8(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTigerScoutsConfig*                          Config;                                                    // 0x0100(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_YXWR[0x8];                                     // 0x0108(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerDisciplineScouts");
		return ptr;
	}



	void Multicast_ScoutSpawnedResult(bool bAreScoutsOut);
};

// Class Tiger.TigerShacklesConfig
// 0x0040 (FullSize[0x01A0] - InheritedSize[0x0160])
class UTigerShacklesConfig : public UTigerActiveDisciplineConfig
{
public:
	class UMaterialInterface*                          ShacklesAimingDecal;                                       // 0x0160(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaxRange;                                                  // 0x0168(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ShacklesAoeSize;                                           // 0x016C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ExplosionDepth;                                            // 0x0170(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_AMWL[0x4];                                     // 0x0174(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<float>                                      ExplosionDamage;                                           // 0x0178(0x0010) (Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	class UClass*                                      ShackleMine;                                               // 0x0188(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MineLifeTime;                                              // 0x0190(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              DelayBeforeShackleActivation;                              // 0x0194(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       CastAnimationName;                                         // 0x0198(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerShacklesConfig");
		return ptr;
	}



};

// Class Tiger.TigerDisciplineShackles
// 0x0018 (FullSize[0x0090] - InheritedSize[0x0078])
class UTigerDisciplineShackles : public UTigerDisciplineBase
{
public:
	unsigned char                                      UnknownData_T11D[0x8];                                     // 0x0078(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UTigerShacklesConfig*                        Config;                                                    // 0x0080(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class ADecalActor*                                 ClientAimDecal;                                            // 0x0088(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerDisciplineShackles");
		return ptr;
	}



};

// Class Tiger.TigerElysiumGameState
// 0x0140 (FullSize[0x0460] - InheritedSize[0x0320])
class ATigerElysiumGameState : public ATigerGameState
{
public:
	unsigned char                                      UnknownData_GA1W[0x50];                                    // 0x0320(0x0050) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FTigerMetaStoreEntriesKeeper                FlashStoreStoreEntries;                                    // 0x0370(0x0040) (Net, RepNotify, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_FT7M[0x10];                                    // 0x03B0(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FTigerMetaStoreEntriesKeeper                BattlepassStoreEntries;                                    // 0x03C0(0x0040) (Net, RepNotify, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	struct FTigerMetaStoreEntriesKeeper                RankSkipStoreEntries;                                      // 0x0400(0x0040) (Net, RepNotify, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_0U0Q[0x20];                                    // 0x0440(0x0020) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerElysiumGameState");
		return ptr;
	}



	void OnRep_RankSkipEntriesChanged();
	void OnRep_FlashStoreEntriesChanged();
	void OnRep_BattlepassEntriesChanged();
};

// Class Tiger.TigerHUD
// 0x00E0 (FullSize[0x03F8] - InheritedSize[0x0318])
class ATigerHUD : public AHUD
{
public:
	struct FScriptMulticastDelegate                    OnInGameMenuToggled;                                       // 0x0318(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnMenuOpened;                                              // 0x0328(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UTigerIngameMenuWidget*                      IngameMenuUI;                                              // 0x0338(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTigerGroupUIWidget*                         GroupStatus;                                               // 0x0340(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTigerEmoteWheelWidget*                      EmoteWheel;                                                // 0x0348(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTigerNotificationsUI*                       NotificationsUI;                                           // 0x0350(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTigerContextualHelpUI*                      ContextualHelpUI;                                          // 0x0358(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_IZOZ[0x18];                                    // 0x0360(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class ATigerPlayerController*                      TigerPlayerController;                                     // 0x0378(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTigerCrosshairWidget*                       Crosshair;                                                 // 0x0380(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FAutoInitializedWidget>              AutoInitializedWidgets;                                    // 0x0388(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_TT5X[0x10];                                    // 0x0398(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UTigerMenuWidget*                            CurrentlyOpenMenu;                                         // 0x03A8(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_TZ8Q[0x10];                                    // 0x03B0(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class UUserWidget*>                         HiddenWidgets;                                             // 0x03C0(0x0010) (Edit, ExportObject, ZeroConstructor, DisableEditOnTemplate, EditConst, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	TArray<TWeakObjectPtr<class UWidgetComponent>>     HiddenWidgetComponents;                                    // 0x03D0(0x0010) (Edit, ExportObject, ZeroConstructor, DisableEditOnTemplate, EditConst, ContainsInstancedReference, UObjectWrapper, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_AH5Y[0x18];                                    // 0x03E0(0x0018) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerHUD");
		return ptr;
	}



	void ShowOnScreenUI();
	void RemoveOnScreenWidget(class UTigerWidget* InWidget);
	void OpenMenuWidget(class UTigerMenuWidget* InMenuWidget, int InZOrder);
	void OnPawnPossessed();
	void OnMenuWidgetOpened__DelegateSignature(class UTigerMenuWidget* InMenuWidget);
	void OnInGameMenuToggled__DelegateSignature(bool bIsOpen);
	void HideOnScreenUI();
	int GetDefaultZOrderForAutoInitializedWidget(class UTigerWidget* InWidget);
	void CloseMenuWidget(class UTigerMenuWidget* InMenuWidget);
	void CloseIngameMenu();
	void AddOnScreenWidget(class UTigerWidget* InWidget);
};

// Class Tiger.TigerElysiumHUD
// 0x0120 (FullSize[0x0518] - InheritedSize[0x03F8])
class ATigerElysiumHUD : public ATigerHUD
{
public:
	class UClass*                                      DialogueInteractionWidget;                                 // 0x03F8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      SoftPromotionalUiClass[0x28];                              // 0x0400(0x0028) UNKNOWN PROPERTY: SoftClassProperty
	class UTigerPromotionalUI*                         PromotionalUi;                                             // 0x0428(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTigerDialogueInteractionScreen*             CurrentVendorUI;                                           // 0x0430(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      DialogueInteractionCameraPreset[0x28];                     // 0x0438(0x0028) UNKNOWN PROPERTY: SoftClassProperty
	class UTigerWidget*                                ElysiumPlayerInfoUI;                                       // 0x0460(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTigerWidget*                                InGameQueueIndicatorUI;                                    // 0x0468(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTigerWidget*                                Watermark;                                                 // 0x0470(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTigerWidget*                                ProgressHUD;                                               // 0x0478(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTigerInputMenuUI*                           SettingsMenuUi;                                            // 0x0480(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FAutoInitializedWidget>              OpenMenuHiddenWidgets;                                     // 0x0488(0x0010) (ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	TArray<class UClass*>                              OpenMenuWidgetIgnoreList;                                  // 0x0498(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	TArray<TWeakObjectPtr<class UTigerWidget>>         HiddenTigerWidgets;                                        // 0x04A8(0x0010) (ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	unsigned char                                      ScreenTransitionWidgetToUse[0x28];                         // 0x04B8(0x0028) UNKNOWN PROPERTY: SoftClassProperty
	class UTigerScreenTransition*                      ScreenTransitionWidget;                                    // 0x04E0(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                VendorUIZOrder;                                            // 0x04E8(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_JMCR[0x4];                                     // 0x04EC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnPreloadingDone;                                          // 0x04F0(0x0010) (ZeroConstructor, Transient, InstancedReference, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_XZ19[0x8];                                     // 0x0500(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnPromotionalPopupClosed;                                  // 0x0508(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerElysiumHUD");
		return ptr;
	}



	void UseScreenTransition();
	void ToggleVanityInventory();
	void ToggleElysiumGameMenuSubmenu(class UClass* InSubwidgetClass);
	void ToggleElysiumGameMenu();
	void ShowHiddenWidgets();
	bool ShouldCurrentVendorUIUseTransitions();
	void PromotionalPopupClosed();
	void OpenElysiumGameMenu(class UClass* InSubwidgetClass);
	void OnPromotionalUiClosed__DelegateSignature();
	void OnPreloadingDoneMulti__DelegateSignature();
	void OnPreloadingDone__DelegateSignature();
	void IsPreloadingDoneAsync(const struct FScriptDelegate& InDelegate);
	bool IsElysiumGameMenuOpen();
	bool IsCurrentlyInScreenTransition();
	void HideCreatedWidgets();
	void HandleVendorFadeInTransition();
	void FinishSetupOfVendorUI();
	void FinishClosingVendorUI();
	void CloseElysiumGameMenu();
};

// Class Tiger.TigerElysiumNpcBase
// 0x0248 (FullSize[0x0470] - InheritedSize[0x0228])
class ATigerElysiumNpcBase : public AActor
{
public:
	bool                                               bAllowCollision;                                           // 0x0228(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_Q62P[0x7];                                     // 0x0229(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UCapsuleComponent*                           CapsuleComponent;                                          // 0x0230(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USkeletalMeshComponent*                      BodyMesh;                                                  // 0x0238(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USkeletalMeshComponent*                      HeadMesh;                                                  // 0x0240(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USkeletalMeshComponent*                      HairMesh;                                                  // 0x0248(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USkeletalMeshComponent*                      HoodieMesh;                                                // 0x0250(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_R22S[0x8];                                     // 0x0258(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FTigerElysiumNpcData                        NpcData;                                                   // 0x0260(0x01D0) (Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	class UStaticMeshComponent*                        FirstPropSm;                                               // 0x0430(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USkeletalMeshComponent*                      FirstPropSk;                                               // 0x0438(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UChildActorComponent*                        FirstPropBp;                                               // 0x0440(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticMeshComponent*                        SecondPropSm;                                              // 0x0448(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USkeletalMeshComponent*                      SecondPropSk;                                              // 0x0450(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UChildActorComponent*                        SecondPropBp;                                              // 0x0458(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_60P9[0x10];                                    // 0x0460(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerElysiumNpcBase");
		return ptr;
	}



	void LoadAssetsCompleted();
	void LoadAssets();
	void CreatePropFromNonActorAsset(const struct FTigerElysiumNpcProp& InPropStructure);
};

// Class Tiger.TigerElysiumNpcNameplateWidget
// 0x0008 (FullSize[0x0288] - InheritedSize[0x0280])
class UTigerElysiumNpcNameplateWidget : public UTigerWidget
{
public:
	TWeakObjectPtr<class UTigerInteractiveNpcComponent> InteractiveNpcComponent;                                   // 0x0280(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerElysiumNpcNameplateWidget");
		return ptr;
	}



};

// Class Tiger.TigerPlayerState
// 0x0230 (FullSize[0x0558] - InheritedSize[0x0328])
class ATigerPlayerState : public APlayerState
{
public:
	bool                                               bGhostModeOnInit;                                          // 0x0328(0x0001) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bIsGroupLeader;                                            // 0x0329(0x0001) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_X5GV[0x6];                                     // 0x032A(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UTigerGroupStateComponent*                   GroupStateComponent;                                       // 0x0330(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTigerPlayerMasqueradeComponent*             PlayerMasqueradeComponent;                                 // 0x0338(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bIsGroupFull;                                              // 0x0340(0x0001) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_IIHR[0x7];                                     // 0x0341(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UTigerPersistentPlayerState*                 PersistentPlayerState;                                     // 0x0348(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnGroupChangedDelegate;                                    // 0x0350(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnGroupFullnessChangedDelegate;                            // 0x0360(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnNameChangedDelegate;                                     // 0x0370(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnApperanceChanged;                                        // 0x0380(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnPlayerCardLoaded;                                        // 0x0390(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	Tiger_ETigerPowerKitType                           ArchetypeType;                                             // 0x03A0(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	Tiger_ETigerGroupingMode                           GROUPINGMODE;                                              // 0x03A1(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_W097[0x6];                                     // 0x03A2(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnPawnChanged;                                             // 0x03A8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnArchetypeChanged;                                        // 0x03B8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnSeasonLevelChanged;                                      // 0x03C8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UTigerCollectibleProgressCache*              CollectibleProgressCache;                                  // 0x03D8(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTigerGroupId                               GroupID;                                                   // 0x03E0(0x0010) (Net, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                CurrentSpectatorCount;                                     // 0x03F0(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                CurrentSeasonLevel;                                        // 0x03F4(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FTigerCharacterAppearance                   CharacterAppearance;                                       // 0x03F8(0x0080) (BlueprintVisible, Net, RepNotify, Protected, NativeAccessSpecifierProtected)
	bool                                               bHasLoadedAppearance;                                      // 0x0478(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_WE7L[0x3];                                     // 0x0479(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FTigerPersistentPlayerCardData              PlayerCardData;                                            // 0x047C(0x000C) (BlueprintVisible, Net, RepNotify, NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_Y6EB[0x20];                                    // 0x0488(0x0020) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               bHasLoadedPlayerCard;                                      // 0x04A8(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_EC0T[0x83];                                    // 0x04A9(0x0083) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TWeakObjectPtr<class APawn>                        OwningPawn;                                                // 0x052C(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_HXBB[0x4];                                     // 0x0534(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class ATigerPlayerAppearanceCache*                 AppearanceCache;                                           // 0x0538(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AActor*                                      Killer;                                                    // 0x0540(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_ZIIP[0x10];                                    // 0x0548(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerPlayerState");
		return ptr;
	}



	bool SharesGroup(class ATigerPlayerState* OtherPlayer);
	void Server_SetCharacterAppearance(const struct FTigerCharacterAppearance& NewCharacterAppearance);
	void Server_SetArchetype(Tiger_ETigerPowerKitType InArchetypeType);
	void Server_PersistCharacterChanges();
	void Server_LeaveGroup();
	void RandomizeCharacterMeshes();
	void OptionallyLeavePartyAndLeaveGroupIfNotInAParty(bool bInShouldLeaveParty);
	void OnSeasonLevelChanged__DelegateSignature(int InSeasonLevel);
	void OnRep_PlayerCardData();
	void OnRep_GroupIsFull();
	void OnRep_GroupChanged();
	void OnRep_CurrentSeasonLevel();
	void OnRep_CharacterAppearance();
	void OnRep_ArchetypeType();
	void OnPlayerKilledBy(class AActor* InKiller);
	void OnPlayerCardLoaded__DelegateSignature();
	void OnPlayerApperanceChanged__DelegateSignature(class ATigerPlayerState* InPlayerState);
	void OnPersistentPlayerDataInitialized();
	void OnPawnChanged__DelegateSignature(class APawn* NewPawn);
	void OnNameChangedDelegate__DelegateSignature();
	void OnGroupModifiedDelegate__DelegateSignature();
	void OnGroupChangedDelegate__DelegateSignature();
	void OnArchetypeTypeChangedDelegate__DelegateSignature(class UTigerPlayerClanData* InClanData, class UTigerPowerKit* InArchetypeData);
	void LeaveGroup();
	bool IsGroupLeader();
	bool IsGroupFull();
	bool HasGroup();
	bool HasAnySpectators();
	void HandleOnDailyChallengesInitializedEvent();
	class ATigerPlayer* GetTigerPlayer();
	int GetSpectatorCount();
	struct FTigerPlayerMatchStats GetPlayerMatchStats();
	struct FTigerPlayerMatchMetaStats GetPlayerMatchMetaStats();
	struct FTigerCharacterCardData GetPlayerCardCustomizations();
	int GetNumKindredsKilled();
	Tiger_ETigerClan GetClanFromArchetype();
	void Client_OnRecievedReward();
	void Client_OnCollectibleAwardsReceived(class UTigerCollectibleData* InCollectible, const struct FTigerRewardsCollection& InRewards);
	void ApplyPlayerCard();
	void ApplyCharacterAppearance();
};

// Class Tiger.TigerElysiumPlayerState
// 0x0070 (FullSize[0x05C8] - InheritedSize[0x0558])
class ATigerElysiumPlayerState : public ATigerPlayerState
{
public:
	unsigned char                                      UnknownData_KWY3[0x8];                                     // 0x0558(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnIsInPartyChanged;                                        // 0x0560(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnPartySizeChanged;                                        // 0x0570(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnAppearanceChanged;                                       // 0x0580(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	bool                                               bIsInParty;                                                // 0x0590(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int8_t                                             PartySize;                                                 // 0x0591(0x0001) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bIsReadyForMatchmaking;                                    // 0x0592(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_ATEB[0x5];                                     // 0x0593(0x0005) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnGroupReadyStateChanged;                                  // 0x0598(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnLocalPlayerReadyStateChanged;                            // 0x05A8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	class UTigerGrimoireEntry*                         TrainingVideoGrimoireEntry;                                // 0x05B8(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_6X9V[0x8];                                     // 0x05C0(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerElysiumPlayerState");
		return ptr;
	}



	void TryInvitePlayerToGroup(class ATigerPlayerState* OtherPlayer);
	void ToggleReadyState(bool* bOutNewReadyState);
	void TigerOnAppearanceChanged__DelegateSignature(Tiger_ETigerPlayerApperanceChangeReason InReason);
	void SetReadyState(bool bInNewReadyState);
	void Server_TryInvitePlayerToGroup(class ATigerPlayerState* OtherPlayer);
	void Server_SetPartySize(int8_t InPartySize);
	void Server_SetJoinReadyState(bool bInIsReady);
	void Server_GetStoreCategories();
	void Server_EquipItem(int InSlot);
	void Server_EquipCardItem();
	void Server_DeclineInvitation(const struct FTigerGroupInvitation& GroupInvitation);
	void Server_AddPlayerToGroup(const struct FTigerPartyId& InPartyId, bool bInAssignLeader);
	void Server_AcceptInvitation(const struct FTigerGroupInvitation& GroupInvitation);
	void PartyMemberJoinedOrLeft(const struct FTigerPartyId& InPartyId, const struct FString& InPlayerId);
	void OnRep_PartySize();
	void OnPartySizeChanged__DelegateSignature(int InPartySize);
	void OnNewPlayerCard(const struct FTigerPersistentPlayerCardData& InCard);
	void OnNewCharacterAppearance(const struct FTigerCharacterAppearance& InAppearance);
	void OnIsInPartyChanged__DelegateSignature(bool bInIsInParty);
	void OnGroupReadyStateChanged__DelegateSignature(bool bInIsGroupReady);
	void Multicast_OnAppearanceChanged(Tiger_ETigerPlayerApperanceChangeReason InReason);
	void LeftPartyDelegate__DelegateSignature(const struct FTigerParty& InParty);
	void LeftParty(const struct FTigerParty& InParty);
	void LeaveGroupByGroupId(const struct FTigerGroupId& InGroupId);
	void JoinedPartyDelegate__DelegateSignature(const struct FTigerParty& InParty);
	void JoinedParty(const struct FTigerParty& InParty);
	bool IsFirstTimeMatchMaking();
	int GetPartySize();
	void Client_ReceiveOutfitVendorCategories(TArray<struct FTigerClientCategoryDefinition> ClientCategories);
	void Client_ReceiveGroupInvitation(const struct FTigerGroupInvitation& GroupInvitation, class ATigerPlayerState* Inviter);
	void Client_OnGroupMemberReadyStateChanged(class ATigerElysiumPlayerState* InGroupMember, bool bInNewReadyState, bool bInIsEveryoneReady);
};

// Class Tiger.TigerEmoteControllerComponent
// 0x0028 (FullSize[0x00D8] - InheritedSize[0x00B0])
class UTigerEmoteControllerComponent : public UActorComponent
{
public:
	unsigned char                                      SelectableEmoteCount;                                      // 0x00B0(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_8IAG[0x7];                                     // 0x00B1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class ATigerPlayerController*                      PlayerController;                                          // 0x00B8(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_EGST[0x18];                                    // 0x00C0(0x0018) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerEmoteControllerComponent");
		return ptr;
	}



	void Server_StopEmote();
	void Server_PlayEmote(unsigned char InIndex);
	void OnSelectedCharacterChanged(class UTigerPersistentPlayerState* InPersistentPlayerState);
	void OnIconsLoaded__DelegateSignature(TArray<class UTexture2D*> InIcons);
	void LoadEmoteIcons(const struct FScriptDelegate& InDelegate);
	bool HasEmoteAtIndex(unsigned char InIndex);
	TArray<class UTigerCharacterEmoteCustomization*> GetSelectedEmotes();
	void GetEmoteNames(TArray<struct FText>* OutEmoteNames);
	void Client_EmoteFailed();
};

// Class Tiger.TigerEmotePlayerComponent
// 0x0018 (FullSize[0x00C8] - InheritedSize[0x00B0])
class UTigerEmotePlayerComponent : public UActorComponent
{
public:
	struct FTigerPlayingEmote                          PlayingEmote;                                              // 0x00B0(0x0010) (Net, RepNotify, NoDestructor, NativeAccessSpecifierPrivate)
	class ATigerPlayer*                                Player;                                                    // 0x00C0(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerEmotePlayerComponent");
		return ptr;
	}



	void OnRep_PlayingEmote(const struct FTigerPlayingEmote& OldEmote);
};

// Class Tiger.TigerEmoteWheelWidget
// 0x0010 (FullSize[0x02B0] - InheritedSize[0x02A0])
class UTigerEmoteWheelWidget : public UTigerWheelWidget
{
public:
	class ATigerPlayer*                                Player;                                                    // 0x02A0(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTigerEmoteControllerComponent*              EmoteController;                                           // 0x02A8(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerEmoteWheelWidget");
		return ptr;
	}



	void PopulateLoadedEmotes(TArray<class UTexture2D*> InEmoteIcons);
};

// Class Tiger.TigerEmptyActorWithChild
// 0x0008 (FullSize[0x0230] - InheritedSize[0x0228])
class ATigerEmptyActorWithChild : public AActor
{
public:
	class UChildActorComponent*                        ChildActorComponent;                                       // 0x0228(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerEmptyActorWithChild");
		return ptr;
	}



};

// Class Tiger.TigerEngineSettings
// 0x0008 (FullSize[0x0040] - InheritedSize[0x0038])
class UTigerEngineSettings : public UDeveloperSettings
{
public:
	bool                                               bVerifyGc;                                                 // 0x0038(0x0001) (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bCreateGameInstanceGcCluster;                              // 0x0039(0x0001) (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_4WPQ[0x2];                                     // 0x003A(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              AcousticPortalAutoCloseDistance;                           // 0x003C(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerEngineSettings");
		return ptr;
	}



};

// Class Tiger.TigerEnragedEffectActor
// 0x0008 (FullSize[0x0230] - InheritedSize[0x0228])
class ATigerEnragedEffectActor : public AActor
{
public:
	bool                                               bIsActive;                                                 // 0x0228(0x0001) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               bHasDamageBuff;                                            // 0x0229(0x0001) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               bIsRegenerating;                                           // 0x022A(0x0001) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_E352[0x5];                                     // 0x022B(0x0005) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerEnragedEffectActor");
		return ptr;
	}



	void OnRegenStopped();
	void OnRegenStarted();
	void OnEnragedDeactivated();
	void OnEnragedActivated();
	void OnDamageBuffRemoved();
	void OnCharacterAction(Tiger_ETigerCharacterAction InAction);
	void Multicast_RegenStopped();
	void Multicast_RegenStarted();
	void Multicast_EnragedDeactivated();
	void Multicast_EnragedActivated();
	void Multicast_DamageBuffRemoved();
	class ATigerPlayer* GetPlayer();
};

// Class Tiger.TigerEnteringNewAreaPrompt
// 0x0020 (FullSize[0x02C8] - InheritedSize[0x02A8])
class UTigerEnteringNewAreaPrompt : public UTigerSimpleTextPrompt
{
public:
	struct FText                                       SubText;                                                   // 0x02A8(0x0018) (BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	class UTexture2D*                                  TextBackground;                                            // 0x02C0(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerEnteringNewAreaPrompt");
		return ptr;
	}



};

// Class Tiger.TigerEntityCheckpointActorSpawner
// 0x0008 (FullSize[0x0200] - InheritedSize[0x01F8])
class UTigerEntityCheckpointActorSpawner : public USceneComponent
{
public:
	class UClass*                                      ActorToSpawn;                                              // 0x01F8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerEntityCheckpointActorSpawner");
		return ptr;
	}



};

// Class Tiger.TigerNPCInstantSpawner
// 0x0000 (FullSize[0x0260] - InheritedSize[0x0260])
class ATigerNPCInstantSpawner : public ATigerNPCSpawningBase
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerNPCInstantSpawner");
		return ptr;
	}



	class ATigerBaseNPC* SpawnNpcAtLocation(const struct FVector& Location, class UTigerNPCAsset* NpcAssetToUse, const struct FRotator& Rotation, bool bIgnoreSpawnSetting);
};

// Class Tiger.TigerEntityLeaderSpawner
// 0x0000 (FullSize[0x0260] - InheritedSize[0x0260])
class ATigerEntityLeaderSpawner : public ATigerNPCInstantSpawner
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerEntityLeaderSpawner");
		return ptr;
	}



	class ATigerBaseNPC* SpawnEntityLeader();
};

// Class Tiger.TigerEntityCheckpointSupplyDropLocation
// 0x0008 (FullSize[0x0230] - InheritedSize[0x0228])
class ATigerEntityCheckpointSupplyDropLocation : public AActor
{
public:
	class USceneComponent*                             SupplyRoot;                                                // 0x0228(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerEntityCheckpointSupplyDropLocation");
		return ptr;
	}



};

// Class Tiger.TigerNPCPointSpawner
// 0x0028 (FullSize[0x0288] - InheritedSize[0x0260])
class ATigerNPCPointSpawner : public ATigerNPCSpawningBase
{
public:
	TArray<struct FTigerNPCSpawningPoint>              SpawningPoints;                                            // 0x0260(0x0010) (Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	int                                                MaxNPCsToSpawn;                                            // 0x0270(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                MinNPCsToSpawn;                                            // 0x0274(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                MaxNPCsToSpawnGroup;                                       // 0x0278(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                MinNPCsToSpawnGroup;                                       // 0x027C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_XVYX[0x8];                                     // 0x0280(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerNPCPointSpawner");
		return ptr;
	}



};

// Class Tiger.TigerEntityCheckpoint
// 0x0028 (FullSize[0x02B0] - InheritedSize[0x0288])
class ATigerEntityCheckpoint : public ATigerNPCPointSpawner
{
public:
	class ATigerBaseNPC*                               EntityLeader;                                              // 0x0288(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AActor*                                      SupplyDropLocation;                                        // 0x0290(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTigerSupplyDropConsumableAsset*             SupplyDropConsumable;                                      // 0x0298(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UClass*                                      SupplyDropComponent;                                       // 0x02A0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bIsAcknowledged;                                           // 0x02A8(0x0001) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_6TR9[0x7];                                     // 0x02A9(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerEntityCheckpoint");
		return ptr;
	}



	void OnRep_Acknowledged(bool bOldIsAcknowledged);
	void MatchStateChanged(Tiger_ETigerMatchState OldMatchState, Tiger_ETigerMatchState NewMatchState);
};

// Class Tiger.TigerEntityCombatComponent
// 0x0088 (FullSize[0x0138] - InheritedSize[0x00B0])
class UTigerEntityCombatComponent : public UActorComponent
{
public:
	float                                              TimeBeforeAttackingNewPlayer;                              // 0x00B0(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              ClosestAllowedDistanceToBeSprinting;                       // 0x00B4(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              SprintingCooldownDuration;                                 // 0x00B8(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              MaxLaserLength;                                            // 0x00BC(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              MaxAngleFromOriginalWeapon;                                // 0x00C0(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              LaserInterpolateSpeed;                                     // 0x00C4(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              LaserInterpolateRuberbandSpeedMultiplier;                  // 0x00C8(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FName                                       MaterialScaleName;                                         // 0x00CC(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FName                                       MaterialFadeLaserName;                                     // 0x00D4(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bHideLaserDuringReload;                                    // 0x00DC(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_2CM2[0x3];                                     // 0x00DD(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              NotInCombatFadedLaserLength;                               // 0x00E0(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              ReloadingFadedLaserLength;                                 // 0x00E4(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ATigerNPC*                                   NpcOwner;                                                  // 0x00E8(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_DQG3[0x10];                                    // 0x00F0(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UStaticMeshComponent*                        LaserPointer;                                              // 0x0100(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UParticleSystemComponent*                    LaserPointerOriginGlowParticleSystem;                      // 0x0108(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_J2U8[0x28];                                    // 0x0110(0x0028) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerEntityCombatComponent");
		return ptr;
	}



	void Multicast_EntityEvent(Tiger_ETigerEntityEvent InEntityEvent);
};

// Class Tiger.TigerEntityHelicopter
// 0x00B8 (FullSize[0x02E0] - InheritedSize[0x0228])
class ATigerEntityHelicopter : public AActor
{
public:
	class UAkAudioEvent*                               PreparingToFireSound;                                      // 0x0228(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAkAudioEvent*                               TargetEnteredSpotlightSound;                               // 0x0230(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAkAudioEvent*                               TargetLeftSpotlightSound;                                  // 0x0238(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UClass*                                      ProjectileClass;                                           // 0x0240(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UClass*                                      WeaponType;                                                // 0x0248(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTigerRangedWeapon*                          Weapon;                                                    // 0x0250(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UDataTable*                                  RangedWeaponsDatatable;                                    // 0x0258(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_D04P[0x8];                                     // 0x0260(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TWeakObjectPtr<class ATigerPlayer>                 TargetedPlayer;                                            // 0x0268(0x0008) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USceneComponent*                             LineOfSightStart;                                          // 0x0270(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_9QE4[0xC];                                     // 0x0278(0x000C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FVector_NetQuantize10                       SpotlightEndTarget;                                        // 0x0284(0x000C) (Net, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USceneComponent*                             SceneRoot;                                                 // 0x0290(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UChildActorComponent*                        HelicopterChildActor;                                      // 0x0298(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              SpotlightMovementSpeed;                                    // 0x02A0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_5CWS[0x14];                                    // 0x02A4(0x0014) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              TargetSpottedDelayBeforeFiring;                            // 0x02B8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_THUI[0x24];                                    // 0x02BC(0x0024) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerEntityHelicopter");
		return ptr;
	}



	void SetSpotlightForLos(class USceneComponent* SpotLightPosition);
	void Multicast_PlayAudio(class UAkAudioEvent* AudioEventToPlay);
	void Multicast_FireProjectile();
	void GetLookAtRotatorForSpotLight(const struct FVector& SpotLightPosition, float* OutDistance, struct FRotator* OutLookAtRotator);
};

// Class Tiger.TigerEntityJudgeHelicopter
// 0x0040 (FullSize[0x0320] - InheritedSize[0x02E0])
class ATigerEntityJudgeHelicopter : public ATigerEntityHelicopter
{
public:
	class ATigerJudge*                                 Judge;                                                     // 0x02E0(0x0008) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_MNK5[0x8];                                     // 0x02E8(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              DesiredForwardOffsetFromJudge;                             // 0x02F0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              DesiredHeight;                                             // 0x02F4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              MaxSpeed;                                                  // 0x02F8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              MaxTargetDistance2DFromJudge;                              // 0x02FC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              MinimumTargetHeight;                                       // 0x0300(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              MinimumHeightOverJudge;                                    // 0x0304(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              LoseTargetTime;                                            // 0x0308(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_NVAG[0x4];                                     // 0x030C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FTimerHandle                                KillSelfHandle;                                            // 0x0310(0x0008) (NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	Tiger_ETigerJudgeHelicopterSpotlightState          CurrentSpotlightState;                                     // 0x0318(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_YBAM[0x7];                                     // 0x0319(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerEntityJudgeHelicopter");
		return ptr;
	}



	bool ShouldFlyAway();
	void SelectNewTarget(TArray<class ATigerPlayer*> PossibleTargets);
	bool HasTarget();
};

// Class Tiger.TigerEntityPatrollingHelicopter
// 0x01B8 (FullSize[0x0498] - InheritedSize[0x02E0])
class ATigerEntityPatrollingHelicopter : public ATigerEntityHelicopter
{
public:
	struct FTigerAISplinePathData                      PathData;                                                  // 0x02E0(0x00A0) (Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	TArray<struct FVector>                             GeneratedCirclularPath;                                    // 0x0380(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TMap<Tiger_ETigerPatrollingHelicopterSpotlightState, struct FCoreUObject_FColor> SpotlightColours;                                          // 0x0390(0x0050) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FVector                                     CurrentTrackingFlightTarget;                               // 0x03E0(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_P1J2[0x18];                                    // 0x03EC(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                NumberOfPointsInCirclularPath;                             // 0x0404(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                CurrentSplineWaypointIndex;                                // 0x0408(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                CurrentTrackingIndex;                                      // 0x040C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_631Y[0x4];                                     // 0x0410(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              IdleRotationSpeed;                                         // 0x0414(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              HoverRotationSpeed;                                        // 0x0418(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              IdleFlightSpeed;                                           // 0x041C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              HoverFlightSpeed;                                          // 0x0420(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              LostPlayerStateNewSpotlightTargetRadius;                   // 0x0424(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              MaxTimeToSearchForLostPlayer;                              // 0x0428(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              CurrentTimeUntilReturnToPatrol;                            // 0x042C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              MasqueradePointGainFromSpotlightPerSecond;                 // 0x0430(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              SpaceBetweenMeshes;                                        // 0x0434(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              MovementDistanceThresholdSquared;                          // 0x0438(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              BelowRoofHeightCutOffTime;                                 // 0x043C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              TimeCurrentTargetWasBelowRoofHeight;                       // 0x0440(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              TargetedPlayerHoverCircleRadius;                           // 0x0444(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              LostPlayerHoverCircleRadius;                               // 0x0448(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_EIYZ[0x4];                                     // 0x044C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              CircleGrowthRate;                                          // 0x0450(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              MaxTimeToFindGunFireEventCulprit;                          // 0x0454(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_LOB0[0x14];                                    // 0x0458(0x0014) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              TimeToLoseInvisibleBloodhuntTarget;                        // 0x046C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              DelayUntilPlayTargetSpottingSounds;                        // 0x0470(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	Tiger_ETigerPatrollingHelicopterState              CurrentState;                                              // 0x0474(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	Tiger_ETigerPatrollingHelicopterSpotlightState     CurrentSpotlightState;                                     // 0x0475(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bHasReachedTarget;                                         // 0x0476(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bNeedToCalculateEntryVectorForTracking;                    // 0x0477(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bWasLastTargetedPlayerBloodHunted;                         // 0x0478(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bHasActiveTask;                                            // 0x0479(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bIsFiring;                                                 // 0x047A(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_Z1LP[0x5];                                     // 0x047B(0x0005) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UTigerAICoordinator*                         AICoordinator;                                             // 0x0480(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USplineComponent*                            Spline;                                                    // 0x0488(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_8OF0[0x8];                                     // 0x0490(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerEntityPatrollingHelicopter");
		return ptr;
	}



	void UpdateSpotlightPositionFromPatrollingLightSweep();
	void UpdateClientSpotlight();
	void OnStoppedShooting();
	void OnStartedShooting();
	void OnRep_IsFiring();
	float GetSpotlightRadius();
};

// Class Tiger.TigerEquipWheelWidget
// 0x0000 (FullSize[0x02A0] - InheritedSize[0x02A0])
class UTigerEquipWheelWidget : public UTigerWheelWidget
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerEquipWheelWidget");
		return ptr;
	}



	void Populate(TArray<class UTigerInventoryItemBase*> InItemArray, int InMaxItemCount);
};

// Class Tiger.TigerExperienceEvent
// 0x0028 (FullSize[0x0050] - InheritedSize[0x0028])
class UTigerExperienceEvent : public UObject
{
public:
	int                                                BaseExperienceGain[0x2];                                   // 0x0028(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTexture2D*                                  EventIcon;                                                 // 0x0030(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FText                                       Description;                                               // 0x0038(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerExperienceEvent");
		return ptr;
	}



	void GetExperienceAmount(class ATigerPlayer* Player, class ATigerCharacter* EventTiedCharacter, Tiger_EMatchBalanceMode BalanceMode, int* OutOwnPlayerExperienceGain, int* OutExperienceToAddToEveryGroupMemberIncludingSelf);
	int GetBalanceModeExperience(Tiger_EMatchBalanceMode InBalanceMode);
};

// Class Tiger.TigerCheatExperienceEvent
// 0x0000 (FullSize[0x0050] - InheritedSize[0x0050])
class UTigerCheatExperienceEvent : public UTigerExperienceEvent
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerCheatExperienceEvent");
		return ptr;
	}



};

// Class Tiger.TigerEyewearAnimInstance
// 0x0098 (FullSize[0x0450] - InheritedSize[0x03B8])
class UTigerEyewearAnimInstance : public UTigerAnimInstance
{
public:
	unsigned char                                      UnknownData_Q833[0x8];                                     // 0x03B8(0x0008) Fix Super Size
	struct FTransform                                  NoseTransform;                                             // 0x03C0(0x0030) (Edit, BlueprintVisible, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FTransform                                  EarRightTransform;                                         // 0x03F0(0x0030) (Edit, BlueprintVisible, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FTransform                                  EarLeftTransform;                                          // 0x0420(0x0030) (Edit, BlueprintVisible, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerEyewearAnimInstance");
		return ptr;
	}



};

// Class Tiger.TigerFamiliarScout
// 0x0078 (FullSize[0x02A0] - InheritedSize[0x0228])
class ATigerFamiliarScout : public AActor
{
public:
	unsigned char                                      UnknownData_ROR8[0x4];                                     // 0x0228(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              MoveSpeed;                                                 // 0x022C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              RecallMoveSpeed;                                           // 0x0230(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                                     TargetLocation;                                            // 0x0234(0x000C) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FTimerHandle                                ArrivalTimerHandle;                                        // 0x0240(0x0008) (NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bReturnToOwner;                                            // 0x0248(0x0001) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_TE53[0x3];                                     // 0x0249(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FVector                                     ManuallyScoutAtLocation;                                   // 0x024C(0x000C) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                rank;                                                      // 0x0258(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_LOJP[0x20];                                    // 0x025C(0x0020) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               bIsMoving;                                                 // 0x027C(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_DEUA[0x3];                                     // 0x027D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FVector                                     Velocity;                                                  // 0x0280(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              ScoutTimeToReachTarget;                                    // 0x028C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_WSDG[0x10];                                    // 0x0290(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerFamiliarScout");
		return ptr;
	}



	void OnTargetLocationChanged();
	void OnScoutStartedReturnToOwner();
	void OnRep_TargetLocation();
	void OnRep_ReturnToOwner();
	void OnRep_ManuallyScoutAtLocation();
	void OnArrivedAtOwner();
	void DeactivateScouting();
	void AttachToCharacter(class ATigerCharacter* Character);
	void ActivateScouting();
};

// Class Tiger.TigerFamiliarScoutPassive
// 0x0038 (FullSize[0x00E8] - InheritedSize[0x00B0])
class UTigerFamiliarScoutPassive : public UActorComponent
{
public:
	TArray<class ATigerCharacter*>                     OverlappingCharacters;                                     // 0x00B0(0x0010) (ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	class UParticleSystemComponent*                    OrbitingParticles;                                         // 0x00C0(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USphereComponent*                            ScanSphere;                                                // 0x00C8(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ATigerPlayer*                                Player;                                                    // 0x00D0(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UClass*                                      Config;                                                    // 0x00D8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bIsPassiveActivated;                                       // 0x00E0(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bPlayerIsVisible;                                          // 0x00E1(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_AKE3[0x6];                                     // 0x00E2(0x0006) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerFamiliarScoutPassive");
		return ptr;
	}



	void ScoutSpawned(class ATigerFamiliarScout* SpawnedScout);
	void OnComponentEndOverlapScanSphere(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex);
	void OnComponentBeginOverlapScanSphere(class UPrimitiveComponent* InOverlappedComponent, class AActor* InOtherActor, class UPrimitiveComponent* InOtherComp, int InOtherBodyIndex, bool bInFromSweep, const struct FHitResult& InSweepResult);
	void EvaluateVisibility();
	class UParticleSystemComponent* CreateOrbitingParticles();
};

// Class Tiger.TigerDistrictComponent
// 0x0068 (FullSize[0x0118] - InheritedSize[0x00B0])
class UTigerDistrictComponent : public UActorComponent
{
public:
	unsigned char                                      UnknownData_SWZO[0x10];                                    // 0x00B0(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               bIsInsideHolyIncense;                                      // 0x00C0(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bIsOutOfBounds;                                            // 0x00C1(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_K0I5[0x2];                                     // 0x00C2(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              DistanceToHolyIncense;                                     // 0x00C4(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector2D                                   ClosestGasLocation;                                        // 0x00C8(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector2D                                   ClosestGasNormal;                                          // 0x00D0(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              OutOfBoundsDamagePerTick;                                  // 0x00D8(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              OutOfBoundsDamageTickInterval;                             // 0x00DC(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_N56T[0x8];                                     // 0x00E0(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UCurveFloat*                                 EffectStrengthScaling;                                     // 0x00E8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bDebugEffectStrength;                                      // 0x00F0(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_TEFR[0x7];                                     // 0x00F1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class ATigerCharacter*                             TigerCharacter;                                            // 0x00F8(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class ATigerLevelScriptActor*                      TigerLevelScriptActor;                                     // 0x0100(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FTimerHandle                                DamageTimerHandle;                                         // 0x0108(0x0008) (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_J7BO[0x8];                                     // 0x0110(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerDistrictComponent");
		return ptr;
	}



	void TigerOnInsideHolyIncenseChanged__DelegateSignature(bool bIsInsideHolyIncense);
	bool ShouldTakeDamage();
	void OnWaveStopped();
	float GetEffectStrength();
};

// Class Tiger.TigerHeatmapCollector
// 0x0118 (FullSize[0x0140] - InheritedSize[0x0028])
class UTigerHeatmapCollector : public UObject
{
public:
	unsigned char                                      UnknownData_G95X[0xC0];                                    // 0x0028(0x00C0) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TMap<class ATigerCharacter*, struct FTigerCampingData> CampingData;                                               // 0x00E8(0x0050) (NativeAccessSpecifierPrivate)
	struct FTimerHandle                                CharacterMovementTimerHandle;                              // 0x0138(0x0008) (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerHeatmapCollector");
		return ptr;
	}



	void RecordCharacterMovement();
};

// Class Tiger.TigerHeightenedSensesActor
// 0x0008 (FullSize[0x0230] - InheritedSize[0x0228])
class ATigerHeightenedSensesActor : public AActor
{
public:
	unsigned char                                      UnknownData_644P[0x8];                                     // 0x0228(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerHeightenedSensesActor");
		return ptr;
	}



};

// Class Tiger.TigerHook
// 0x00C0 (FullSize[0x02E8] - InheritedSize[0x0228])
class ATigerHook : public AActor
{
public:
	class USphereComponent*                            HookTrigger;                                               // 0x0228(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                                     HookLocation;                                              // 0x0230(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                                     TargetLocation;                                            // 0x023C(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                                     StartLocation;                                             // 0x0248(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	Tiger_ETigerHookState                              HookState;                                                 // 0x0254(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_IAH6[0x3];                                     // 0x0255(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UTigerHookConfig*                            Config;                                                    // 0x0258(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              CurrentThrowTime;                                          // 0x0260(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int                                                HookingBuffID;                                             // 0x0264(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class ATigerCharacter*                             HitCharacter;                                              // 0x0268(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FVector                                     PullBackStartAtLocation;                                   // 0x0270(0x000C) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FVector                                     PullBackStopAtLocation;                                    // 0x027C(0x000C) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              TimeUntilPulledBack;                                       // 0x0288(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              CurrentTimeLeftUntilPulledBack;                            // 0x028C(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              HitCharacterCameraRotateCurrentTime;                       // 0x0290(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FRotator                                    HitCharacterCameraRotationStart;                           // 0x0294(0x000C) (ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPrivate)
	struct FRotator                                    HitCharacterRotationStart;                                 // 0x02A0(0x000C) (ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPrivate)
	struct FRotator                                    HitCharacterCameraRotationEnd;                             // 0x02AC(0x000C) (ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPrivate)
	struct FVector                                     OriginalVelocity;                                          // 0x02B8(0x000C) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              CharacterVelocityCutoffCurrentTime;                        // 0x02C4(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAnimMontage*                                ThrowMontage;                                              // 0x02C8(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAnimMontage*                                ReelMontage;                                               // 0x02D0(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FTimerHandle                                PreReelTimerHandle;                                        // 0x02D8(0x0008) (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_UPD8[0x8];                                     // 0x02E0(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerHook");
		return ptr;
	}



	void OnStartThrow();
	void OnOwnerMovementUpdated(float DeltaSeconds, const struct FVector& OldLocation, const struct FVector& OldVelocity);
	void OnNothingHit();
	void OnNonCharacterHit(class AActor* Actor);
	void OnCharacterHit(class ATigerCharacter* Character);
	void Multicast_StartThrow(const struct FVector& InStartLocation, const struct FVector& InTargetLocation);
	void Multicast_OnHookNothingHit();
	void Multicast_OnHookNonCharacterHit(class AActor* Actor);
	void Multicast_OnHookCharacterHit(const struct FVector& StopPullLocation, class ATigerCharacter* Character, float TimeUntilReturn, bool bCharacterAlive);
	void AuthHookBlockingHit(class UPrimitiveComponent* HitComp, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, const struct FHitResult& Hit);
	void AuthHookBeginOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
};

// Class Tiger.TigerHorizontalArchetypeSelectorUI
// 0x0008 (FullSize[0x0288] - InheritedSize[0x0280])
class UTigerHorizontalArchetypeSelectorUI : public UTigerWidget
{
public:
	class UTigerGameInstance*                          TigerGameInstance;                                         // 0x0280(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerHorizontalArchetypeSelectorUI");
		return ptr;
	}



	class UUserWidget* CreateWidgetForArchetype(Tiger_ETigerPowerKitType InArchetypeType);
	void CreateDivider();
	void CreateArchetypeWidgetsForClan(class UTigerPlayerClanData* InClanData);
};

// Class Tiger.TigerHSensesTargetComponent
// 0x0028 (FullSize[0x00D8] - InheritedSize[0x00B0])
class UTigerHSensesTargetComponent : public UActorComponent
{
public:
	float                                              HeartAnimTime;                                             // 0x00B0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              HeartRate;                                                 // 0x00B4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              HeartRateTarget;                                           // 0x00B8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              HeartRateNone;                                             // 0x00BC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              HeartRateSuspicious;                                       // 0x00C0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              HeartRateThreatened;                                       // 0x00C4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              HeartRateVariance;                                         // 0x00C8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              HeartRateChangeRate;                                       // 0x00CC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCurveFloat*                                 HeartAnimRateCurve;                                        // 0x00D0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerHSensesTargetComponent");
		return ptr;
	}



};

// Class Tiger.TigerInWorldIconController
// 0x0040 (FullSize[0x00F0] - InheritedSize[0x00B0])
class UTigerInWorldIconController : public UActorComponent
{
public:
	class UCanvasPanel*                                RootCanvas;                                                // 0x00B0(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UTigerInWorldWidget*>                 Widgets;                                                   // 0x00B8(0x0010) (ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	class UTigerInWorldWidget*                         ExplicitFocusWidget;                                       // 0x00C8(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_0QZ2[0x8];                                     // 0x00D0(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              MaxFocusDistanceFromCrosshair;                             // 0x00D8(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FBox2D                                      ScreenMargins;                                             // 0x00DC(0x0014) (Edit, ZeroConstructor, NoDestructor, Protected, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerInWorldIconController");
		return ptr;
	}



	void SetRootCanvas(class UCanvasPanel* InRootCanvas);
	void SetExplicitFocusWidget(class UTigerInWorldWidget* InWidget);
	void RemoveFromScreen(class UTigerInWorldWidget* InWidget);
	void OnInGameMenuToggled(bool bInIsOpen);
	class UTigerInWorldWidget* CreateInWorldWidget(class UClass* InOuterWidgetClass, class UClass* InInnerWidgetClass);
	void AddToScreen(class UTigerInWorldWidget* InWidget);
};

// Class Tiger.TigerCollectibleItemAsset
// 0x0008 (FullSize[0x0130] - InheritedSize[0x0128])
class UTigerCollectibleItemAsset : public UTigerItemAsset
{
public:
	class UTigerCollectibleData*                       Collectible;                                               // 0x0128(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerCollectibleItemAsset");
		return ptr;
	}



};

// Class Tiger.TigerAmmoAsset
// 0x0030 (FullSize[0x0158] - InheritedSize[0x0128])
class UTigerAmmoAsset : public UTigerItemAsset
{
public:
	Tiger_ETigerWeaponAmmoType                         AmmoType;                                                  // 0x0128(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_JQWM[0x7];                                     // 0x0129(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FSlateColor                                 AmmoColor;                                                 // 0x0130(0x0028) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerAmmoAsset");
		return ptr;
	}



};

// Class Tiger.TigerArtifactAsset
// 0x0008 (FullSize[0x0130] - InheritedSize[0x0128])
class UTigerArtifactAsset : public UTigerItemAsset
{
public:
	Tiger_ETigerArtifactAbility                        ArtifactAbility;                                           // 0x0128(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_RSRL[0x7];                                     // 0x0129(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerArtifactAsset");
		return ptr;
	}



};

// Class Tiger.TigerNPCSpawningSpline
// 0x00C0 (FullSize[0x0320] - InheritedSize[0x0260])
class ATigerNPCSpawningSpline : public ATigerNPCSpawningBase
{
public:
	class USplineComponent*                            Spline;                                                    // 0x0260(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTigerNPCAsset*                              NPCAsset;                                                  // 0x0268(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FTigerAISplinePathData                      PathData;                                                  // 0x0270(0x00A0) (Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_WGUK[0x10];                                    // 0x0310(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerNPCSpawningSpline");
		return ptr;
	}



};

// Class Tiger.TigerOneWayExpandableArea
// 0x0000 (FullSize[0x0338] - InheritedSize[0x0338])
class UTigerOneWayExpandableArea : public UExpandableArea
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerOneWayExpandableArea");
		return ptr;
	}



	void CloseArea();
};

// Class Tiger.TigerOnlineBlueprintLibrary
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class UTigerOnlineBlueprintLibrary : public UBlueprintFunctionLibrary
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerOnlineBlueprintLibrary");
		return ptr;
	}



	struct FString STATIC_PartyIdToUserString(const struct FTigerPartyId& InId);
	struct FString STATIC_InviteIdToUserString(const struct FTigerInviteId& InId);
	int STATIC_GetMinimumAccountCreationAge();
	struct FString STATIC_GetAccountRecoverUrl();
};

// Class Tiger.TigerOnlineError
// 0x0028 (FullSize[0x0050] - InheritedSize[0x0028])
class UTigerOnlineError : public UObject
{
public:
	struct FText                                       Message;                                                   // 0x0028(0x0018) (BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FString                                     ErrorCodeString;                                           // 0x0040(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerOnlineError");
		return ptr;
	}



};

// Class Tiger.TigerOnlineSettings
// 0x0138 (FullSize[0x0170] - InheritedSize[0x0038])
class UTigerOnlineSettings : public UDeveloperSettings
{
public:
	bool                                               bResetPlayerDataInEditor;                                  // 0x0038(0x0001) (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_1NGE[0x7];                                     // 0x0039(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FString                                     OnlineServicesBaseUrlDev;                                  // 0x0040(0x0010) (Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FString                                     OnlineServicesBaseUrlUat;                                  // 0x0050(0x0010) (Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FString                                     OnlineServicesBaseUrlProd;                                 // 0x0060(0x0010) (Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FString                                     OnlineServicesBaseUrlLocal;                                // 0x0070(0x0010) (Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FString                                     OnlineServicesPushBaseUrlDev;                              // 0x0080(0x0010) (Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FString                                     OnlineServicesPushBaseUrlUat;                              // 0x0090(0x0010) (Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FString                                     OnlineServicesPushBaseUrlProd;                             // 0x00A0(0x0010) (Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FString                                     OnlineServicesPushBaseUrlLocal;                            // 0x00B0(0x0010) (Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FString                                     CdnBaseUrlDev;                                             // 0x00C0(0x0010) (Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FString                                     CdnBaseUrlUat;                                             // 0x00D0(0x0010) (Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FString                                     CdnBaseUrlProd;                                            // 0x00E0(0x0010) (Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FString                                     PlayerDataServiceUri;                                      // 0x00F0(0x0010) (Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FString                                     SessionServiceUri;                                         // 0x0100(0x0010) (Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FString                                     PushServiceUri;                                            // 0x0110(0x0010) (Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FString                                     PartyServiceUri;                                           // 0x0120(0x0010) (Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FString                                     FriendServiceUri;                                          // 0x0130(0x0010) (Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FString                                     PresenceServiceUri;                                        // 0x0140(0x0010) (Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FString                                     LoginQueueServiceUri;                                      // 0x0150(0x0010) (Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FString                                     StoreServiceUri;                                           // 0x0160(0x0010) (Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerOnlineSettings");
		return ptr;
	}



};

// Class Tiger.TigerRoofSystemFreeTransformable
// 0x0020 (FullSize[0x0248] - InheritedSize[0x0228])
class ATigerRoofSystemFreeTransformable : public AActor
{
public:
	class USceneComponent*                             Root;                                                      // 0x0228(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USplineComponent*                            SplineComponent;                                           // 0x0230(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FTigerRoofSystemFreeTransformableCorner> Corners;                                                   // 0x0238(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, ContainsInstancedReference, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerRoofSystemFreeTransformable");
		return ptr;
	}



	void OnUpgrade(int InVersion);
};

// Class Tiger.TigerSafeHavenVolume
// 0x0008 (FullSize[0x0268] - InheritedSize[0x0260])
class ATigerSafeHavenVolume : public ATriggerVolume
{
public:
	class ATigerHaven*                                 AssignedHaven;                                             // 0x0260(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerSafeHavenVolume");
		return ptr;
	}



};

// Class Tiger.TigerSafeZoneSettings
// 0x0010 (FullSize[0x0048] - InheritedSize[0x0038])
class UTigerSafeZoneSettings : public UDeveloperSettings
{
public:
	struct FVector2D                                   SafeZoneRelativeScreenSpaceDimensions;                     // 0x0038(0x0008) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              UIZoneAspectRatio;                                         // 0x0040(0x0004) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_D4PB[0x4];                                     // 0x0044(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerSafeZoneSettings");
		return ptr;
	}



};

// Class Tiger.TigerSafeZoneWidget
// 0x0000 (FullSize[0x0138] - InheritedSize[0x0138])
class UTigerSafeZoneWidget : public USafeZone
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerSafeZoneWidget");
		return ptr;
	}



};

// Class Tiger.TigerSaveGame
// 0x0008 (FullSize[0x0030] - InheritedSize[0x0028])
class UTigerSaveGame : public USaveGame
{
public:
	struct FTigerPersistentCharacterID                 LastUsedCharacterId;                                       // 0x0028(0x0001) (BlueprintVisible, SaveGame, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_BK0U[0x7];                                     // 0x0029(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerSaveGame");
		return ptr;
	}



};

// Class Tiger.TigerThrallMissionMapMarkerData
// 0x0018 (FullSize[0x0048] - InheritedSize[0x0030])
class UTigerThrallMissionMapMarkerData : public UDataAsset
{
public:
	struct FTigerThrallMissionMapMarker                MissionMarker;                                             // 0x0030(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerThrallMissionMapMarkerData");
		return ptr;
	}



};

// Class Tiger.TigerDistrictData
// 0x0030 (FullSize[0x0060] - InheritedSize[0x0030])
class UTigerDistrictData : public UDataAsset
{
public:
	class UTexture2D*                                  MapTexture;                                                // 0x0030(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDistrictDataAnchor                         FirstAnchor;                                               // 0x0038(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FDistrictDataAnchor                         SecondAnchor;                                              // 0x0048(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	bool                                               bSpawnHighPotenceBlood;                                    // 0x0058(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bSpawnSuperHighPotenceBlood;                               // 0x0059(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_ZC8K[0x6];                                     // 0x005A(0x0006) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerDistrictData");
		return ptr;
	}



};

// Class Tiger.TigerDodgeBuff
// 0x0008 (FullSize[0x0278] - InheritedSize[0x0270])
class UTigerDodgeBuff : public UTigerBuff
{
public:
	class UCurveFloat*                                 MaxSpeedCurve;                                             // 0x0270(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerDodgeBuff");
		return ptr;
	}



};

// Class Tiger.TigerDodgeBuffInstance
// 0x0010 (FullSize[0x0098] - InheritedSize[0x0088])
class UTigerDodgeBuffInstance : public UTigerBuffInstance
{
public:
	class UTigerDodgeBuff*                             BuffClassDefaultObject;                                    // 0x0088(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_2H3J[0x8];                                     // 0x0090(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerDodgeBuffInstance");
		return ptr;
	}



};

// Class Tiger.TigerDoor
// 0x0010 (FullSize[0x0290] - InheritedSize[0x0280])
class ATigerDoor : public ATigerInteractiveObject
{
public:
	class UStaticMeshComponent*                        DoorMesh;                                                  // 0x0280(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ATigerPlayer*                                InteractingPlayer;                                         // 0x0288(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerDoor");
		return ptr;
	}



};

// Class Tiger.TigerDsBackendAgent
// 0x0028 (FullSize[0x0050] - InheritedSize[0x0028])
class UTigerDsBackendAgent : public UObject
{
public:
	struct FString                                     DsAgentType;                                               // 0x0028(0x0010) (ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              HeartbeatIntervalSeconds;                                  // 0x0038(0x0004) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_IRQ7[0x14];                                    // 0x003C(0x0014) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerDsBackendAgent");
		return ptr;
	}



};

// Class Tiger.TigerDsPresenceSubsystem
// 0x0008 (FullSize[0x0038] - InheritedSize[0x0030])
class UTigerDsPresenceSubsystem : public UGameInstanceSubsystem
{
public:
	class UTigerPresenceService*                       PresenceService;                                           // 0x0030(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerDsPresenceSubsystem");
		return ptr;
	}



};

// Class Tiger.TigerDsReliableTimeSubSystem
// 0x0020 (FullSize[0x0050] - InheritedSize[0x0030])
class UTigerDsReliableTimeSubSystem : public UGameInstanceSubsystem
{
public:
	unsigned char                                      UnknownData_ZBDY[0x20];                                    // 0x0030(0x0020) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerDsReliableTimeSubSystem");
		return ptr;
	}



	bool IsReliableDateTimeSet();
	struct FDateTime STATIC_GetCurrentDateTimeUtc(class UObject* InWorldContextObject);
};

// Class Tiger.TigerDynamicObject
// 0x0030 (FullSize[0x0258] - InheritedSize[0x0228])
class ATigerDynamicObject : public AActor
{
public:
	struct FComponentReference                         MeshComponentRef;                                          // 0x0228(0x0028) (Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	float                                              PlayerImpactMultiplier;                                    // 0x0250(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_80N4[0x4];                                     // 0x0254(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerDynamicObject");
		return ptr;
	}



};

// Class Tiger.TigerPassiveNightstalkerConfig
// 0x0038 (FullSize[0x0170] - InheritedSize[0x0138])
class UTigerPassiveNightstalkerConfig : public UTigerPassiveConfig
{
public:
	float                                              CrouchedTimeUntilUnseen;                                   // 0x0138(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              CrouchedTimePerAdditionalPowerLevel;                       // 0x013C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UClass*>                              InvisibilityBuff;                                          // 0x0140(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, NativeAccessSpecifierPublic)
	struct FTigerSightConfigProperties                 OverrideSightProperties;                                   // 0x0150(0x001C) (Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_5BLJ[0x4];                                     // 0x016C(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerPassiveNightstalkerConfig");
		return ptr;
	}



};

// Class Tiger.TigerPassiveArchetypeLogic
// 0x00B8 (FullSize[0x0178] - InheritedSize[0x00C0])
class UTigerPassiveArchetypeLogic : public UTigerPassiveComponent
{
public:
	struct FTigerCharacterStatModification             PowerLevelStatChanges;                                     // 0x00C0(0x00B4) (Edit, DisableEditOnInstance, NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_CQKR[0x4];                                     // 0x0174(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerPassiveArchetypeLogic");
		return ptr;
	}



	void OnPowerLevelIncreased();
	int GetPowerLevel();
};

// Class Tiger.TigerPassiveNightstalkerLogic
// 0x0018 (FullSize[0x0190] - InheritedSize[0x0178])
class UTigerPassiveNightstalkerLogic : public UTigerPassiveArchetypeLogic
{
public:
	class UTigerPassiveNightstalkerConfig*             Config;                                                    // 0x0178(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_Z0JF[0x10];                                    // 0x0180(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerPassiveNightstalkerLogic");
		return ptr;
	}



	void OnCharacterAction(Tiger_ETigerCharacterAction Action);
	void OnBuffRemoved(class UTigerBuff* BuffType, int ID, float Duration);
	void OnBuffAdded(class UTigerBuff* BuffType, int ID, float Duration);
};

// Class Tiger.TigerPassiveUnbridledRageConfig
// 0x0008 (FullSize[0x0140] - InheritedSize[0x0138])
class UTigerPassiveUnbridledRageConfig : public UTigerPassiveConfig
{
public:
	float                                              MinimumLoudnessMultiplier;                                 // 0x0138(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaximumLoudnessMultiplier;                                 // 0x013C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerPassiveUnbridledRageConfig");
		return ptr;
	}



};

// Class Tiger.TigerPassiveUnbridledRageLogic
// 0x00C8 (FullSize[0x0188] - InheritedSize[0x00C0])
class UTigerPassiveUnbridledRageLogic : public UTigerPassiveComponent
{
public:
	class UTigerPassiveUnbridledRageConfig*            Config;                                                    // 0x00C0(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class ATigerPlayer*                                Player;                                                    // 0x00C8(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_YU8A[0xB8];                                    // 0x00D0(0x00B8) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerPassiveUnbridledRageLogic");
		return ptr;
	}



};

// Class Tiger.TigerBuffUnseenPresenceInstance
// 0x0010 (FullSize[0x0098] - InheritedSize[0x0088])
class UTigerBuffUnseenPresenceInstance : public UTigerBuffInstance
{
public:
	unsigned char                                      UnknownData_7R9D[0x10];                                    // 0x0088(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerBuffUnseenPresenceInstance");
		return ptr;
	}



	void UpdateInvisibilityMaterial(float DeltaTime, class ATigerPlayer* Player, class UMaterialInstanceDynamic* MaterialInstance);
};

// Class Tiger.TigerBuffUnseenPresence
// 0x0018 (FullSize[0x0288] - InheritedSize[0x0270])
class UTigerBuffUnseenPresence : public UTigerBuff
{
public:
	class UClass*                                      BuffInstanceClass;                                         // 0x0270(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               NearbySound;                                               // 0x0278(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              NearbySoundPlayDistanceSquared;                            // 0x0280(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_9QFW[0x4];                                     // 0x0284(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerBuffUnseenPresence");
		return ptr;
	}



};

// Class Tiger.TigerPassiveVoiceOfInspirationConfig
// 0x0000 (FullSize[0x0138] - InheritedSize[0x0138])
class UTigerPassiveVoiceOfInspirationConfig : public UTigerPassiveConfig
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerPassiveVoiceOfInspirationConfig");
		return ptr;
	}



};

// Class Tiger.TigerPassiveVoiceOfInspirationLogic
// 0x0008 (FullSize[0x0180] - InheritedSize[0x0178])
class UTigerPassiveVoiceOfInspirationLogic : public UTigerPassiveArchetypeLogic
{
public:
	class UClass*                                      ActiveBuff;                                                // 0x0178(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerPassiveVoiceOfInspirationLogic");
		return ptr;
	}



};

// Class Tiger.TigerPathFollowingComponent
// 0x0000 (FullSize[0x0298] - InheritedSize[0x0298])
class UTigerPathFollowingComponent : public UCrowdFollowingComponent
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerPathFollowingComponent");
		return ptr;
	}



};

// Class Tiger.TigerCharacterSlotExpansion
// 0x0000 (FullSize[0x0110] - InheritedSize[0x0110])
class UTigerCharacterSlotExpansion : public UTigerInventoryItemBase
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerCharacterSlotExpansion");
		return ptr;
	}



};

// Class Tiger.TigerPremiumCurrencyPack
// 0x0000 (FullSize[0x0118] - InheritedSize[0x0118])
class UTigerPremiumCurrencyPack : public UTigerConsumableInventoryItemBase
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerPremiumCurrencyPack");
		return ptr;
	}



};

// Class Tiger.TigerSeasonExpPack
// 0x0000 (FullSize[0x0118] - InheritedSize[0x0118])
class UTigerSeasonExpPack : public UTigerConsumableInventoryItemBase
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerSeasonExpPack");
		return ptr;
	}



	int GetExpRewardAmount();
};

// Class Tiger.TigerSeasonPlacementExpBoostPercentage
// 0x0000 (FullSize[0x0118] - InheritedSize[0x0118])
class UTigerSeasonPlacementExpBoostPercentage : public UTigerConsumableInventoryItemBase
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerSeasonPlacementExpBoostPercentage");
		return ptr;
	}



};

// Class Tiger.TigerSeasonRankSkip
// 0x0000 (FullSize[0x0118] - InheritedSize[0x0118])
class UTigerSeasonRankSkip : public UTigerConsumableInventoryItemBase
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerSeasonRankSkip");
		return ptr;
	}



};

// Class Tiger.TigerBattlepassItem
// 0x0008 (FullSize[0x0118] - InheritedSize[0x0110])
class UTigerBattlepassItem : public UTigerInventoryItemBase
{
public:
	int                                                SeasonId;                                                  // 0x0110(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_1M6N[0x4];                                     // 0x0114(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerBattlepassItem");
		return ptr;
	}



};

// Class Tiger.TigerSoftCurrency
// 0x0000 (FullSize[0x0110] - InheritedSize[0x0110])
class UTigerSoftCurrency : public UTigerInventoryItemBase
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerSoftCurrency");
		return ptr;
	}



};

// Class Tiger.TigerThumbnailActor
// 0x0060 (FullSize[0x0288] - InheritedSize[0x0228])
class ATigerThumbnailActor : public AActor
{
public:
	class USceneComponent*                             Root;                                                      // 0x0228(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USceneComponent*                             ViewOrientation;                                           // 0x0230(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                IconWidth;                                                 // 0x0238(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                IconHeight;                                                // 0x023C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bIsRealtime;                                               // 0x0240(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_6W06[0x3];                                     // 0x0241(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              FOV;                                                       // 0x0244(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      Cubemap[0x28];                                             // 0x0248(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	float                                              CubemapIntensity;                                          // 0x0270(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bShouldGenerateImage;                                      // 0x0274(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_LB39[0x3];                                     // 0x0275(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FSoftClassPath>                      ItemPaths;                                                 // 0x0278(0x0010) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerThumbnailActor");
		return ptr;
	}



	void Generate(class UTigerInventoryItemBase* InItem);
};

// Class Tiger.TigerTitleErrorUI
// 0x0010 (FullSize[0x0290] - InheritedSize[0x0280])
class UTigerTitleErrorUI : public UTigerWidget
{
public:
	class UTigerOnlineError*                           OnlineError;                                               // 0x0280(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bIsOpen;                                                   // 0x0288(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_7Z0Y[0x7];                                     // 0x0289(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerTitleErrorUI");
		return ptr;
	}



	void Open();
	void OnOpen();
	void OnClose();
	void Close();
};

// Class Tiger.TigerTitleListAsset
// 0x0010 (FullSize[0x0040] - InheritedSize[0x0030])
class UTigerTitleListAsset : public UDataAsset
{
public:
	TArray<struct FText>                               TitlesByLevel;                                             // 0x0030(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerTitleListAsset");
		return ptr;
	}



	struct FText GetTitleFromPlayer(class ATigerPlayerState* Player);
};

// Class Tiger.TigerTooltipKeyPromptWidget
// 0x0060 (FullSize[0x02E0] - InheritedSize[0x0280])
class UTigerTooltipKeyPromptWidget : public UTigerWidget
{
public:
	struct FScriptMulticastDelegate                    OnPromptPressed;                                           // 0x0280(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnPromptHeld;                                              // 0x0290(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_G1EK[0x20];                                    // 0x02A0(0x0020) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               bHasHoldAction;                                            // 0x02C0(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_8CNT[0x1F];                                    // 0x02C1(0x001F) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerTooltipKeyPromptWidget");
		return ptr;
	}



	void SetPromptText(const struct FText& PromptText);
	void SetHoldProgress(float HoldProgress);
	void PromptPressed();
	void PromptHeld();
};

// Class Tiger.TigerTooltipUI
// 0x0000 (FullSize[0x0280] - InheritedSize[0x0280])
class UTigerTooltipUI : public UTigerWidget
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerTooltipUI");
		return ptr;
	}



	class UTigerTooltipKeyPromptWidget* AddKeyPrompt(const struct FText& PromptText, bool bHasHoldAction);
	void AddDropItemPrompt(class UTigerItemAsset* ItemToDrop);
};

// Class Tiger.TigerTransferFromMatchGameMode
// 0x0018 (FullSize[0x02E0] - InheritedSize[0x02C8])
class ATigerTransferFromMatchGameMode : public AGameModeBase
{
public:
	unsigned char                                      UnknownData_7K1T[0x18];                                    // 0x02C8(0x0018) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerTransferFromMatchGameMode");
		return ptr;
	}



	void HideMouseCursor();
};

// Class Tiger.TigerTransitionWidget
// 0x0038 (FullSize[0x0298] - InheritedSize[0x0260])
class UTigerTransitionWidget : public UUserWidget
{
public:
	float                                              AnimationDelay;                                            // 0x0260(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              AnimationSpeed;                                            // 0x0264(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnTransitionStarted;                                       // 0x0268(0x0010) (Edit, ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnTransitionFinished;                                      // 0x0278(0x0010) (Edit, ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	float                                              Progress;                                                  // 0x0288(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_DKXS[0x4];                                     // 0x028C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UMaterialInstanceDynamic*                    EffectMaterialInstance;                                    // 0x0290(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerTransitionWidget");
		return ptr;
	}



	void UpdateProgress(float InProgress);
	void SetEffectMaterialInstance(class UMaterialInstanceDynamic* InMaterialInstance);
	void SetAnimationSpeed(float InAnimationSpeed);
	void SetAnimationDelay(float InAnimationDelay);
	void RestartAnimation();
	void EnableRendering();
	void DisableRendering();
};

// Class Tiger.TigerTrap
// 0x00F8 (FullSize[0x0320] - InheritedSize[0x0228])
class ATigerTrap : public AActor
{
public:
	unsigned char                                      UnknownData_DRRE[0x8];                                     // 0x0228(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnTriggered;                                               // 0x0230(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class USceneComponent*                             Root;                                                      // 0x0240(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticMeshComponent*                        TrapMesh;                                                  // 0x0248(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBoxComponent*                               ShootingVolume;                                            // 0x0250(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USphereComponent*                            TriggerVolume;                                             // 0x0258(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USphereComponent*                            ExplosionVolume;                                           // 0x0260(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USphereComponent*                            GasVolume;                                                 // 0x0268(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UParticleSystemComponent*                    ArmedParticle;                                             // 0x0270(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UParticleSystemComponent*                    AreaParticle;                                              // 0x0278(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UParticleSystemComponent*                    ExplosionParticle;                                         // 0x0280(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UParticleSystemComponent*                    GasParticle;                                               // 0x0288(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UClass*                                      Config;                                                    // 0x0290(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTigerTrapsConfig*                           RawConfig;                                                 // 0x0298(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UClass*                                      GasBuff;                                                   // 0x02A0(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UDecalComponent*                             Decal;                                                     // 0x02A8(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FTigerPersistentPlayerID                    OwnerPersistentId;                                         // 0x02B0(0x0010) (Net, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_7GXS[0xC];                                     // 0x02C0(0x000C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                PowerLevel;                                                // 0x02CC(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bIsPlaced;                                                 // 0x02D0(0x0001) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bIsArmed;                                                  // 0x02D1(0x0001) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_4LEC[0x1];                                     // 0x02D2(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               bTriggered;                                                // 0x02D3(0x0001) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_AXP8[0x14];                                    // 0x02D4(0x0014) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FVector                                     ForwardDirection;                                          // 0x02E8(0x000C) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FVector                                     Velocity;                                                  // 0x02F4(0x000C) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_OS8Q[0x10];                                    // 0x0300(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UMaterialInstanceDynamic*                    TrapMaterialInstance;                                      // 0x0310(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_8USR[0x8];                                     // 0x0318(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerTrap");
		return ptr;
	}



	bool ShouldTrapSeeCharacterAsFriendly(class ATigerCharacter* InCharacter);
	bool ShouldPlayerSeeTrapAsFriendly(class ATigerPlayer* InPlayer);
	void OnTriggeredTrap();
	void OnPlacedTrap();
	void OnActivatedTrap();
	void Multicast_TriggerTrap();
	void Multicast_ActivateTrap();
	bool IsTriggered();
	bool IsPlaced();
	bool IsArmed();
	void EndOverlappedTrigger(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex);
	void EndOverlappedGas(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex);
	void BeginOverlappedTrigger(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void BeginOverlappedProjectile(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void BeginOverlappedGas(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
};

// Class Tiger.TigerTraversalBaseFiniteState
// 0x0018 (FullSize[0x0040] - InheritedSize[0x0028])
class UTigerTraversalBaseFiniteState : public UObject
{
public:
	class UTigerCharacterMovementComponent*            TigerCharacterMovementComponent;                           // 0x0028(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTigerTraversalStateConfigBase*              BaseConfig;                                                // 0x0030(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTigerTraversalFiniteStateMachine*           OwningStateMachine;                                        // 0x0038(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerTraversalBaseFiniteState");
		return ptr;
	}



};

// Class Tiger.TigerTraversalAirDashState
// 0x0010 (FullSize[0x0050] - InheritedSize[0x0040])
class UTigerTraversalAirDashState : public UTigerTraversalBaseFiniteState
{
public:
	unsigned char                                      UnknownData_J8KO[0x10];                                    // 0x0040(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerTraversalAirDashState");
		return ptr;
	}



};

// Class Tiger.TigerTraversalClimbState
// 0x00E8 (FullSize[0x0128] - InheritedSize[0x0040])
class UTigerTraversalClimbState : public UTigerTraversalBaseFiniteState
{
public:
	unsigned char                                      UnknownData_J6UP[0x8];                                     // 0x0040(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UTigerTraversalStateClimbingConfig*          ClimbingConfig;                                            // 0x0048(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_WXU2[0xD8];                                    // 0x0050(0x00D8) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerTraversalClimbState");
		return ptr;
	}



};

// Class Tiger.TigerTraversalCrouchState
// 0x0008 (FullSize[0x0048] - InheritedSize[0x0040])
class UTigerTraversalCrouchState : public UTigerTraversalBaseFiniteState
{
public:
	unsigned char                                      UnknownData_6EEO[0x8];                                     // 0x0040(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerTraversalCrouchState");
		return ptr;
	}



};

// Class Tiger.TigerTraversalDownedState
// 0x0000 (FullSize[0x0040] - InheritedSize[0x0040])
class UTigerTraversalDownedState : public UTigerTraversalBaseFiniteState
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerTraversalDownedState");
		return ptr;
	}



};

// Class Tiger.TigerTraversalFallState
// 0x0000 (FullSize[0x0040] - InheritedSize[0x0040])
class UTigerTraversalFallState : public UTigerTraversalBaseFiniteState
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerTraversalFallState");
		return ptr;
	}



};

// Class Tiger.TigerTraversalFiniteStateMachine
// 0x0120 (FullSize[0x01D0] - InheritedSize[0x00B0])
class UTigerTraversalFiniteStateMachine : public UActorComponent
{
public:
	unsigned char                                      UnknownData_K67F[0x8];                                     // 0x00B0(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UTigerCharacterMovementComponent*            TigerCharacterMovement;                                    // 0x00B8(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTigerTraversalBaseFiniteState*              ActiveState;                                               // 0x00C0(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTigerTraversalBaseFiniteState*              TraversalList[0xF];                                        // 0x00C8(0x0078) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UClass*                                      Configs[0xF];                                              // 0x0140(0x0078) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnTraversalStateChanged;                                   // 0x01B8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_MC0V[0x8];                                     // 0x01C8(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerTraversalFiniteStateMachine");
		return ptr;
	}



};

// Class Tiger.TigerTraversalForcedMoveState
// 0x0000 (FullSize[0x0040] - InheritedSize[0x0040])
class UTigerTraversalForcedMoveState : public UTigerTraversalBaseFiniteState
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerTraversalForcedMoveState");
		return ptr;
	}



};

// Class Tiger.TigerTraversalJumpState
// 0x0018 (FullSize[0x0058] - InheritedSize[0x0040])
class UTigerTraversalJumpState : public UTigerTraversalBaseFiniteState
{
public:
	class UTigerTraversalStateJumpConfig*              JumpConfig;                                                // 0x0040(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_KLC5[0x10];                                    // 0x0048(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerTraversalJumpState");
		return ptr;
	}



};

// Class Tiger.TigerTraversalLedgeGrabState
// 0x0038 (FullSize[0x0078] - InheritedSize[0x0040])
class UTigerTraversalLedgeGrabState : public UTigerTraversalBaseFiniteState
{
public:
	class UTigerTraversalStateLedgeGrabConfig*         LedgeGrabConfig;                                           // 0x0040(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_0GX7[0x30];                                    // 0x0048(0x0030) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerTraversalLedgeGrabState");
		return ptr;
	}



};

// Class Tiger.TigerTraversalLowVaultState
// 0x0020 (FullSize[0x0060] - InheritedSize[0x0040])
class UTigerTraversalLowVaultState : public UTigerTraversalBaseFiniteState
{
public:
	unsigned char                                      UnknownData_P4TX[0x8];                                     // 0x0040(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UAnimMontage*                                ActiveLowVaultMontage;                                     // 0x0048(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_JPEZ[0x10];                                    // 0x0050(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerTraversalLowVaultState");
		return ptr;
	}



};

// Class Tiger.TigerTraversalSlideJumpState
// 0x0010 (FullSize[0x0050] - InheritedSize[0x0040])
class UTigerTraversalSlideJumpState : public UTigerTraversalBaseFiniteState
{
public:
	unsigned char                                      UnknownData_XYYY[0x10];                                    // 0x0040(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerTraversalSlideJumpState");
		return ptr;
	}



};

// Class Tiger.TigerTraversalSlideState
// 0x0038 (FullSize[0x0078] - InheritedSize[0x0040])
class UTigerTraversalSlideState : public UTigerTraversalBaseFiniteState
{
public:
	unsigned char                                      UnknownData_K8F6[0x38];                                    // 0x0040(0x0038) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerTraversalSlideState");
		return ptr;
	}



};

// Class Tiger.TigerTraversalStateConfigBase
// 0x0028 (FullSize[0x0050] - InheritedSize[0x0028])
class UTigerTraversalStateConfigBase : public UObject
{
public:
	bool                                               bStateIsDisabled;                                          // 0x0028(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_32DN[0x7];                                     // 0x0029(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<Tiger_ETigerTraversalState>                 PossibleOutTransitions;                                    // 0x0030(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class UClass*                                      TraversalState;                                            // 0x0040(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              TimeOutSeconds;                                            // 0x0048(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	Tiger_ETigerTraversalState                         TimeOutInto;                                               // 0x004C(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bJumpCooldownAllowedToTick;                                // 0x004D(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bJumpDiminishingReturnsCountdownCanTick;                   // 0x004E(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_8ODU[0x1];                                     // 0x004F(0x0001) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerTraversalStateConfigBase");
		return ptr;
	}



};

// Class Tiger.TigerTraversaleStateForcedMoveConfig
// 0x0000 (FullSize[0x0050] - InheritedSize[0x0050])
class UTigerTraversaleStateForcedMoveConfig : public UTigerTraversalStateConfigBase
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerTraversaleStateForcedMoveConfig");
		return ptr;
	}



};

// Class Tiger.TigerTraversalStateClimbingConfig
// 0x0098 (FullSize[0x00E8] - InheritedSize[0x0050])
class UTigerTraversalStateClimbingConfig : public UTigerTraversalStateConfigBase
{
public:
	struct FName                                       CameraClimbingSocketName;                                  // 0x0050(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       ClimbingSpeedAnimationCurveName;                           // 0x0058(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       ClimbingBlendSpaceName;                                    // 0x0060(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       ClimbStartBlendSpaceName;                                  // 0x0068(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ClimbingCameraInterpSpeed;                                 // 0x0070(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ClimbingCameraInterpDelay;                                 // 0x0074(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ClimbableOffset;                                           // 0x0078(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ClimbableExtraSearchDepth;                                 // 0x007C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              StartingClimbDepth;                                        // 0x0080(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ClimbHorizontalAdjustmentSpeed;                            // 0x0084(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ClimbLowHorizontalAdjustmentSpeed;                         // 0x0088(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              IndoorClimbRadiusScale;                                    // 0x008C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              IndoorClimbVerticalOffset;                                 // 0x0090(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              IndoorClimbBackwardOffset;                                 // 0x0094(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              IndoorClimbIndoorUpsideDownDeadzoneHalfAngle;              // 0x0098(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              DistanceToCheckForClimbingOverhangs;                       // 0x009C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaximumOverhangAdjustmentLength;                           // 0x00A0(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ClimbingOverHangCheckSweepRadius;                          // 0x00A4(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MinimumOverHangLeadUpBufferPercentage;                     // 0x00A8(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ClimbingInputZCutOff;                                      // 0x00AC(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MinimumUpwardClimbAngle;                                   // 0x00B0(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaximumSidewaysClimbDeviation;                             // 0x00B4(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ClimbingOverHangZCutOff;                                   // 0x00B8(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              StartClimbInAirAllowedAngleDifference;                     // 0x00BC(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              StartClimbOnGroundAllowedAngleDifference;                  // 0x00C0(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              StartClimbInAirAllowedAngleDifferenceGamepad;              // 0x00C4(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              StartClimbOnGroundAllowedAngleDifferenceGamepad;           // 0x00C8(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ClimbCooldown;                                             // 0x00CC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              IndoorClimbingCooldown;                                    // 0x00D0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              VerticalClimbSpeed;                                        // 0x00D4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              HorizontalClimbSpeed;                                      // 0x00D8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaximumAllowedAngleDifferenceBetweenClimbTargets;          // 0x00DC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bShouldReadClimbSpeedFromAnimationCurve;                   // 0x00E0(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bResetIndoorClimbCooldownWhenOutside;                      // 0x00E1(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bResetIndoorClimbCooldownOnLanding;                        // 0x00E2(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bShouldAvoidOverhangsDuringClimb;                          // 0x00E3(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bOnlyStartClimbIfLookingAtWall;                            // 0x00E4(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bUseSocketForNonLinearCameraWhenClimbing;                  // 0x00E5(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bShouldInterpClimbingCamera;                               // 0x00E6(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_NCKM[0x1];                                     // 0x00E7(0x0001) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerTraversalStateClimbingConfig");
		return ptr;
	}



};

// Class Tiger.TigerTraversalStateJumpConfig
// 0x0028 (FullSize[0x0078] - InheritedSize[0x0050])
class UTigerTraversalStateJumpConfig : public UTigerTraversalStateConfigBase
{
public:
	int                                                MaxJumpIndexForDiminishingReturnsCurve;                    // 0x0050(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              TimeToReduceDiminishingReturnsCount;                       // 0x0054(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              JumpForgivenessDistance;                                   // 0x0058(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              InitialJumpZVelocity;                                      // 0x005C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              PostJumpClimbInteractionDelay;                             // 0x0060(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              JumpCoolDownTime;                                          // 0x0064(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bCancelJumpOnHeadImpact;                                   // 0x0068(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_GFC7[0x7];                                     // 0x0069(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UCurveFloat*                                 DiminishingReturnsCurve;                                   // 0x0070(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerTraversalStateJumpConfig");
		return ptr;
	}



};

// Class Tiger.TigerTraversalStateAirDashConfig
// 0x0018 (FullSize[0x0068] - InheritedSize[0x0050])
class UTigerTraversalStateAirDashConfig : public UTigerTraversalStateConfigBase
{
public:
	bool                                               bResetOnWallJump;                                          // 0x0050(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_CK8B[0x3];                                     // 0x0051(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              JumpVerticalVelocity;                                      // 0x0054(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              PostJumpClimbInteractionDelay;                             // 0x0058(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              JumpCoolDownTime;                                          // 0x005C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bPreventFallingSlide;                                      // 0x0060(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bResetAimGlideOnDoubleJump;                                // 0x0061(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_7TXP[0x6];                                     // 0x0062(0x0006) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerTraversalStateAirDashConfig");
		return ptr;
	}



};

// Class Tiger.TigerTraversalStateLedgeGrabConfig
// 0x0070 (FullSize[0x00C0] - InheritedSize[0x0050])
class UTigerTraversalStateLedgeGrabConfig : public UTigerTraversalStateConfigBase
{
public:
	struct FName                                       LedgeGrabAnimationName;                                    // 0x0050(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       FallbackLedgeGrabAnimationName;                            // 0x0058(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     LedgeGrabUpperBodyVolumeExtent;                            // 0x0060(0x000C) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     LedgeGrabClearanceCheckExtent;                             // 0x006C(0x000C) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     LedgeGrabUpperBodyVolumeCheckPosition;                     // 0x0078(0x000C) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              AnimationBlendoutStartDelay;                               // 0x0084(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              LedgeGrabAnimationTriggerMaxDistance;                      // 0x0088(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaximumLedgeWallHeight;                                    // 0x008C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaximumLedgeOverHangDepth;                                 // 0x0090(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              LedgeGrabUpperBodyVolumeForwardOffset;                     // 0x0094(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              LedgeGrabMaximumCameraAngleDifference;                     // 0x0098(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              LedgeGrabForwardSearchDepth;                               // 0x009C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              LedgeGrabPositionSweepRadius;                              // 0x00A0(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              LedgeGrabPositionHorizontalEdgeOffset;                     // 0x00A4(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              LedgeGrabPositionVerticalOffset;                           // 0x00A8(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              StartingRotationSpeedForBringingCharacterBackToCameraFacing; // 0x00AC(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              RotationSpeedGainPerSecond;                                // 0x00B0(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaxTimeToFixCharacterRotation;                             // 0x00B4(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bShouldAdjustLedgeGrabAnimationPlayRate;                   // 0x00B8(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bShouldUseExitLedgeGrabRotationInterpolation;              // 0x00B9(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_OZDL[0x6];                                     // 0x00BA(0x0006) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerTraversalStateLedgeGrabConfig");
		return ptr;
	}



};

// Class Tiger.TigerTraversalStateSlidingConfig
// 0x0080 (FullSize[0x00D0] - InheritedSize[0x0050])
class UTigerTraversalStateSlidingConfig : public UTigerTraversalStateConfigBase
{
public:
	float                                              SlideGravityMultiplier;                                    // 0x0050(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SlideTerminalSpeed;                                        // 0x0054(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              BrakingDecelerationSliding;                                // 0x0058(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              BrakingDecelerationSlidingStop;                            // 0x005C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              RequiredVelocityForSlideStart;                             // 0x0060(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              RequiredFallingVelocityForSlideStart;                      // 0x0064(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              HorizontalSpeedForFallingSlide;                            // 0x0068(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ThresholdVelocityForSlideStop;                             // 0x006C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SlideVelocityBoostMultiplier;                              // 0x0070(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SlideFallingHorizontalBoostMultiplier;                     // 0x0074(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SlideFallingVerticalBoostMultiplier;                       // 0x0078(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SlideAirGraceTime;                                         // 0x007C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SlideBoostDecayRecoverySpeed;                              // 0x0080(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SlideControllerRotationTime;                               // 0x0084(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SlidingWallCollisionCutOffHalfAngle;                       // 0x0088(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SlidingWallCollisionSweepRadius;                           // 0x008C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SlidingWallCollisionZecondaryCheckZOffset;                 // 0x0090(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SlideTimeBeforeJumpIsAllowed;                              // 0x0094(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              TimeOfForcedSliding;                                       // 0x0098(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_077I[0x4];                                     // 0x009C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UCurveFloat*                                 SlideBoostDecayCurve;                                      // 0x00A0(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                                 SlideGravityCurve;                                         // 0x00A8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                                 HorizontalSpeedForFallingSlideCurve;                       // 0x00B0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                                 DownwardsAngleDifferenceMultiplierCurve;                   // 0x00B8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                                 DecelerationCurve;                                         // 0x00C0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bUseSlideAlongSurfaceLogic;                                // 0x00C8(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bPrintVariablesOnFallSlide;                                // 0x00C9(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_UCXQ[0x6];                                     // 0x00CA(0x0006) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerTraversalStateSlidingConfig");
		return ptr;
	}



};

// Class Tiger.TigerTraversalStateSlideJumpConfig
// 0x0028 (FullSize[0x0078] - InheritedSize[0x0050])
class UTigerTraversalStateSlideJumpConfig : public UTigerTraversalStateConfigBase
{
public:
	float                                              JumpCoolDownTime;                                          // 0x0050(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              PostJumpClimbInteractionDelay;                             // 0x0054(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SlideHorizontalDirectionInfluenceThreshold;                // 0x0058(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SlideJumpDecayRecoverySpeed;                               // 0x005C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                                 JumpZVelocityOverSlideSpeed;                               // 0x0060(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                                 SlideJumpHorizontalMultiplierOverVelocity;                 // 0x0068(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                                 SlideJumpDecayCurve;                                       // 0x0070(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerTraversalStateSlideJumpConfig");
		return ptr;
	}



};

// Class Tiger.TigerTraversalStateWallJumpConfig
// 0x0090 (FullSize[0x00E0] - InheritedSize[0x0050])
class UTigerTraversalStateWallJumpConfig : public UTigerTraversalStateConfigBase
{
public:
	struct FTigerWallJumpBlendBundle                   DefaultWallJumpBlendBundle;                                // 0x0050(0x0010) (Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FTigerWallJumpBlendBundle                   WallJumpBlendBundleFromClimb;                              // 0x0060(0x0010) (Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FVector                                     WallJumpColliderOffset;                                    // 0x0070(0x000C) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              PostJumpClimbInteractionDelay;                             // 0x007C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              JumpCoolDownTime;                                          // 0x0080(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              WallJumpSphereColliderRadius;                              // 0x0084(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SecondaryWallSweepRadius;                                  // 0x0088(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaximumHorizontalJumpVelocity;                             // 0x008C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MinimumHorizontalJumpVelocity;                             // 0x0090(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              WallJumpZVelocity;                                         // 0x0094(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              WallJumpInputDirectionCutOffAngle;                         // 0x0098(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaxWallJumpStateDuration;                                  // 0x009C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              WallJumpRequiredHalfAngleFromWallWhenHoldingForward;       // 0x00A0(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              WallJumpDeadzoneHalfAngle;                                 // 0x00A4(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              WallJumpMaxAllowedHalfAngleBeforeClamping;                 // 0x00A8(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bShouldCapNumberOfWallJumpsFromSimilarWalls;               // 0x00AC(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_JH46[0x3];                                     // 0x00AD(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              ConsecutiveWallJumpNormalLikenessThreshold;                // 0x00B0(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              WallJumpDelayTime;                                         // 0x00B4(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              WallJumpDownwardSpeedGainInSeconds;                        // 0x00B8(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              WallJumpSlideSpeedScale;                                   // 0x00BC(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              WallJumpMinimumWallSlideSpeed;                             // 0x00C0(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              WallJumpMaximumWallSlideSpeed;                             // 0x00C4(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              WallJumpForwardHalfAngleAnimationCutOff;                   // 0x00C8(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	Tiger_ETigerWallJumpInputOption                    WallJumpInputOption;                                       // 0x00CC(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      MaximumNumberOfWallJumpsFromSimilarWall;                   // 0x00CD(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      NumberOfWallJumpsToRestoreOnDoubleJump;                    // 0x00CE(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bShouldApplyDownwardForceDuringWallJumpDelay;              // 0x00CF(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               AdjustWallJumpSlideSpeedOnInputAngle;                      // 0x00D0(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_AJUW[0x7];                                     // 0x00D1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UCurveFloat*                                 WallJumpDelaySpeedCurve;                                   // 0x00D8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerTraversalStateWallJumpConfig");
		return ptr;
	}



};

// Class Tiger.TigerTraversalStateWallGrindConfig
// 0x0060 (FullSize[0x00B0] - InheritedSize[0x0050])
class UTigerTraversalStateWallGrindConfig : public UTigerTraversalStateConfigBase
{
public:
	struct FVector                                     ColliderOffset;                                            // 0x0050(0x000C) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SphereColliderRadius;                                      // 0x005C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              WallGrindCancelInputHalfAngle;                             // 0x0060(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              WallGrindCancelInputDelayTime;                             // 0x0064(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              WallGrindVelocityRemapDeadZone;                            // 0x0068(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              WallGrindMaxHorizontalSpeed;                               // 0x006C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              WallGrindBufferDistance;                                   // 0x0070(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              WallGrindBufferAdjustmentSpeed;                            // 0x0074(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              RequiredSuccessfulSimulationTime;                          // 0x0078(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MinRequiredAngleBetweenStartingNormalAndPathDir;           // 0x007C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              WallGrindPossibleStartAngleThreshold;                      // 0x0080(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              WallGrindSimulationSharpAngleThreshold;                    // 0x0084(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int8_t                                             NumberofSimulationChecksPerSecond;                         // 0x0088(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_LNG3[0x7];                                     // 0x0089(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UCurveFloat*                                 WallGrindFallVelocitySpeedUp;                              // 0x0090(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                                 WallGrindFallVelocitySlowDown;                             // 0x0098(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                                 WallGrindStartingHorizontalSpeedMultipler;                 // 0x00A0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bOnlyAdjustFallSpeedWhenFallingTooFast;                    // 0x00A8(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bShouldBlockWallGrindingWhenHoldingCancelInput;            // 0x00A9(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bShouldClampHorizontalSpeed;                               // 0x00AA(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bWallGrindShouldBufferDistanceToWall;                      // 0x00AB(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bValidateWallgrindByCheckingPathAverageToWall;             // 0x00AC(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bDrawOutWallNormalsUsedInAWallGrind;                       // 0x00AD(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_10D9[0x2];                                     // 0x00AE(0x0002) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerTraversalStateWallGrindConfig");
		return ptr;
	}



};

// Class Tiger.TigerTraversalStateDownedConfig
// 0x0008 (FullSize[0x0058] - InheritedSize[0x0050])
class UTigerTraversalStateDownedConfig : public UTigerTraversalStateConfigBase
{
public:
	float                                              DownedMaxSpeed;                                            // 0x0050(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_I64P[0x4];                                     // 0x0054(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerTraversalStateDownedConfig");
		return ptr;
	}



};

// Class Tiger.TigerTraversalStateLowVaultConfig
// 0x0038 (FullSize[0x0088] - InheritedSize[0x0050])
class UTigerTraversalStateLowVaultConfig : public UTigerTraversalStateConfigBase
{
public:
	struct FName                                       LowVaultAnimationName;                                     // 0x0050(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     LowVaultLowerBodyVolumeExtent;                             // 0x0058(0x000C) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     LowVaultCheckOffset;                                       // 0x0064(0x000C) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              LowVaultMaximumCameraAngleDifference;                      // 0x0070(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              AnimationBlendoutStartDelay;                               // 0x0074(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              LowVaultPositionVerticalOffset;                            // 0x0078(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              HorizontalEndPositionOffset;                               // 0x007C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bShouldAdjustLowVaultAnimationPlayRate;                    // 0x0080(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_O4OS[0x7];                                     // 0x0081(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerTraversalStateLowVaultConfig");
		return ptr;
	}



};

// Class Tiger.TigerTraversalStateWallHangConfig
// 0x0018 (FullSize[0x0068] - InheritedSize[0x0050])
class UTigerTraversalStateWallHangConfig : public UTigerTraversalStateConfigBase
{
public:
	float                                              OffsetDistanceForFutureWallHangPosition;                   // 0x0050(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bShouldBlockWallHangIfLikelyToSlideOff;                    // 0x0054(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bShouldAllowPlayerToSlideoffHorizontallyDuringDeceleration; // 0x0055(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_MNB4[0x2];                                     // 0x0056(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UCurveFloat*                                 VerticalVelocitySlowDownRate;                              // 0x0058(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                                 HorizontalVelocitySlowDownRate;                            // 0x0060(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerTraversalStateWallHangConfig");
		return ptr;
	}



};

// Class Tiger.TigerTraversalWalkState
// 0x0008 (FullSize[0x0048] - InheritedSize[0x0040])
class UTigerTraversalWalkState : public UTigerTraversalBaseFiniteState
{
public:
	unsigned char                                      UnknownData_MGC3[0x8];                                     // 0x0040(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerTraversalWalkState");
		return ptr;
	}



};

// Class Tiger.TigerTraversalWallGrindState
// 0x0100 (FullSize[0x0140] - InheritedSize[0x0040])
class UTigerTraversalWallGrindState : public UTigerTraversalBaseFiniteState
{
public:
	unsigned char                                      UnknownData_3OGU[0xF8];                                    // 0x0040(0x00F8) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UTigerTraversalStateWallGrindConfig*         WallGrindConfig;                                           // 0x0138(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerTraversalWallGrindState");
		return ptr;
	}



	void UpdateEffect(const struct FName& InAssociatedBoneName, const struct FHitResult& InHitResult, class ATigerCharacter* InTigerCharacter);
	void StopEffect(const struct FName& InAssociatedBoneName, class ATigerCharacter* InTigerCharacter);
	void StartEffect(const struct FName& InAssociatedBoneName, const struct FHitResult& InHitResult, class ATigerCharacter* InTigerCharacter);
};

// Class Tiger.TigerTraversalWallHangState
// 0x0018 (FullSize[0x0058] - InheritedSize[0x0040])
class UTigerTraversalWallHangState : public UTigerTraversalBaseFiniteState
{
public:
	unsigned char                                      UnknownData_BMTC[0x18];                                    // 0x0040(0x0018) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerTraversalWallHangState");
		return ptr;
	}



};

// Class Tiger.TigerTraversalWallJumpState
// 0x00E8 (FullSize[0x0128] - InheritedSize[0x0040])
class UTigerTraversalWallJumpState : public UTigerTraversalBaseFiniteState
{
public:
	unsigned char                                      UnknownData_3VSJ[0xE8];                                    // 0x0040(0x00E8) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerTraversalWallJumpState");
		return ptr;
	}



};

// Class Tiger.TigerTutorialGameMode
// 0x0318 (FullSize[0x07D0] - InheritedSize[0x04B8])
class ATigerTutorialGameMode : public ATigerGameMode
{
public:
	struct FScriptMulticastDelegate                    OnTutorialStart;                                           // 0x04B8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnTutorialBeat01Complete;                                  // 0x04C8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnTutorialBeat02Complete;                                  // 0x04D8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnTutorialBeat03Complete;                                  // 0x04E8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	bool                                               bHasTutorialStarted;                                       // 0x04F8(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_745P[0x7];                                     // 0x04F9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FTigerPreviewerData                         PlayerAppearance;                                          // 0x0500(0x02B0) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	class UTigerPowerKit*                              TutorialPlayerArchetype;                                   // 0x07B0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTigerBloodTrackPreset*                      TutorialBloodTrackPreset;                                  // 0x07B8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAkAudioEvent*                               CurrentDialogueEvent;                                      // 0x07C0(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ATigerItemWorldRepresentation*               Beat03Consumable;                                          // 0x07C8(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerTutorialGameMode");
		return ptr;
	}



	void UnlockPlayer();
	void StartMatch();
	void ShowContextualHelp_BlueprintImplementation();
	void ShowContextualHelp();
	void SetTutorialHasStarted(bool bInTutorialHasStarted);
	void RemoveSubtitles(class UAkAudioEvent* InDialogueEvent);
	void RemovePing();
	class UAkAudioEvent* PlayVoiceOver_BlueprintImplementation(const struct FText& InSubtitles, const struct FScriptDelegate& InPostEventCallback);
	class UAkAudioEvent* PlayVoiceOver(const struct FText& InSubtitles, const struct FScriptDelegate& InPostEventCallback);
	void Ping_BlueprintImplementation(const struct FVector& InWorldLocation, class AActor* InContextualActor, const struct FVector& InLocalOffset);
	void Ping(const struct FVector& InWorldLocation, class AActor* InContextualActor, const struct FVector& InLocalOffset);
	void LockPlayer();
	void HideUI();
	void HideContextualHelp_BlueprintImplementation();
	void HideContextualHelp();
	class UAkAudioEvent* GetCurrentDialogueEvent();
	void CompleteObjective_BlueprintImplementation(const struct FName& InObjectiveIdentifier);
	void CompleteObjective(const struct FName& InObjectiveIdentifier);
	void AddNewObjective_BlueprintImplementation(const struct FName& InObjectiveIdentifier, const struct FText& InObjectiveText, const struct FName& InActionToEmbed, const struct FName& InGamepadOverrideActionToEmbed, bool InHasAdditionalKeyboardInput, const struct FKey& InAdditionalKeyboardInput, bool InHasAdditionalGamepadInput, const struct FKey& InAdditionalGamepadInput, bool InOverrideImage, const struct FName& InImageToOverride, bool InPersistantObjective, const struct FName& InGamepadImageToOverride);
	void AddNewObjective(const struct FName& InObjectiveIdentifier, const struct FText& InObjectiveText, const struct FName& InActionToEmbed, const struct FName& InGamepadOverrideActionToEmbed, bool InHasAdditionalKeyboardInput, const struct FKey& InAdditionalKeyboardInput, bool InHasAdditionalGamepadInput, const struct FKey& InAdditionalGamepadInput, bool InOverrideImage, const struct FName& InImageToOverride, bool InPersistantObjective, const struct FName& InGamepadImageToOverride);
};

// Class Tiger.TigerTutorialGameState
// 0x0000 (FullSize[0x0320] - InheritedSize[0x0320])
class ATigerTutorialGameState : public ATigerGameState
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerTutorialGameState");
		return ptr;
	}



};

// Class Tiger.TigerTutorialTrainerAsset
// 0x0030 (FullSize[0x0060] - InheritedSize[0x0030])
class UTigerTutorialTrainerAsset : public UDataAsset
{
public:
	class UClass*                                      Controller;                                                // 0x0030(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      NPC;                                                       // 0x0038(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FTigerPreviewerData>                 VisualData;                                                // 0x0040(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	class UClass*                                      WeaponClass;                                               // 0x0050(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bShouldBeFriendlyWithPlayer;                               // 0x0058(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bShouldReviveInsteadOfDiablerize;                          // 0x0059(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_0WZY[0x6];                                     // 0x005A(0x0006) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerTutorialTrainerAsset");
		return ptr;
	}



};

// Class Tiger.TigerTutorialNpcSpawner
// 0x0008 (FullSize[0x0230] - InheritedSize[0x0228])
class ATigerTutorialNpcSpawner : public AActor
{
public:
	class UTigerTutorialTrainerAsset*                  DataAsset;                                                 // 0x0228(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerTutorialNpcSpawner");
		return ptr;
	}



	class ATigerTutorialTrainer* SpawnNpc();
	TArray<class ATigerTutorialTrainer*> SpawnGroupOfNpcs(int NumberToSpawn);
};

// Class Tiger.TigerTutorialTrainer
// 0x0160 (FullSize[0x08E0] - InheritedSize[0x0780])
class ATigerTutorialTrainer : public ATigerCharacter
{
public:
	unsigned char                                      UnknownData_VTDY[0x28];                                    // 0x0780(0x0028) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnReviveEnded;                                             // 0x07A8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnTutorialTrainerDowned;                                   // 0x07B8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnTutorialTrainerDiablerized;                              // 0x07C8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FTutorialTrainerDiablerizeData              DiablerizeData;                                            // 0x07D8(0x0020) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FTutorialTrainerReviveData                  ReviveData;                                                // 0x07F8(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, Protected, NativeAccessSpecifierProtected)
	float                                              HealthOnEnteringDownedState;                               // 0x0810(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              DiablerizeOffsetDistance;                                  // 0x0814(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              MaxDownedTime;                                             // 0x0818(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              RemainingDownedTime;                                       // 0x081C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bShouldBeFriendlyWithPlayer;                               // 0x0820(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bCanBeDiablerized;                                         // 0x0821(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bWantsToShoot;                                             // 0x0822(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bIsDowned;                                                 // 0x0823(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bIsInvulnerableWhenDowned;                                 // 0x0824(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_YLKW[0x3];                                     // 0x0825(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class ATigerCharacter*                             CurrentlyAimedAtCharacter;                                 // 0x0828(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTigerNPCVisualAsset*                        VisualAsset;                                               // 0x0830(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UClass*                                      HeadMeshsPoseAssetsClass;                                  // 0x0838(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTigerPhysicalInteractionAnimationAsset*     DiablerizeAnimationSetAsset;                               // 0x0840(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              TimeInEnterState;                                          // 0x0848(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              TimeInDrainState;                                          // 0x084C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              TimeInLeaveState;                                          // 0x0850(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FName                                       DownedMontageNames[0x4];                                   // 0x0854(0x0020) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FName                                       StaticEntryToDownedMontageName;                            // 0x0874(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FName                                       InterruptSectionName;                                      // 0x087C(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FName                                       EndSectionName;                                            // 0x0884(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FName                                       DodgeOnGroundBlendSpaceName;                               // 0x088C(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FName                                       DodgeInAirBlendSpaceName;                                  // 0x0894(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FName                                       DiablerizeAnimationName;                                   // 0x089C(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FName                                       GetDiablerizedAnimationName;                               // 0x08A4(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FName                                       ExitDownedStateAnimationName;                              // 0x08AC(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_HRZ4[0xC];                                     // 0x08B4(0x000C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UAnimMontage*                                CurrentTrainerDiablerizeMontage;                           // 0x08C0(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAnimMontage*                                CurrentPlayerDiablerizeMontage;                            // 0x08C8(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_WXMR[0x10];                                    // 0x08D0(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerTutorialTrainer");
		return ptr;
	}



	void TutorialTrainerReviveFinished__DelegateSignature(bool bDidCompleteRevive, bool bWasInterruptedByPlayer);
	void TutorialTrainerDowned__DelegateSignature();
	void TutorialTrainerDiablerized__DelegateSignature();
	void StopShooting(bool bShouldStopAiming);
	void StopBlocking();
	void StopAiming();
	void StartShooting(class ATigerCharacter* ShootingTargetActor);
	void StartMeleeAttack();
	void StartHeavyMeleeAttack(float ChargeUpTime);
	void StartBlocking();
	void StartAimingAt(class ATigerCharacter* ShootingTargetActor);
	void ShootOnce(class ATigerCharacter* ShootingTargetActor);
	void ReloadWeapon();
	void OnExitDownedState();
	void OnDowned();
	void OnDiablerizeStopped();
	void OnDiablerizeStarted();
	void OnDiablerizedSuccessfullyFinished();
	bool IsAiming();
	float GetReviveOrDiablerizeProgress();
	float GetDiablerizeTimeInSeconds();
};

// Class Tiger.TigerTypeAndRarityData
// 0x0230 (FullSize[0x0260] - InheritedSize[0x0030])
class UTigerTypeAndRarityData : public UDataAsset
{
public:
	TMap<Tiger_ETigerInventoryItemType, struct FText>  ItemTypeNames;                                             // 0x0030(0x0050) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TMap<Tiger_ETigerInventoryItemType, struct FText>  ShortItemTypeNames;                                        // 0x0080(0x0050) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TMap<Tiger_ETigerWeaponAmmoType, struct FText>     AmmoTypeNames;                                             // 0x00D0(0x0050) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TMap<Tiger_ETigerWeaponType, struct FText>         ShortWeaponTypeNames;                                      // 0x0120(0x0050) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TMap<Tiger_ETigerLootCategory, struct FText>       LootCategoryNames;                                         // 0x0170(0x0050) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TMap<Tiger_ETigerItemRarity, struct FText>         ItemRarityNames;                                           // 0x01C0(0x0050) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TMap<Tiger_ETigerItemRarity, Tiger_ETigerUIColor>  ItemRarityColors;                                          // 0x0210(0x0050) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerTypeAndRarityData");
		return ptr;
	}



};

// Class Tiger.TigerUIBlueprintFunctionLibrary
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class UTigerUIBlueprintFunctionLibrary : public UBlueprintFunctionLibrary
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerUIBlueprintFunctionLibrary");
		return ptr;
	}



	void STATIC_Update3dWidgetTransform(class AActor* Character, class USceneComponent* Widget, const struct FVector& SocketLocation, const struct FVector& Offset);
	void STATIC_ShowGameModeNotification(class ATigerPlayerController* Player, const struct FText& Message);
	bool STATIC_ProjectWorldToScreenBidirectional(class APlayerController* InPlayerController, const struct FVector& InWorldLocation, struct FVector2D* OutScreenPosition);
	void STATIC_PlayOrReverseAnimation(class UUserWidget* Widget, class UWidgetAnimation* WidgetAnimation, TEnumAsByte<UMG_EUMGSequencePlayMode> PlayMode, float PlayBackSpeed);
	void STATIC_MapWorldLocationToUIRectangle(class ATigerPlayerController* InPlayerController, const struct FVector& InLocation, const struct FBox2D& InMargins, struct FVector2D* OutScreenPosition, float* OutRotationAngleDegrees, bool* bIsOnScreen);
	void STATIC_MapWorldLocationToUICircle(class ATigerPlayer* Player, const struct FVector& InLocation, float EdgePercent, float CircleRadius, struct FVector2D* OutScreenPosition, float* OutRotationAngleDegrees, bool* bIsOnScreen);
	bool STATIC_IsItemPartOfPlayerCard(const struct FTigerPersistentPlayerCardData& InCard);
	bool STATIC_IsItemPartOfAppearance(const struct FTigerCharacterAppearance& InAppearance);
	bool STATIC_IsDisciplineClanAbility(class ATigerPlayer* Player, Tiger_ETigerDisciplinesEnum Type);
	float STATIC_GetUIAngle(class ATigerPlayer* Player, const struct FVector& LocationToGetAngleFrom);
	TArray<struct FStatChangeDescription> STATIC_GetStatChanges(const struct FTigerCharacterStatModification& StatModification);
	struct FRotator STATIC_GetRelativeCameraDirectionToActorRotation(class AActor* Actor);
	void STATIC_GetLineLineIntersectionPoint(const struct FVector& LineAStart, const struct FVector& LineAEnd, const struct FVector& LineBStart, const struct FVector& LineBEnd, bool* bDoesIntersect, struct FVector* IntersectionPoint);
	TArray<struct FInputAxisKeyMapping> STATIC_GetKeysForAxis(class ATigerPlayerController* Controller, const struct FName& Axis);
	TArray<struct FInputActionKeyMapping> STATIC_GetKeysForAction(class ATigerPlayerController* Controller, const struct FName& Action);
	Tiger_ETigerInventoryItemType STATIC_GetInventoryItemTypeFromWeaponType(Tiger_ETigerEquippedWeaponType WeaponType);
	struct FName STATIC_GetFNameFromKey(const struct FKey& Key);
	float STATIC_GetExpandableAreaRolloutAnimationSeconds(class UExpandableArea* InExpandableArea);
	struct FText STATIC_GetDisplayTextFromKey(const struct FKey& Key);
	class UMediaSource* STATIC_GetDisciplinePreviewMediaSource(class UClass* InConfigsClass, Tiger_ETigerDisciplinesEnum InDisciplineType);
	class UTexture2D* STATIC_GetDisciplineIcon(class UClass* ConfigsClass, Tiger_ETigerDisciplinesEnum DisciplineType);
	class UTigerDisciplineConfigBase* STATIC_GetDisciplineConfigFromType(class ATigerPlayer* Player, Tiger_ETigerDisciplinesEnum Type);
	struct FVector2D STATIC_GetBorderLocationFromAngle(float Angle, float DistanceFromBorder);
	void STATIC_GetBorderLocationAndAngleFromWorld(class ATigerPlayerController* InPlayerController, const struct FVector& InWorldLocation, float InBorderDistance, struct FVector2D* OutScreenPosition, float* OutAngle);
	void STATIC_GamepadUpdateScrollbox(class ATigerPlayerController* InPlayerController, class UScrollBox* InScrollbox, float* ScrollTime, float InDeltaTime, float InMinScrollSpeed, float InMaxScrollSpeed, float InMaxScrollTime);
	void STATIC_GamepadMoveMouseToWidget(class ATigerPlayerController* InPlayerController, TArray<class UWidget*> InWidgetList, int InHoverIndex, int InDirection, class UScrollBox* InScrollbox, bool* OutMouseMoved);
	float STATIC_CalculateTopdownAngleBetweenPlayerAndTarget(class ATigerPlayer* InPlayer, const struct FVector& InLocationToGetAngleFrom);
};

// Class Tiger.TigerUIEnemyHealthBar
// 0x0000 (FullSize[0x0280] - InheritedSize[0x0280])
class UTigerUIEnemyHealthBar : public UTigerWidget
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerUIEnemyHealthBar");
		return ptr;
	}



	Tiger_ETigerDamageNumberAmount GetDamageNumberAmountSetting();
	void AddHealAmount(int InHealAmount);
};

// Class Tiger.TigerUiNewNotificationNode
// 0x0040 (FullSize[0x0068] - InheritedSize[0x0028])
class UTigerUiNewNotificationNode : public UObject
{
public:
	class UTigerUiNewNotificationNode*                 ParentNode;                                                // 0x0028(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UTigerUiNewNotificationNode*>         ChildNodes;                                                // 0x0030(0x0010) (ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	class UTigerUiNewNotificationHandler*              NewNotificationHandler;                                    // 0x0040(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bHasNewEntry;                                              // 0x0048(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bIsDirty;                                                  // 0x0049(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_IHRP[0x6];                                     // 0x004A(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<uint64_t>                                   NewIds;                                                    // 0x0050(0x0010) (ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	bool                                               bShouldPersistBetweenSessions;                             // 0x0060(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_U87F[0x7];                                     // 0x0061(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerUiNewNotificationNode");
		return ptr;
	}



};

// Class Tiger.TigerUiNewNotificationHandler
// 0x00A0 (FullSize[0x00D0] - InheritedSize[0x0030])
class UTigerUiNewNotificationHandler : public UGameInstanceSubsystem
{
public:
	struct FScriptMulticastDelegate                    OnNewItemStatus;                                           // 0x0030(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	TMap<Tiger_ETigerNewNotificationMenuOptions, class UTigerUiNewNotificationNode*> NodeMap;                                                   // 0x0040(0x0050) (NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_QO41[0x40];                                    // 0x0090(0x0040) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerUiNewNotificationHandler");
		return ptr;
	}



	void OnNewItemStatus__DelegateSignature();
	void OnGroupInvite(class UTigerPartyInvite* InInvite);
	void OnFriendInvite(class UTigerFriendInvite* InInvite);
	void MarkWeeklyChallengeAsViewed();
	void MarkItemAsViewed(const struct FTigerItemId& InTigerItemId);
	void MarkGrimoireEntryAsViewed(uint32_t InId);
	void MarkFriendInviteEntryViewed();
	void MarkDailyChallengeAsViewed();
	void MarkBattlepassAsViewed();
	void MarkArchetypeViewed();
	void MarkAllGroupInviteEntriesViewed();
	bool IsItemUnviewed(const struct FTigerItemId& InTigerItemId);
	bool CalculateNewNotificationActive(Tiger_ETigerNewNotificationMenuOptions InType);
	void AddNewWeeklyChallenges();
	void AddNewGroupInviteEntry();
	void AddNewGrimoireEntry(uint32_t InId);
	void AddNewFriendInviteEntry();
	void AddNewDailyChallenges();
	void AddNewBattlepassOrBattlepassLevel();
	void AddNewArchetype();
};

// Class Tiger.TigerUISettings
// 0x0038 (FullSize[0x0070] - InheritedSize[0x0038])
class UTigerUISettings : public USharkLocalDeveloperSettings
{
public:
	struct FDataTableRowHandle                         DefaultTextStyle;                                          // 0x0038(0x0010) (Edit, Config, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      DefaultTextStyleSet[0x28];                                 // 0x0048(0x0028) UNKNOWN PROPERTY: SoftObjectProperty


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerUISettings");
		return ptr;
	}



};

// Class Tiger.TigerUser
// 0x0020 (FullSize[0x0048] - InheritedSize[0x0028])
class UTigerUser : public UObject
{
public:
	struct FString                                     DISPLAYNAME;                                               // 0x0028(0x0010) (ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FTigerPersistentPlayerID                    ID;                                                        // 0x0038(0x0010) (NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerUser");
		return ptr;
	}



	class UTigerUser* STATIC_MakeUserFromLocalPlayer(class UObject* InWorldContextObject);
	struct FTigerPersistentPlayerID GetPersistentPlayerID();
	struct FString GetDisplayName();
};

// Class Tiger.TigerUserInputBinding
// 0x0228 (FullSize[0x0250] - InheritedSize[0x0028])
class UTigerUserInputBinding : public UObject
{
public:
	struct FScriptMulticastDelegate                    OnPresetChanged;                                           // 0x0028(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnSettingChangedFromPreset;                                // 0x0038(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnInputBindingChanged;                                     // 0x0048(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnAxisInputBindingChanged;                                 // 0x0058(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_GYGK[0x70];                                    // 0x0068(0x0070) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FTigerInputBindings                         UserInputs;                                                // 0x00D8(0x0040) (BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	struct FTigerInputBindings                         DefaultInputs;                                             // 0x0118(0x0040) (BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	TArray<struct FInputActionKeyMapping>              DebugMappings;                                             // 0x0158(0x0010) (BlueprintVisible, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<class UClass*>                              WeaponCycleStyles;                                         // 0x0168(0x0010) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	TArray<class UClass*>                              WeaponCycleStylesGamepad;                                  // 0x0178(0x0010) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	struct FString                                     BoundConsoleCommand;                                       // 0x0188(0x0010) (BlueprintVisible, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCurveFloat*                                 SensitivityCurve;                                          // 0x0198(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCurveFloat*                                 SensitivityCurveGamepad;                                   // 0x01A0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FTigerInputSettings                         InputSettings;                                             // 0x01A8(0x003C) (BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FTigerInputSettings                         DefaultInputSettings;                                      // 0x01E4(0x003C) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, Protected, NativeAccessSpecifierProtected)
	class UTigerCustomizableKeybindsDataAsset*         CustomizableKeybindsDataAsset;                             // 0x0220(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTigerInputPresetDataAsset*                  InputPresetData;                                           // 0x0228(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FName                                       UsedInputPreset;                                           // 0x0230(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FName                                       NameOfCustomPreset;                                        // 0x0238(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UClass*                                      DefaultWeaponCycleStyle;                                   // 0x0240(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bIsSwitchingPreset;                                        // 0x0248(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_SJ9I[0x7];                                     // 0x0249(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerUserInputBinding");
		return ptr;
	}



	void SwitchWeaponCycleStyle(const struct FText& InWeaponCycleStyle, bool bInForGamepad);
	void SwitchInputPreset(const struct FName& InInputPresetToUse);
	void ScopedSensitivityChanged(float InSensitivity, bool bInForGamepad);
	void ResetSettings();
	void ResetKeybinds();
	void RebindKey(int ActionMappingIndex, const struct FInputActionKeyMapping& NewBinding, bool bInSwapKeysOnConflict);
	void RebindAxisKey(int ActionMappingIndex, const struct FInputAxisKeyMapping& InNewBinding, bool bInSwapKeysOnConflict);
	void MasterSensitivityChanged(float InSensitivity, bool bInForGamepad);
	void LoadInputDefaults();
	void InvertYAxisChanged(bool bInInverted, bool bInForGamepad);
	void HoldForInventoryChanged(bool bInShouldHold);
	void HoldForHeightenedSensesChanged(bool bInShouldHold);
	class UClass* GetUsedWeaponCycleStyle(bool bInForGamepad);
	void DirectionalSensitivityChanged(float InHorizontalSensitivity, float InVerticalSensitivity, bool bInForGamepad);
	void AutoSprintChanged(bool bInAutoSprint);
	void AimingSensitivityChanged(float InSensitivity, bool bInForGamepad);
};

// Class Tiger.TigerFeedingComponent
// 0x0148 (FullSize[0x01F8] - InheritedSize[0x00B0])
class UTigerFeedingComponent : public UActorComponent
{
public:
	bool                                               bIsBloodDrained;                                           // 0x00B0(0x0001) (BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bIsBeingFedOn;                                             // 0x00B1(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bDidAttackEndFeed;                                         // 0x00B2(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_7HGV[0x5];                                     // 0x00B3(0x0005) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnStoppedFeeding;                                          // 0x00B8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnFeedingDoneEvent;                                        // 0x00C8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnStartedFeedingApproach;                                  // 0x00D8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnStartedFeeding;                                          // 0x00E8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnFeedingApproachDone;                                     // 0x00F8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	float                                              MaximumFeedingDistance;                                    // 0x0108(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                MaxFeedingTicks;                                           // 0x010C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              FeedTickTime;                                              // 0x0110(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              PartRequiredForBloodDrainedState;                          // 0x0114(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              FeedHealthAmount;                                          // 0x0118(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              TravelSpeed;                                               // 0x011C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                FeedingTicksLeft;                                          // 0x0120(0x0004) (Edit, BlueprintVisible, Net, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                CurrentFeedingTicksLeft;                                   // 0x0124(0x0004) (Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class ATigerNPC>                    DesiredFeedingTarget;                                      // 0x0128(0x0008) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class ATigerNPC>                    CurrentTarget;                                             // 0x0130(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UClass*                                      FeedingCameraShake;                                        // 0x0138(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTigerFeedingAnimationAsset*                 FeedingAnimationAsset;                                     // 0x0140(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              FeedingCameraDecoupleDelay;                                // 0x0148(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              ApproachUIProgress;                                        // 0x014C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              CapsuleDistanceCompensator;                                // 0x0150(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bFeedingDebug;                                             // 0x0154(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_9GBG[0x7B];                                    // 0x0155(0x007B) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UAnimMontage*                                FedOnApproachAnim;                                         // 0x01D0(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAnimMontage*                                FedOnFeedingAnim;                                          // 0x01D8(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAnimMontage*                                FedOnDecoupleAnim;                                         // 0x01E0(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FTimerHandle                                DecoupleTimerCamera;                                       // 0x01E8(0x0008) (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_KXVY[0x8];                                     // 0x01F0(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerFeedingComponent");
		return ptr;
	}



	void TigerStartedFeedingApproach__DelegateSignature(float TravelTime);
	void TigerFeedingMulticastDelegate__DelegateSignature();
	void TigerDelegateStoppedFeeding__DelegateSignature(bool bWasAttacked);
	void Server_StartFeeding(class ATigerNPC* InTarget, const struct FVector& InDesiredAttackerFeedingLocation);
	void RestoreFeedingTicks();
	void OnRep_DesiredFeedingTargetChanged();
	void OnFeedingDoneEvent__DelegateSignature(bool bTargetIsDrained, class ATigerCharacter* InTargetFedOn);
	void Multicast_AttackerAbortFeeding(bool bInWasAttacked);
	bool IsFeeding();
	bool IsFedOn();
	bool IsDecoupling();
	float GetNormalizedFeedingAmount();
	float GetFeedingProgress();
	void Client_AttackerAbortFeeding(bool bInWasAttacked);
};

// Class Tiger.TigerFetchPremiumCurrencyManager
// 0x0038 (FullSize[0x0060] - InheritedSize[0x0028])
class UTigerFetchPremiumCurrencyManager : public UObject
{
public:
	class UShMidasAdapter*                             MidasAdapter;                                              // 0x0028(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTigerStoreService*                          StoreService;                                              // 0x0030(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TWeakObjectPtr<class UTigerGameInstance>           GameInstance;                                              // 0x0038(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_F927[0x20];                                    // 0x0040(0x0020) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerFetchPremiumCurrencyManager");
		return ptr;
	}



};

// Class Tiger.TigerFindSessionAsync
// 0x00C0 (FullSize[0x00F0] - InheritedSize[0x0030])
class UTigerFindSessionAsync : public UBlueprintAsyncActionBase
{
public:
	struct FScriptMulticastDelegate                    OnSuccess;                                                 // 0x0030(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnFailed;                                                  // 0x0040(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_FIGP[0xA0];                                    // 0x0050(0x00A0) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerFindSessionAsync");
		return ptr;
	}



	struct FTigerBpFindSessionSelectedSession STATIC_SelectSession(const struct FTigerBpFindSessionResultList& FindSessionResult, int Index);
	void ReportMatchFoundSuccessfully(const struct FTigerBpFindSessionResultList& InResult);
	class UTigerFindSessionAsync* STATIC_FindSession(class UObject* WorldContextObject, class APlayerController* PlayerController, Tiger_ESessionType SESSIONTYPE);
};

// Class Tiger.TigerFirstTimeArchetypeSelectionUI
// 0x00C0 (FullSize[0x0470] - InheritedSize[0x03B0])
class UTigerFirstTimeArchetypeSelectionUI : public UTigerSceneBackgroundUI
{
public:
	struct FScriptMulticastDelegate                    OnPreloadingDone;                                          // 0x03B0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, BlueprintCallable, NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnSelectedArchetypeChanged;                                // 0x03C0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	struct FName                                       CameraSocketName;                                          // 0x03D0(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FName                                       AnimationSequenceName;                                     // 0x03D8(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAkAudioEvent*                               CharacterSelectedAudioEvent;                               // 0x03E0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAkAudioEvent*                               CharacterHoveredAudioEvent;                                // 0x03E8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAkAudioEvent*                               EnterElysiumAudioEvent;                                    // 0x03F0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	Tiger_ETigerPowerKitType                           DefaultSelectedArchetype;                                  // 0x03F8(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_N6SK[0x7];                                     // 0x03F9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	unsigned char                                      PaperDollClass[0x28];                                      // 0x03F9(0x0028) UNKNOWN PROPERTY: SoftClassProperty
	class UClass*                                      CachedPaperDollClass;                                      // 0x0428(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ATigerPaperDoll*                             PaperDoll;                                                 // 0x0430(0x0008) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                SelectedAppearanceIndex;                                   // 0x0438(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	Tiger_ETigerPowerKitType                           SelectedArchetypeType;                                     // 0x043C(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_6OSQ[0x3];                                     // 0x043D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UTigerPlayerClanData*                        CurrentClanData;                                           // 0x0440(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FTigerCharacterAppearance>           ArchetypeApperances;                                       // 0x0448(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_4ABK[0x18];                                    // 0x0458(0x0018) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerFirstTimeArchetypeSelectionUI");
		return ptr;
	}



	void PreviewArchetype(class UTigerPowerKit* InArchetypeData);
	void OnStartGameNative();
	void OnStartGame(const struct FTigerPersistentCharacterID& InSelectedCharacterId);
	void OnPreloadingDone__DelegateSignature();
	void ArchetypeSelectionDelegate__DelegateSignature(class UTigerPowerKit* InArchetypeData, const struct FTigerCharacterAppearance& InCharacterAppearance);
};

// Class Tiger.TigerFriend
// 0x0080 (FullSize[0x00A8] - InheritedSize[0x0028])
class UTigerFriend : public UObject
{
public:
	struct FScriptMulticastDelegate                    OnOnlineStatusChanged;                                     // 0x0028(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnLocationChanged;                                         // 0x0038(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FString                                     DISPLAYNAME;                                               // 0x0048(0x0010) (ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FTigerPersistentPlayerID                    PlayerId;                                                  // 0x0058(0x0010) (NativeAccessSpecifierPrivate)
	struct FSharkUserId                                SharkmobUserId;                                            // 0x0068(0x0010) (NativeAccessSpecifierPrivate)
	struct FString                                     PlatformUesrId;                                            // 0x0078(0x0010) (ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_5XS8[0x8];                                     // 0x0088(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FString                                     Location;                                                  // 0x0090(0x0010) (ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_I88W[0x8];                                     // 0x00A0(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerFriend");
		return ptr;
	}



	void OnOnlineStatusChanged__DelegateSignature(bool bInOnline);
	void OnLocationChanged__DelegateSignature(const struct FString& InLocation);
	struct FSharkUserId GetSharkmobUserId();
	struct FTigerPersistentPlayerID GetPlayerId();
	struct FString GetPlatformUserId();
	bool GetOnline();
	struct FString GetLocation();
	bool GetIsSharkmobFriend();
	struct FString GetDisplayName();
	bool CouldRemove();
	bool CouldInviteToParty();
};

// Class Tiger.TigerFriendInvite
// 0x0040 (FullSize[0x0068] - InheritedSize[0x0028])
class UTigerFriendInvite : public UObject
{
public:
	struct FString                                     DISPLAYNAME;                                               // 0x0028(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FTigerPersistentPlayerID                    PlayerId;                                                  // 0x0038(0x0010) (BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	struct FSharkUserId                                SharkmobUserId;                                            // 0x0048(0x0010) (BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	struct FString                                     PlatformUserId;                                            // 0x0058(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerFriendInvite");
		return ptr;
	}



	struct FString GetDisplayName();
};

// Class Tiger.TigerFriendService
// 0x0158 (FullSize[0x0180] - InheritedSize[0x0028])
class UTigerFriendService : public UObject
{
public:
	unsigned char                                      UnknownData_A2UO[0x158];                                   // 0x0028(0x0158) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerFriendService");
		return ptr;
	}



};

// Class Tiger.TigerFriendSubsystem
// 0x0130 (FullSize[0x0160] - InheritedSize[0x0030])
class UTigerFriendSubsystem : public UGameInstanceSubsystem
{
public:
	TArray<class UTigerFriend*>                        Friends;                                                   // 0x0030(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	TArray<class UTigerFriendInvite*>                  Invites;                                                   // 0x0040(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	Tiger_ETigerOnlineServiceStatus                    ServiceStatus;                                             // 0x0050(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_0234[0xDF];                                    // 0x0051(0x00DF) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UTigerPresenceSubsystem*                     PresenceSubsystem;                                         // 0x0130(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_E5P0[0x10];                                    // 0x0138(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FString                                     FriendSubsystemType;                                       // 0x0148(0x0010) (ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTigerFriendSubsystemImpl*                   Impl;                                                      // 0x0158(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerFriendSubsystem");
		return ptr;
	}



	void TigerFriendSetServiceStatus(Tiger_ETigerOnlineServiceStatus InServiceStatus);
	void SortFriends();
	void SendInvite(const struct FSharkUserId& InInviteeSharkmobUserId, const struct FTigerPersistentPlayerID& InInviteePlayerId);
	void RemoveFriend(const struct FSharkUserId& InFriendSharkmobUserId);
	void RejectInvite(const struct FSharkUserId& InFromSharkmobUserId);
	void OnPlayersPresenceChange(TArray<struct FTigerPlayerPresenceInfo> InPlayersPresenceInfo);
	void OnPlayerPresenceChange(const struct FTigerPlayerPresenceInfo& InPlayerPresenceInfo);
	void LoadInvites();
	void LoadFriends();
	bool IsFriend(const struct FTigerPersistentPlayerID& InPlayerId);
	int GetNumFriendsOnline();
	bool GetIsEnabled();
	struct FText GetInvitesUnsupportedReason();
	Tiger_ETigerFriendLoadStatus GetInvitesLoadStatus();
	Tiger_ETigerFriendLoadStatus GetFriendsLoadStatus();
	struct FText GetDisabledReason();
	bool GetAreInvitesSupported();
	void AcceptInvite(class UTigerFriendInvite* InInvite);
};

// Class Tiger.TigerFriendSubsystemImpl
// 0x0008 (FullSize[0x0030] - InheritedSize[0x0028])
class UTigerFriendSubsystemImpl : public UObject
{
public:
	unsigned char                                      UnknownData_8OTJ[0x8];                                     // 0x0028(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerFriendSubsystemImpl");
		return ptr;
	}



};

// Class Tiger.TigerFriendSubsystemMockImpl
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UTigerFriendSubsystemMockImpl : public UTigerFriendSubsystemImpl
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerFriendSubsystemMockImpl");
		return ptr;
	}



};

// Class Tiger.TigerFriendSubsystemSharknetImpl
// 0x0058 (FullSize[0x0088] - InheritedSize[0x0030])
class UTigerFriendSubsystemSharknetImpl : public UTigerFriendSubsystemImpl
{
public:
	unsigned char                                      UnknownData_05TN[0x8];                                     // 0x0030(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UTigerFriendService*                         FriendService;                                             // 0x0038(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_7GNI[0x48];                                    // 0x0040(0x0048) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerFriendSubsystemSharknetImpl");
		return ptr;
	}



};

// Class Tiger.TigerFullscreenFXManager
// 0x0040 (FullSize[0x00F0] - InheritedSize[0x00B0])
class UTigerFullscreenFXManager : public UActorComponent
{
public:
	class ATigerPlayerController*                      Controller;                                                // 0x00B0(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_AOHX[0x8];                                     // 0x00B8(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UMaterial*                                   TimedPostFXMaterial;                                       // 0x00C0(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UMaterialParameterCollection*                TimedPostFXCollection;                                     // 0x00C8(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FName                                       TimedPostFXCollectionName;                                 // 0x00D0(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_QPNU[0x18];                                    // 0x00D8(0x0018) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerFullscreenFXManager");
		return ptr;
	}



};

// Class Tiger.TigerGameFlowState
// 0x0010 (FullSize[0x0040] - InheritedSize[0x0030])
class UTigerGameFlowState : public UBlueprintAsyncActionBase
{
public:
	unsigned char                                      UnknownData_LDUD[0x10];                                    // 0x0030(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerGameFlowState");
		return ptr;
	}



	void OnEnter();
	class ATigerPlayerController* GetPlayerController();
};

// Class Tiger.TigerGameFlowStateMap
// 0x0050 (FullSize[0x0080] - InheritedSize[0x0030])
class UTigerGameFlowStateMap : public UDataAsset
{
public:
	TMap<class UClass*, class UClass*>                 FlowStateMap;                                              // 0x0030(0x0050) (Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerGameFlowStateMap");
		return ptr;
	}



};

// Class Tiger.TigerGameFlowStateBoot
// 0x0040 (FullSize[0x0080] - InheritedSize[0x0040])
class UTigerGameFlowStateBoot : public UTigerGameFlowState
{
public:
	struct FScriptMulticastDelegate                    OnLaunchTutorial;                                          // 0x0040(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnEnterElysiumFirstTime;                                   // 0x0050(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnEnterElysium;                                            // 0x0060(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnPreloadingDone;                                          // 0x0070(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerGameFlowStateBoot");
		return ptr;
	}



	bool IsLandingPageEnabled();
	bool IsIntroEnabled();
	class UTigerGameFlowStateBoot* STATIC_EnterBoot(class UObject* InWorldContextObject);
	bool CommandlineSkipTutorial();
	bool CommandlineForceTutorial();
};

// Class Tiger.TigerGameGCClusterSubSystem
// 0x0020 (FullSize[0x0050] - InheritedSize[0x0030])
class UTigerGameGCClusterSubSystem : public UGameInstanceSubsystem
{
public:
	unsigned char                                      UnknownData_UKMQ[0x8];                                     // 0x0030(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class AActor*>                              CurrentActorsToProcess;                                    // 0x0038(0x0010) (ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_DIIM[0x8];                                     // 0x0048(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerGameGCClusterSubSystem");
		return ptr;
	}



	void FillClusterFromLevels();
};

// Class Tiger.TigerExpRequirements
// 0x0018 (FullSize[0x0040] - InheritedSize[0x0028])
class UTigerExpRequirements : public UObject
{
public:
	struct FTigerExpLevelRequirements                  ExpLevelRequirements;                                      // 0x0028(0x0018) (Edit, Transient, EditConst, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerExpRequirements");
		return ptr;
	}



	int GetSeasonLevelCount();
	int GetLevelFromExp(int Exp);
	int GetExpFromLevel(int Level);
	bool ClampAtMaxLevel();
};

// Class Tiger.TigerPreloadedNiagaraSystems
// 0x0038 (FullSize[0x0068] - InheritedSize[0x0030])
class UTigerPreloadedNiagaraSystems : public UDataAsset
{
public:
	struct FScriptMulticastDelegate                    OnLoadedAllAssetsEvent;                                    // 0x0030(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      Systems[0x10];                                             // 0x0040(0x0010) UNKNOWN PROPERTY: ArrayProperty
	unsigned char                                      UnknownData_X2JS[0x18];                                    // 0x0050(0x0018) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerPreloadedNiagaraSystems");
		return ptr;
	}



};

// Class Tiger.TigerPreloadedClasses
// 0x0010 (FullSize[0x0038] - InheritedSize[0x0028])
class UTigerPreloadedClasses : public UObject
{
public:
	unsigned char                                      UnknownData_A88W[0x10];                                    // 0x0028(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerPreloadedClasses");
		return ptr;
	}



};

// Class Tiger.TigerGameModeLoadingScreens
// 0x0050 (FullSize[0x0080] - InheritedSize[0x0030])
class UTigerGameModeLoadingScreens : public UDataAsset
{
public:
	unsigned char                                      LoadingScreenAssets[0x50];                                 // 0x0030(0x0050) UNKNOWN PROPERTY: MapProperty


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerGameModeLoadingScreens");
		return ptr;
	}



};

// Class Tiger.TigerGCClusterObject
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class UTigerGCClusterObject : public UObject
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerGCClusterObject");
		return ptr;
	}



};

// Class Tiger.TigerGameInstance
// 0x05B8 (FullSize[0x0760] - InheritedSize[0x01A8])
class UTigerGameInstance : public UGameInstance
{
public:
	struct FScriptMulticastDelegate                    OnTitleScreenClosed;                                       // 0x01A8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      DisciplineConfigsClassPtr[0x28];                           // 0x01B8(0x0028) UNKNOWN PROPERTY: SoftClassProperty
	class UClass*                                      DisciplineConfigsClass;                                    // 0x01E0(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UTigerPlayerClanData*>                AvailablePlayerClans;                                      // 0x01E8(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	class UTigerExpRequirements*                       SeasonExpRequirements;                                     // 0x01F8(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTigerExpRequirements*                       ArchetypeExpRequirements;                                  // 0x0200(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTigerTitleListAsset*                        TitleList;                                                 // 0x0208(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UClass*                                      OnlineStatusMessagesClass;                                 // 0x0210(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTigerSaveGame*                              CurrentSaveGame;                                           // 0x0218(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTigerPreloadedNiagaraSystems*               PreloadedNiagaraSystems;                                   // 0x0220(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTigerLoadingScreenUI*                       LoadingScreen;                                             // 0x0228(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, Transient, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_LT9Z[0x50];                                    // 0x0230(0x0050) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class UTigerCharacterPreset*>               BotCharacterPresets;                                       // 0x0280(0x0010) (ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	bool                                               bBotsIgnorePlayer;                                         // 0x0290(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bEnableBotsAsClients;                                      // 0x0291(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bOnlyBotsAliveEndsMatch;                                   // 0x0292(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bIsJoiningMatch;                                           // 0x0293(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bHasShownTitleScreen;                                      // 0x0294(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_0A1Q[0x3];                                     // 0x0295(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FString                                     BotAutoJoinServer;                                         // 0x0298(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                LoadingScreenZValue;                                       // 0x02A8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_KVGR[0x4];                                     // 0x02AC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UTigerGameModeLoadingScreens*                GameModeLoadingScreens;                                    // 0x02B0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UDataTable*                                  SoftCurrencies;                                            // 0x02B8(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnFindMatchFailed;                                         // 0x02C0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, BlueprintCallable, NativeAccessSpecifierProtected)
	class UClass*                                      GeneralUserSettingsClass;                                  // 0x02D0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTigerGeneralUserSettings*                   GeneralUserSettings;                                       // 0x02D8(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTigerQuestCollection*                       QuestCollection;                                           // 0x02E0(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTigerPartyService*                          PartyService;                                              // 0x02E8(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTigerPlayerDataService*                     PlayerDataService;                                         // 0x02F0(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTigerStoreService*                          StoreService;                                              // 0x02F8(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UShMidasAdapter*                             MidasAdapter;                                              // 0x0300(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTigerFetchPremiumCurrencyManager*           FetchPremiumCurrencyManager;                               // 0x0308(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class UTigerWidget>                 SoftwareCursor;                                            // 0x0310(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTigerPartyManager*                          PartyManager;                                              // 0x0318(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTigerAuthenticationManager*                 AuthenticationManager;                                     // 0x0320(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTigerTelemetryEventHandler*                 TelemetryEventHandler;                                     // 0x0328(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ATigerStatisticsGatherer*                    StatisticsGatherer;                                        // 0x0330(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTigerPushConnectionManager*                 PushConnectionManager;                                     // 0x0338(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_OGEK[0xD8];                                    // 0x0340(0x00D8) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UTigerPreloadedClasses*                      PreloadedClasses;                                          // 0x0418(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TMap<class UTigerBloodTrackPassiveConfig*, struct FString> BloodTrackPassiveToEncodedId;                              // 0x0420(0x0050) (Transient, Protected, NativeAccessSpecifierProtected)
	TMap<struct FString, class UTigerBloodTrackPassiveConfig*> EncodedIdToBloodTrackPassive;                              // 0x0470(0x0050) (Transient, Protected, NativeAccessSpecifierProtected)
	Tiger_ETigerGroupingMode                           LastSelectedGroupingMode;                                  // 0x04C0(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_AKG0[0x7];                                     // 0x04C1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UDataTable*                                  BotNameTable;                                              // 0x04C8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_CONS[0x10];                                    // 0x04D0(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UTigerDsBackendAgent*                        DsBackendAgent;                                            // 0x04E0(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USharkAccounts*                              AccountSystem;                                             // 0x04E8(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class UTigerAmmoAsset*>                     AmmoPickupItems;                                           // 0x04F0(0x0010) (ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	struct FTigerSeasonConfig                          ClientSeasonConfig;                                        // 0x0500(0x0258) (Transient, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_MPGB[0x8];                                     // 0x0758(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerGameInstance");
		return ptr;
	}



	void WaitForCurrentMatchStats(int TimeoutSecs, const struct FScriptDelegate& Delegate);
	bool TravelToSession(const struct FString& InSessionURL, Tiger_ESessionType InSessionType);
	void TransferToPartyElysium();
	void ToggleTutorialMenu();
	void ToggleMatchMeny();
	void TigerOnTitleScreenClosed__DelegateSignature();
	void StartPushConnection();
	void ShowWinScreen();
	void ShowPostMatchScreen(bool bInShouldLeaveParty);
	bool ShouldDebugGameFlow();
	void ReturnToElysium();
	void ReturnToBootWithError(const struct FString& InError);
	void ReceivePartyInvitation(class UTigerPartyInvite* Invite, class UTigerUser* Host);
	void ReceiveInvitation(const struct FTigerGroupInvitation& Invitation, class ATigerPlayerState* Inviter);
	void PostLoadMapWithWorld();
	void OnMatchStatsReceivedMulticastDelegate__DelegateSignature(bool bTimedOut);
	void OnMatchStatsReceivedDelegate__DelegateSignature(bool bTimedOut);
	void OnFindMatchFailed__DelegateSignature();
	void LaunchTutorialNative();
	void LaunchTransferFromMatch();
	void KickToLoginScreen();
	void JoinSessionThroughUrl(const struct FString& SessionURL);
	bool IsJoiningMatch();
	bool IsAllowedToOpenMainMenu();
	bool HasCurrentMatchStats();
	bool HasCompletedBattlepass(int InCurrentSeasonLevel);
	void HandleOnDisplaySettingsApplied();
	class ATigerWeatherController* GetWeatherController();
	class UTigerVoipTalkerState* GetVoipTalkerState();
	struct FLinearColor GetUIColor(Tiger_ETigerUIColor UIColor, Tiger_ETigerColourSpace ColorSpace);
	class UTigerTitleListAsset* GetTitleList();
	class UTigerTelemetryEventHandler* GetTelemetryEventHandler();
	class ATigerStatisticsGatherer* GetStatisticsGatherer();
	class UTigerExpRequirements* GetSeasonExpRequirements();
	struct FDateTime GetSeasonEndDate();
	void GetSeasonBannerTexture();
	class UTigerQuestCollection* GetQuestCollection();
	class UShMidasAdapter* GetPaymentManager();
	class UTigerPartyManager* GetPartyManager();
	struct FTigerMatchStats GetLastMatchStats();
	struct FTigerCharacterAppearance GetDefaultCharacterAppearanceForArchetype(Tiger_ETigerPowerKitType InArchetypeType);
	Tiger_ESessionType GetCurrentSessionType();
	Tiger_ETigerClan GetClanTypeFromArchetypeType(Tiger_ETigerPowerKitType InArchetypeType);
	class UTigerPlayerClanData* GetClanDataFromArchetypeType(Tiger_ETigerPowerKitType InArchetypeType);
	class UTigerPlayerClanData* GetClanData(Tiger_ETigerClan Clan);
	struct FDateTime GetBattlepassEndDate();
	TArray<class UTigerPlayerClanData*> GetAvailableClans();
	class UTigerAuthenticationManager* GetAuthenticationManager();
	class UTigerExpRequirements* GetArchetypeExpRequirements();
	class UTigerPowerKit* GetArchetypeData(Tiger_ETigerPowerKitType InArchetypeType);
	void DebugOnWorldCleanup(class UWorld* World, bool bSessionEnded, bool bCleanupResources);
	void DebugOnWorldBeginTearDown(class UWorld* World);
	void DebugOnStreamingStarted(class UTigerWorldCompositionCellComponent* Cell);
	void DebugOnPreWorldFinishDestroy(class UWorld* World);
	void DebugOnPreSpawnStreamingFinished();
	void DebugOnPostWorldCreation(class UWorld* World);
	void DebugOnPostWorldCleanUp(class UWorld* World, bool bSessionEnded, bool bCleanupResources);
	void DebugOnMapPreLoad(const struct FString& InNameOfMapToLoad);
	void DebugOnMapPostLoad(class UWorld* InNewWorld);
	void DebugOnInitialStreamingFinished();
	void DebugOnGameStateChanged(Tiger_ETigerMatchState InOldState, Tiger_ETigerMatchState InNewState);
	void DebugOnCharacterStartedLoading();
	void DebugOnCharacterFinishedLoading();
	void CreateLoadingScreenWidget(float InFadeInTime, class UTigerLoadingScreenAsset* InLoadingScreenAsset, class UClass* InWidgetClass);
	void CreateLoadingScreenForGameMode(float InFadeInTime);
	void CloseWinScreen();
	void CloseMatchMenu();
	void CheckOnlyBotsAliveEndsMatch();
	void CheckForBotsAsClients();
	void CheckBotsIgnorePlayer();
	void Cheat_QuitTutorial();
	void CharacterCustomizationLoadingStarted__DelegateSignature();
	void CharacterCustomizationLoadingFinished__DelegateSignature();
	void CallOnTitleScreenClosed();
};

// Class Tiger.TigerGameSettings
// 0x01C0 (FullSize[0x01F8] - InheritedSize[0x0038])
class UTigerGameSettings : public USharkLocalDeveloperSettings
{
public:
	struct FSoftObjectPath                             QuestCollection;                                           // 0x0038(0x0018) (Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bEnableNpcSpawning;                                        // 0x0050(0x0001) (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_2ZFT[0x3];                                     // 0x0051(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              NpcLocationCorrectionInterval;                             // 0x0054(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ItemClusterSize;                                           // 0x0058(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ItemClusterExtraReplicationRange;                          // 0x005C(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                BuildingSystemVersion;                                     // 0x0060(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                RoofSystemVersion;                                         // 0x0064(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                RoofSystemFreeTransformableVersion;                        // 0x0068(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     SideVolumeExtents;                                         // 0x006C(0x000C) (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              BelowSideMargin;                                           // 0x0078(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              BelowDepthMargin;                                          // 0x007C(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              BelowVolumeHeight;                                         // 0x0080(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ShallowBalconyDepth;                                       // 0x0084(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bEnableApartments;                                         // 0x0088(0x0001) (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_GMDA[0x7];                                     // 0x0089(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UClass*                                      BuildingWallPreviewerClass;                                // 0x0090(0x0008) (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bEnableStatisticsGathering;                                // 0x0098(0x0001) (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bEnableLandingPage;                                        // 0x0099(0x0001) (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bEnableIntro;                                              // 0x009A(0x0001) (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_T2G7[0x5];                                     // 0x009B(0x0005) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FSoftObjectPath                             TutorialLevel;                                             // 0x00A0(0x0018) (Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSoftObjectPath                             TransferFromMatchLevel;                                    // 0x00B8(0x0018) (Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      CustomizationOptions[0x28];                                // 0x00D0(0x0028) UNKNOWN PROPERTY: SoftClassProperty
	unsigned char                                      ItemsDatabase[0x28];                                       // 0x00F8(0x0028) UNKNOWN PROPERTY: SoftClassProperty
	unsigned char                                      GrimoireTree[0x28];                                        // 0x0120(0x0028) UNKNOWN PROPERTY: SoftClassProperty
	unsigned char                                      TrainingVideoGrimoireEntry[0x28];                          // 0x0148(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	unsigned char                                      ChallengeDatabase[0x28];                                   // 0x0170(0x0028) UNKNOWN PROPERTY: SoftClassProperty
	int                                                MaxPlayerNameLength;                                       // 0x0198(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_XKE0[0x4];                                     // 0x019C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FString                                     PromotionalPopupConfigUrl;                                 // 0x01A0(0x0010) (Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      AssetStatusDoNotUseMaterial[0x28];                         // 0x01B0(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	bool                                               bLogNetworkMovementFlagsOnServer;                          // 0x01D8(0x0001) (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_8I0S[0x3];                                     // 0x01D9(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FRotator                                    SavedPlayerRotation;                                       // 0x01DC(0x000C) (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FVector                                     SavedPlayerLocation;                                       // 0x01E8(0x000C) (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_XWCR[0x4];                                     // 0x01F4(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerGameSettings");
		return ptr;
	}



	class UTigerChallengeTypeDatabase* GetChallengeDatabaseMutable();
};

// Class Tiger.TigerGameplayPerfBenchmarkController
// 0x0000 (FullSize[0x0478] - InheritedSize[0x0478])
class ATigerGameplayPerfBenchmarkController : public ATigerLocalAIControllerBase
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerGameplayPerfBenchmarkController");
		return ptr;
	}



	void StartBehaviorTree(class UBehaviorTree* InBehaviorTree);
};

// Class Tiger.TigerGameplayStatics
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class UTigerGameplayStatics : public UGameplayStatics
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerGameplayStatics");
		return ptr;
	}



};

// Class Tiger.TigerGameSingleton
// 0x0050 (FullSize[0x0078] - InheritedSize[0x0028])
class UTigerGameSingleton : public UObject
{
public:
	TMap<class UAnimSequence*, class UAnimMontage*>    GeneratedMontages;                                         // 0x0028(0x0050) (Transient, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerGameSingleton");
		return ptr;
	}



};

// Class Tiger.TigerGameViewportClient
// 0x0020 (FullSize[0x0380] - InheritedSize[0x0360])
class UTigerGameViewportClient : public UGameViewportClient
{
public:
	unsigned char                                      UnknownData_SL45[0x20];                                    // 0x0360(0x0020) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerGameViewportClient");
		return ptr;
	}



};

// Class Tiger.TigerGasOverlay
// 0x0238 (FullSize[0x0340] - InheritedSize[0x0108])
class UTigerGasOverlay : public UWidget
{
public:
	struct FSlateBrush                                 WaveTextureBrush;                                          // 0x0108(0x0088) (Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FSlateBrush                                 TargetTextureBrush;                                        // 0x0190(0x0088) (Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FSlateBrush                                 WavePolyTextureBrush;                                      // 0x0218(0x0088) (Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FSlateBrush                                 TargetPolyTextureBrush;                                    // 0x02A0(0x0088) (Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class ATigerPlayerController*                      PlayerController;                                          // 0x0328(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_INFE[0x10];                                    // 0x0330(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerGasOverlay");
		return ptr;
	}



	void UpdateGeomtery();
};

// Class Tiger.TigerPropDummy
// 0x0018 (FullSize[0x04D0] - InheritedSize[0x04B8])
class ATigerPropDummy : public ACharacter
{
public:
	class UTigerNpcPropComponent*                      PropComponent;                                             // 0x04B8(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FTigerDummyPropAttachment>           Attachments;                                               // 0x04C0(0x0010) (Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerPropDummy");
		return ptr;
	}



};

// Class Tiger.TigerPsoCacheUI
// 0x0020 (FullSize[0x02A0] - InheritedSize[0x0280])
class UTigerPsoCacheUI : public UTigerWidget
{
public:
	struct FScriptMulticastDelegate                    OnCachingDone;                                             // 0x0280(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UTigerSharedMouseCursor*                     SharedMouseCursor;                                         // 0x0290(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_F4I5[0x8];                                     // 0x0298(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerPsoCacheUI");
		return ptr;
	}



	void TigerOnCachingDone__DelegateSignature();
	bool STATIC_ShouldCacheDx12PsosAtBoot();
	void OnProgressUpdated(float InPercentageCompleted);
	void CancelCaching();
};

// Class Tiger.TigerQuestObjective
// 0x0078 (FullSize[0x00A0] - InheritedSize[0x0028])
class UTigerQuestObjective : public UObject
{
public:
	struct FText                                       Description;                                               // 0x0028(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FText                                       FlavourText;                                               // 0x0040(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class UTigerChallenge*                             Objective;                                                 // 0x0058(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bComplete;                                                 // 0x0060(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_2YVD[0x7];                                     // 0x0061(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class UTigerQuestObjective*>                FollowOnObjectives;                                        // 0x0068(0x0010) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FGuid                                       ID;                                                        // 0x0078(0x0010) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTigerQuest*                                 ParentQuest;                                               // 0x0088(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTigerQuestObjective*                        ParentObjective;                                           // 0x0090(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class ATigerPlayerController*                      OwningPlayerController;                                    // 0x0098(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerQuestObjective");
		return ptr;
	}



	void OnObjectiveCompleted(class UTigerChallenge* InTigerChallenge);
};

// Class Tiger.TigerGeneralUserSettings
// 0x02D0 (FullSize[0x02F8] - InheritedSize[0x0028])
class UTigerGeneralUserSettings : public UObject
{
public:
	class UAkAudioEvent*                               EnableAtmosMixEvent;                                       // 0x0028(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               EnableHeadphonesEvent;                                     // 0x0030(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnQualityOptionChanged;                                    // 0x0038(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnDisplaySettingsApplied;                                  // 0x0048(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnGraphicsSettingsApplied;                                 // 0x0058(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_4WQD[0x8];                                     // 0x0068(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FTigerAudioSettings                         UserAudioSettings;                                         // 0x0070(0x0024) (BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FTigerAudioSettings                         DefaultAudioSettings;                                      // 0x0094(0x0024) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FTigerLanguageSettings                      UserLanguageSettings;                                      // 0x00B8(0x0028) (BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	struct FTigerLanguageSettings                      DefaultLanguageSettings;                                   // 0x00E0(0x0028) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FTigerGameplaySettings                      UserGameplaySettings;                                      // 0x0108(0x0008) (BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FTigerGameplaySettings                      DefaultGameplaySettings;                                   // 0x0110(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, Protected, NativeAccessSpecifierProtected)
	TArray<struct FString>                             AvailableAudioLanguages;                                   // 0x0118(0x0010) (BlueprintVisible, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TMap<struct FString, struct FString>               LanguageDisplayName;                                       // 0x0128(0x0050) (BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_FFXI[0x10];                                    // 0x0178(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FTigerDisplaySettings                       TempDisplaySettings;                                       // 0x0188(0x0028) (BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FTigerDisplaySettings                       UserDisplaySettings;                                       // 0x01B0(0x0028) (BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FTigerDisplaySettings                       DefaultDisplaySettings;                                    // 0x01D8(0x0028) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FTigerGraphicsSettings                      TempGraphicsSettings;                                      // 0x0200(0x004C) (BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FTigerGraphicsSettings                      UserGraphicsSettings;                                      // 0x024C(0x004C) (BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FTigerGraphicsSettings                      DefaultGraphicsSettings;                                   // 0x0298(0x004C) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_BVRL[0x14];                                    // 0x02E4(0x0014) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerGeneralUserSettings");
		return ptr;
	}



	bool WillNeedRestart();
	void ToggleSwapOutDefaultWeapon();
	void ToggleMuteGeneralChat();
	bool ShouldPromptRevertTimer();
	void SetWindowMode(int InWindowMode);
	void SetVolumetricFogQuality(int InQualityLevel);
	void SetVoiceChatVolume(float InVolume);
	void SetVisualEffectQuality(int InQualityLevel);
	void SetViewDistanceQuality(int InQualityLevel);
	void SetVideoVolume(float InVolume);
	void SetUseSubtitles(bool bInUsed);
	void SetUsePushToTalk(bool bInUse);
	void SetUseLightShafts(bool bInUseLightShaft);
	void SetUseFilmGrain(bool bInIsEnabled);
	void SetUseDX12(bool bInUseDX12);
	void SetUseChromaticAberration(bool bInIsEnabled);
	void SetTextureQuality(int InQualityLevel);
	void SetTextureFilteringQuality(int InQualityLevel);
	void SetTextLanguage(const struct FString& InLanguage);
	void SetSubSurfaceScatteringQuality(int InQualityLevel);
	void SetShadowQuality(int InQualityLevel);
	void SetSfxVolume(float InVolume);
	void SetScreenSpaceReflectionQuality(int InQualityLevel);
	void SetResolutionScale(float InScale);
	void SetResolution(const struct FIntPoint& InResolution);
	void SetQualityPreset(int InQualityLevel);
	void SetMusicVolume(float InVolume);
	void SetMotionBlurQuality(int InQualityLevel);
	void SetMicVolume(float InVolume);
	void SetMaterialQuality(int InQualityLevel);
	void SetMasterVolume(float InVolume);
	void SetLightingQuality(int InQualityLevel);
	void SetLensFlareQuality(int InQualityLevel);
	void SetGamma(float InGamma);
	void SetFsrSharpening(float InSharpeningAmount);
	void SetFsrQualityLevel(int InQualityLevel);
	void SetFrameRateLimit(float InFrameRateLimit);
	void SetFoliageQuality(int InQualityLevel);
	void SetEnableVSync(bool bInEnableVSync);
	void SetEnableVoiceChat(bool bInEnabled);
	void SetEnableFrameRateSmoothing(bool bInIsEnabled);
	void SetEnableDolbyAtmos(bool bInShouldEnableDolbyAtmos);
	void SetDialogueVolume(float InVolume);
	void SetBloomQuality(int InQualityLevel);
	void SetAudioLanguage(const struct FString& InLanguage);
	void SetAntiAliasingQuality(int InQualityLevel);
	void SetAmbientOcclusionQuality(int InQualityLevel);
	void SetAllowBackgroundAudio(bool bInShouldAllowBackgroundAudio);
	void SaveGraphicsSettings();
	void SaveDisplaySettings();
	void ResetLanguageSettings();
	void ResetGraphicsSettings();
	void ResetGameplaySettings();
	void ResetDisplaySettings();
	void ResetAudioSettings();
	void ReapplyUserGraphicsSettings();
	void ReapplyUserDisplaySettings();
	bool HasGraphicsChanges();
	bool HasDisplayChanges();
	TEnumAsByte<Engine_EWindowMode> GetTempWindowMode();
	int GetCurrentFrameRateLimitOption();
	int FindCurrentQualityPreset();
	bool DoesSupportDX12();
	void DiscardResolutionChanges();
	void DiscardGraphicsSettings();
	void DiscardDisplaySettings();
	void ApplyGraphicsSettings(bool bInShouldSaveSettings);
	void ApplyDisplaySettings(bool bInShouldSaveSettings);
};

// Class Tiger.TigerGhostCameraBehavior
// 0x0000 (FullSize[0x0128] - InheritedSize[0x0128])
class UTigerGhostCameraBehavior : public UTigerActiveCameraBehavior
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerGhostCameraBehavior");
		return ptr;
	}



};

// Class Tiger.GrimoireCardMaterialPreset
// 0x0060 (FullSize[0x0090] - InheritedSize[0x0030])
class UGrimoireCardMaterialPreset : public UDataAsset
{
public:
	float                                              Roughness;                                                 // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              Damage;                                                    // 0x0034(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ExtraDamage;                                               // 0x0038(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ExtraDamageOnEdges;                                        // 0x003C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     ExtraDamageMoveScale;                                      // 0x0040(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     BorderRoughnessSpecularity;                                // 0x004C(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              BorderAmount;                                              // 0x0058(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FCoreUObject_FColor                         BorderColor;                                               // 0x005C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              BorderRaisedAmount;                                        // 0x0060(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     BorderRoughnessSpecularityMetalic;                         // 0x0064(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     DirtMaps;                                                  // 0x0070(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FCoreUObject_FColor                         DirtColor;                                                 // 0x007C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     DirtMoveXYScale;                                           // 0x0080(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              DirtHardness;                                              // 0x008C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.GrimoireCardMaterialPreset");
		return ptr;
	}



};

// Class Tiger.TigerGrimoireCard
// 0x0020 (FullSize[0x0248] - InheritedSize[0x0228])
class ATigerGrimoireCard : public AActor
{
public:
	class UStaticMeshComponent*                        Mesh;                                                      // 0x0228(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture*                                    FrontTexture;                                              // 0x0230(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture*                                    BackfaceTextureDMNR;                                       // 0x0238(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bIsFloating;                                               // 0x0240(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_I1L7[0x7];                                     // 0x0241(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerGrimoireCard");
		return ptr;
	}



	void RestartFloatingAnimation();
	void PlayFloatingAnimation();
	int GenerateSeed(class UTigerGrimoireEntry* InEntry);
};

// Class Tiger.TigerThrallMission
// 0x0088 (FullSize[0x00B8] - InheritedSize[0x0030])
class UTigerThrallMission : public UDataAsset
{
public:
	int                                                MissionId;                                                 // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       MissionName;                                               // 0x0034(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_2XLX[0x4];                                     // 0x003C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FTigerThrallMissionObjective                MissionObjective;                                          // 0x0040(0x0038) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class UTigerThrallMissionMapMarkerData*            MissionMarkers;                                            // 0x0078(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FThrallMissionRequirements                  MissionStatRequirements;                                   // 0x0080(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FTigerThrallMissionReward                   MissionRewards;                                            // 0x0098(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	int                                                MissionLength;                                             // 0x00B0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_1VR5[0x4];                                     // 0x00B4(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerThrallMission");
		return ptr;
	}



};

// Class Tiger.TigerThrallSystem
// 0x0080 (FullSize[0x0130] - InheritedSize[0x00B0])
class UTigerThrallSystem : public UActorComponent
{
public:
	unsigned char                                      UnknownData_V00L[0x18];                                    // 0x00B0(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class UTigerLocalThrallData*>               PlayerThralls;                                             // 0x00C8(0x0010) (ZeroConstructor, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_R0WM[0x8];                                     // 0x00D8(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TMap<int, class UTigerLocalThrallMissionData*>     LocalActiveMissions;                                       // 0x00E0(0x0050) (NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerThrallSystem");
		return ptr;
	}



	void UpdateMissionTurns(int InMissionId, int InIncreaseTurns);
	void SetMissionStatus(int InMissionId, bool bActive);
	bool RemoveThrallFromMission(int InMissionId, Tiger_ETigerThrallId InThrallId);
	bool RemoveThrallBySlot(unsigned char InSlotIndex);
	void OnMissionComplete__DelegateSignature(class UTigerLocalThrallMissionData* LocalMissionData);
	bool HasThrall(Tiger_ETigerThrallId InThrallId);
	bool HasMissionId(int InMissionId);
	int GetSharedXP();
	class UTigerThrallMission* GetRandomMission();
	class UTigerLocalThrallData* GetMutableThrallBySlot(int InSlotIndex);
	class UTigerLocalThrallData* GetMutableThrallById(Tiger_ETigerThrallId InThrallId);
	class UTigerThrallMission* GetMissionForId(int InId);
	TArray<class UTigerLocalThrallData*> GetAllThralls();
	TArray<class UTigerThrallMission*> GetAllMissions();
	bool AssignThrallToMission(int InMissionId, Tiger_ETigerThrallId InThrallId);
};

// Class Tiger.TigerThrallSystemSettings
// 0x00A0 (FullSize[0x00D8] - InheritedSize[0x0038])
class UTigerThrallSystemSettings : public UDeveloperSettings
{
public:
	unsigned char                                      AbilitiesTable[0x28];                                      // 0x0038(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	unsigned char                                      BaseThrallsTable[0x28];                                    // 0x0060(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	unsigned char                                      StatModifiersTable[0x28];                                  // 0x0088(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	unsigned char                                      ThrallMissionsTable[0x28];                                 // 0x00B0(0x0028) UNKNOWN PROPERTY: SoftObjectProperty


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerThrallSystemSettings");
		return ptr;
	}



	class UDataTable* STATIC_GetThrallMissionsTable();
	class UDataTable* STATIC_GetThrallAbilitiesTable();
	class UDataTable* STATIC_GetStatModifiersTable();
	class UDataTable* STATIC_GetBaseThrallsTable();
};

// Class Tiger.TigerThrallTable
// 0x0038 (FullSize[0x02B8] - InheritedSize[0x0280])
class ATigerThrallTable : public ATigerInteractiveObject
{
public:
	class UTigerThrallMapUI*                           TigerThrallMapUI;                                          // 0x0280(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bIsThrallMapUIOpened;                                      // 0x0288(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_UD07[0x7];                                     // 0x0289(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UCameraComponent*                            Camera;                                                    // 0x0290(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              TimeToTransition;                                          // 0x0298(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              CameraExponent;                                            // 0x029C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMeshComponent*                        TableMesh;                                                 // 0x02A0(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ATigerPlayer*                                InteractingPlayer;                                         // 0x02A8(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_OQJO[0x8];                                     // 0x02B0(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerThrallTable");
		return ptr;
	}



	void SwitchToTableCamera(bool bIsInstant, class ATigerPlayerController* InTigerController);
	void SwitchToPlayerCamera(bool bIsInstant, class ATigerPlayerController* InTigerController);
	void StopInteracting(class ATigerPlayerController* InTigerController);
	void StartCameraTransition();
	void OpenUI(class ATigerPlayerController* InTigerController);
	bool IsThrallMapOpen();
	class ATigerPlayerController* GetTigerController();
};

// Class Tiger.TigerThrowingAxe
// 0x0020 (FullSize[0x0248] - InheritedSize[0x0228])
class ATigerThrowingAxe : public AActor
{
public:
	unsigned char                                      UnknownData_WYGC[0x1C];                                    // 0x0228(0x001C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               bHasBeenReflected;                                         // 0x0244(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_V4YQ[0x3];                                     // 0x0245(0x0003) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerThrowingAxe");
		return ptr;
	}



	float GetDamageMultiplier();
	class AActor* CopyAndReflect(class ATigerCharacter* InNewOwner, const struct FVector& InSpawnLocation, const struct FRotator& InSpawnRotation);
};

// Class Tiger.TigerThumbnailCameraComponent
// 0x0018 (FullSize[0x0210] - InheritedSize[0x01F8])
class UTigerThumbnailCameraComponent : public USceneComponent
{
public:
	struct FString                                     CameraTag;                                                 // 0x01F8(0x0010) (Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_96GO[0x8];                                     // 0x0208(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerThumbnailCameraComponent");
		return ptr;
	}



};

// Class Tiger.TigerGrimoireLandingUi
// 0x0048 (FullSize[0x02C8] - InheritedSize[0x0280])
class UTigerGrimoireLandingUi : public UTigerWidget
{
public:
	unsigned char                                      UnknownData_Y7CS[0x10];                                    // 0x0280(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class UTigerGrimoireEntry*>                 CachedUnlockedEntries;                                     // 0x0290(0x0010) (ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<class UTigerGrimoireEntry*>                 CachedReadEntries;                                         // 0x02A0(0x0010) (ZeroConstructor, NativeAccessSpecifierPrivate)
	struct FTigerSuggestedArticlesData                 CachedSuggestedArticlesData;                               // 0x02B0(0x0018) (NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerGrimoireLandingUi");
		return ptr;
	}



	void RemoveSuggestedEntry(const struct FString& InEntryId);
	class UTigerGrimoireEntry* GetRandomEntry();
	void GetArticleEntries(class UTigerGrimoireEntry** OutFeaturedEntry, TArray<class UTigerGrimoireEntry*>* OutSuggestedEntries, TArray<class UTigerGrimoireEntry*>* OutNewEntries);
};

// Class Tiger.TigerGrimoireRichBlockDecorator
// 0x07E8 (FullSize[0x0810] - InheritedSize[0x0028])
class UTigerGrimoireRichBlockDecorator : public URichTextBlockDecorator
{
public:
	struct FSlateBrush                                 SummaryBackground;                                         // 0x0028(0x0088) (Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class UTigerGrimoireUi*                            GrimoireUI;                                                // 0x00B0(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FButtonStyle                                ButtonStyle;                                               // 0x00B8(0x0278) (Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FTextBlockStyle                             UnlockedEntryTextStyle;                                    // 0x0330(0x0270) (Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FTextBlockStyle                             LockedEntryTextStyle;                                      // 0x05A0(0x0270) (Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerGrimoireRichBlockDecorator");
		return ptr;
	}



};

// Class Tiger.TigerGrimoireDialogueWrapper
// 0x0018 (FullSize[0x0040] - InheritedSize[0x0028])
class UTigerGrimoireDialogueWrapper : public UObject
{
public:
	class UTigerNpcDialogueList*                       DialogueList;                                              // 0x0028(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FString                                     DialogueKey;                                               // 0x0030(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerGrimoireDialogueWrapper");
		return ptr;
	}



	struct FText GetDialogueText();
};

// Class Tiger.TigerGrimoireEntry
// 0x0188 (FullSize[0x01B8] - InheritedSize[0x0030])
class UTigerGrimoireEntry : public UDataAsset
{
public:
	struct FText                                       Name;                                                      // 0x0030(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FText                                       GameplayText;                                              // 0x0048(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FText                                       Heading;                                                   // 0x0060(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FText                                       Description;                                               // 0x0078(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class UTigerGrimoireDialogueWrapper*               Dialogue;                                                  // 0x0090(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FText                                       Summary;                                                   // 0x0098(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FText                                       UnlockSummary;                                             // 0x00B0(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	Tiger_ETigerGrimoireEntryMediaDisplayMode          MediaDisplayMode;                                          // 0x00C8(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_M1WM[0x7];                                     // 0x00C9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	unsigned char                                      Image[0x28];                                               // 0x00C9(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	unsigned char                                      BackgroundImage[0x28];                                     // 0x00F8(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	unsigned char                                      Mesh[0x28];                                                // 0x0120(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	class UFileMediaSource*                            Video;                                                     // 0x0148(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	Tiger_ETigerGrimoireEntryState                     DefaultState;                                              // 0x0150(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	Tiger_ETigerGrimoireContinuationMethod             TextContinuationMethod;                                    // 0x0151(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_OONS[0x6];                                     // 0x0152(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UGrimoireCardMaterialPreset*                 GrimoireCardPreset;                                        // 0x0158(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDataTableRowHandle                         CardQualityRow;                                            // 0x0160(0x0010) (Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FDataTableRowHandle                         CardBorderRow;                                             // 0x0170(0x0010) (Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	class UTexture*                                    FrontCardTexture;                                          // 0x0180(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              DefaultOrderValue;                                         // 0x0188(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MeshScaleMultiplier;                                       // 0x018C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_2BNB[0x8];                                     // 0x0190(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FString                                     EntryIdAsString;                                           // 0x0198(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bHideEntry;                                                // 0x01A8(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_18WJ[0x7];                                     // 0x01A9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UTigerGrimoireEntry*                         ParentEntry;                                               // 0x01B0(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerGrimoireEntry");
		return ptr;
	}



};

// Class Tiger.TigerGrimoireCategory
// 0x0078 (FullSize[0x00A8] - InheritedSize[0x0030])
class UTigerGrimoireCategory : public UDataAsset
{
public:
	struct FText                                       Title;                                                     // 0x0030(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FText                                       Description;                                               // 0x0048(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class UDataTable*                                  Entries;                                                   // 0x0060(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UTigerGrimoireCategory*>              SubCategories;                                             // 0x0068(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class UTigerGrimoireCategory*                      ParentCategory;                                            // 0x0078(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bHideCategory;                                             // 0x0080(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	Tiger_ETigerNewNotificationMenuOptions             NewNotificationCategory;                                   // 0x0081(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_60G8[0x6];                                     // 0x0082(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UTexture*                                    BackfaceTextureDMNR;                                       // 0x0088(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              DefaultOrderValue;                                         // 0x0090(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_NI17[0x14];                                    // 0x0094(0x0014) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerGrimoireCategory");
		return ptr;
	}



	TArray<class UTigerGrimoireEntry*> GetAllEntries(bool bInIncludeSubEntries);
};

// Class Tiger.TigerGrimoireTree
// 0x00F8 (FullSize[0x0120] - InheritedSize[0x0028])
class UTigerGrimoireTree : public UObject
{
public:
	TArray<class UTigerGrimoireCategory*>              Categories;                                                // 0x0028(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_N3EM[0xE8];                                    // 0x0038(0x00E8) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerGrimoireTree");
		return ptr;
	}



	void SearchTreeByName(const struct FString& InSearch, const struct FScriptDelegate& InOnCompleteDelegate);
	void PopulateSearchMap();
	void GetSubEntriesForEntryId(const struct FString& InEntryId, bool* OutIsPartial, TArray<class UTigerGrimoireEntry*>* OutSubEntries);
	void GetSubEntriesForEntry(class UTigerGrimoireEntry* InEntry, bool* OutIsPartial, TArray<class UTigerGrimoireEntry*>* OutSubEntries);
	class UTigerGrimoireEntry* GetEntry(const struct FString& InEntryId);
	class UTigerGrimoireCategory* GetCategoryForEntry(const struct FString& InEntryId);
};

// Class Tiger.TigerGrimoireUi
// 0x0058 (FullSize[0x0408] - InheritedSize[0x03B0])
class UTigerGrimoireUi : public UTigerSceneBackgroundUI
{
public:
	bool                                               bNotificationIdsSetup;                                     // 0x03B0(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_UX9G[0x7];                                     // 0x03B1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class ATigerModelViewerItem*                       GrimoireItem;                                              // 0x03B8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ATigerGrimoireCard*                          GrimoireCard;                                              // 0x03C0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                      ModelCam;                                                  // 0x03C8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                      CloseModelCam;                                             // 0x03D0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       ItemRotationNodeTag;                                       // 0x03D8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       CloseViewerCamName;                                        // 0x03E0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       ViewerCamName;                                             // 0x03E8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       ExaminablePropsLevelName;                                  // 0x03F0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                      ItemRotationNode;                                          // 0x03F8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       LightingSubLevelName;                                      // 0x0400(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerGrimoireUi");
		return ptr;
	}



	void TigerDelegate__DelegateSignature();
	void STATIC_SortEntries(TArray<class UTigerGrimoireEntry*> InGrimoireEntries, Tiger_ETigerGrimoireSortType InSortType, TArray<class UTigerGrimoireEntry*>* OutSortedEntries);
	void STATIC_SortCategories(TArray<class UTigerGrimoireCategory*> InGrimoireCategories, class UTigerPersistentPlayerState* InPersistentPlayerState, Tiger_ETigerGrimoireSortType InSortType, TArray<class UTigerGrimoireCategory*>* OutSortedCategories);
	void SetupNotificationEntryIds();
	void RefreshLanguageOnGrimoireProps();
	void STATIC_LoadMediaForGrimoireEntriesAsync(TArray<class UTigerGrimoireEntry*> InGrimoireEntries, const struct FScriptDelegate& OnLoadedDelegate);
	void JumpToSubCategory(class UTigerGrimoireCategory* InSubCategory);
	void JumpToEntry(const struct FString& InEntryId);
	void JumpToCategory(class UTigerGrimoireCategory* InCategory);
	bool STATIC_IsGrimoireEntryMediaLoaded(class UTigerGrimoireEntry* InEntry);
	class AActor* GetFirstActorWithTag(class ULevel* InLoadedLevel, const struct FName& InTag);
	void FindGrimoireDisplayItems();
};

// Class Tiger.TigerGrimoireUnlockPickup
// 0x0020 (FullSize[0x02A0] - InheritedSize[0x0280])
class ATigerGrimoireUnlockPickup : public ATigerInteractiveObject
{
public:
	class UStaticMeshComponent*                        PickupMesh;                                                // 0x0280(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTigerGrimoireEntry*                         EntryToUnlock;                                             // 0x0288(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_A6ND[0x10];                                    // 0x0290(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerGrimoireUnlockPickup");
		return ptr;
	}



};

// Class Tiger.TigerGrimoireUnlockTriggerVolume
// 0x0028 (FullSize[0x0288] - InheritedSize[0x0260])
class ATigerGrimoireUnlockTriggerVolume : public ATriggerVolume
{
public:
	class UTigerGrimoireEntry*                         EntryToUnlock;                                             // 0x0260(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_W4MR[0x20];                                    // 0x0268(0x0020) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerGrimoireUnlockTriggerVolume");
		return ptr;
	}



	void OnBeginOverlap(class AActor* InOverlappedActor, class AActor* InOtherActor);
	void HandleOnRestartPlayer(class AController* InNewPlayer);
};

// Class Tiger.TigerGroupCoordinator
// 0x0080 (FullSize[0x0130] - InheritedSize[0x00B0])
class UTigerGroupCoordinator : public UActorComponent
{
public:
	unsigned char                                      UnknownData_TCW0[0x8];                                     // 0x00B0(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class UTigerPlayerGroup*>                   Groups;                                                    // 0x00B8(0x0010) (ZeroConstructor, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_XYSU[0x68];                                    // 0x00C8(0x0068) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerGroupCoordinator");
		return ptr;
	}



	class UTigerPlayerGroup* GetGroupFromPlayerController(class ATigerPlayerController* TigerPlayerController);
};

// Class Tiger.TigerGroupMemberMarkerProxy
// 0x0008 (FullSize[0x0070] - InheritedSize[0x0068])
class UTigerGroupMemberMarkerProxy : public UTigerMapMarkerProxy
{
public:
	unsigned char                                      PlayerIndex;                                               // 0x0068(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_A99Z[0x7];                                     // 0x0069(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerGroupMemberMarkerProxy");
		return ptr;
	}



};

// Class Tiger.TigerGroupSettings
// 0x0010 (FullSize[0x0048] - InheritedSize[0x0038])
class UTigerGroupSettings : public USharkLocalDeveloperSettings
{
public:
	struct FTigerGroupSettingsData                     GroupSettingsData;                                         // 0x0038(0x0010) (Edit, Config, NoDestructor, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerGroupSettings");
		return ptr;
	}



};

// Class Tiger.TigerGroupStateComponent
// 0x0088 (FullSize[0x0138] - InheritedSize[0x00B0])
class UTigerGroupStateComponent : public UActorComponent
{
public:
	struct FScriptMulticastDelegate                    OnGroupMembersChanged;                                     // 0x00B0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TArray<TWeakObjectPtr<class ATigerPlayerState>>    OtherGroupMembers;                                         // 0x00C0(0x0010) (Net, ZeroConstructor, RepNotify, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_2IHP[0x18];                                    // 0x00D0(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnMarkedAsGroupMember;                                     // 0x00E8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnRemoveMarkedAsGroupMember;                               // 0x00F8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnPlayerIndexChanged;                                      // 0x0108(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	class UTigerCompassMarkerComponent*                CompassComponent;                                          // 0x0118(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ATigerPlayerController*                      LocalPlayerController;                                     // 0x0120(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTigerGroupMemberMarkerProxy*                GroupMemberMapMarkerProxy;                                 // 0x0128(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      GroupMemberId;                                             // 0x0130(0x0001) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_5RR1[0x7];                                     // 0x0131(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerGroupStateComponent");
		return ptr;
	}



	void TeamMembersChanged__DelegateSignature(class UTigerGroupStateComponent* InGroupStateComponent, TArray<class ATigerPlayerState*> InPreviousGroupMembers);
	void Server_RefreshGroupMembers();
	bool PlayerIsInAGroup();
	void OnRep_OnGroupMemberIdChanged(unsigned char InOldGroupMemberId);
	void OnRep_OnGroupChanged();
	bool IsGroupMemberWithLocalPlayer();
	bool IsGroupMemberByPersistentPlayerId(const struct FTigerPersistentPlayerID& InPlayerId);
	bool IsGroupMember(class ATigerPlayer* InTigerPlayer);
	void HandlePlayerStateAdded(class ATigerPlayerState* InPlayerState);
	unsigned char GetPlayerIndex();
	TArray<class ATigerPlayerState*> GetOtherGroupMembersBP();
	void ExecuteForAllOtherMembers(const struct FScriptDelegate& InDelegate);
	void ExecuteDelegate__DelegateSignature(class ATigerPlayerState* InPlayerState);
	int CurrentPresentGroupMemberCount();
	void Client_UpdateGroupMembers(TArray<TWeakObjectPtr<class ATigerPlayerState>> InGroupMembers);
	void Client_LockArchetypeSelection(class ATigerPlayerState* InPlayerState, Tiger_ETigerPowerKitType InArchetype);
	bool AnyOtherMemberAlive();
};

// Class Tiger.TigerGroupUIWidget
// 0x0000 (FullSize[0x0280] - InheritedSize[0x0280])
class UTigerGroupUIWidget : public UTigerWidget
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerGroupUIWidget");
		return ptr;
	}



	void OnGroupMemberReadyStatusChanged(class ATigerPlayerState* InGroupMember, bool bInIsReadyForMatchmaking);
	void ClearGroupMembers();
	void AddGroupMemberToCanvas(class ATigerPlayerState* InGroupMember, bool bInIsReadyForMatchmaking);
};

// Class Tiger.TigerGuardVolume
// 0x0018 (FullSize[0x0240] - InheritedSize[0x0228])
class ATigerGuardVolume : public AActor
{
public:
	bool                                               bTriggerThreatState;                                       // 0x0228(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_EXFW[0x7];                                     // 0x0229(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class UShapeComponent*>                     Colliders;                                                 // 0x0230(0x0010) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerGuardVolume");
		return ptr;
	}



	void EndOverlappedActor(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex);
	void BeginOverlappedActor(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
};

// Class Tiger.TigerHavenTriggerVolume
// 0x0000 (FullSize[0x0260] - InheritedSize[0x0260])
class ATigerHavenTriggerVolume : public ATriggerVolume
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerHavenTriggerVolume");
		return ptr;
	}



};

// Class Tiger.TigerHaven
// 0x0048 (FullSize[0x0270] - InheritedSize[0x0228])
class ATigerHaven : public AActor
{
public:
	struct FString                                     OverrideFinalHavenIdentifier;                              // 0x0228(0x0010) (Edit, ZeroConstructor, DisableEditOnTemplate, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USplineComponent*                            HolyIncenseOuterSpline;                                    // 0x0238(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USplineComponent*                            HolyIncenseInnerSpline;                                    // 0x0240(0x0008) (Edit, ExportObject, ZeroConstructor, DisableEditOnTemplate, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bUseInnerHolyIncenseSpline;                                // 0x0248(0x0001) (Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_D5MV[0x27];                                    // 0x0249(0x0027) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerHaven");
		return ptr;
	}



};

// Class Tiger.TigerHavenCapturePoint
// 0x00A8 (FullSize[0x02D0] - InheritedSize[0x0228])
class ATigerHavenCapturePoint : public AActor
{
public:
	struct FText                                       PointActivatedText;                                        // 0x0228(0x0018) (Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	float                                              HavenMarkerHeightOffset;                                   // 0x0240(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_K73U[0x4];                                     // 0x0244(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class ATigerHaven*                                 AssignedHaven;                                             // 0x0248(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_0XDF[0x7C];                                    // 0x0250(0x007C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               bRevealedEveryone;                                         // 0x02CC(0x0001) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_2YEE[0x3];                                     // 0x02CD(0x0003) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerHavenCapturePoint");
		return ptr;
	}



	void StatusChanged(Tiger_ETigerCapturePointStatus Status);
	void OnRep_RevealEveryone();
	void OnPlayerDeath(class ATigerPlayer* DeadPlayer, class ATigerPlayer* InstigatorPlayer);
	void OnOverlapEnd(class AActor* OverlappedActor, class AActor* OtherActor);
	void OnOverlapBegin(class AActor* OverlappedActor, class AActor* OtherActor);
	void OnAssaultFinished();
	void Multicast_OnEnableCapturePoint();
	void Multicast_OnCurrentCaptureeChanged(class ATigerPlayer* Capturee, Tiger_ETigerCapturePointStatus Status, float AuthCurrentCaptureTime);
};

// Class Tiger.TigerHealingBuff
// 0x0010 (FullSize[0x0280] - InheritedSize[0x0270])
class UTigerHealingBuff : public UTigerBuff
{
public:
	float                                              FlatHealPerSecond;                                         // 0x0270(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              PercentageHealPerSecond;                                   // 0x0274(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      HealEffect;                                                // 0x0278(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerHealingBuff");
		return ptr;
	}



};

// Class Tiger.TigerHealingBuffInstance
// 0x0008 (FullSize[0x0090] - InheritedSize[0x0088])
class UTigerHealingBuffInstance : public UTigerBuffInstance
{
public:
	class UTigerHealingBuff*                           BuffConfig;                                                // 0x0088(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerHealingBuffInstance");
		return ptr;
	}



};

// Class Tiger.TigerHealthBarUI
// 0x0048 (FullSize[0x02A8] - InheritedSize[0x0260])
class UTigerHealthBarUI : public UUserWidget
{
public:
	struct FScriptMulticastDelegate                    OnHealthChanged;                                           // 0x0260(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	class ATigerCharacter*                             TigerCharacterOwner;                                       // 0x0270(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInstanceDynamic*                    HealthBarMaterial;                                         // 0x0278(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              LostHealthDelay;                                           // 0x0280(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              LostHealthBarSpeed;                                        // 0x0284(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              HealthAmountPerBar;                                        // 0x0288(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              WidthBetweenSegments;                                      // 0x028C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              LostHealthPercentage;                                      // 0x0290(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_3O4U[0x10];                                    // 0x0294(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              DefaultHealthAmount;                                       // 0x02A4(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerHealthBarUI");
		return ptr;
	}



	void TigerDelegateHealthChanged__DelegateSignature(float InNewHealthPercentage);
	void SetOwner(class ATigerCharacter* TigerCharacter);
	void OnSegmentEmptied(float HorizontalProgress);
	void OnHealthLost();
	float GetRecentDamageTaken();
	float GetNumberOfBars();
	float GetCurrentShield();
	float GetCurrentMaxHealth();
	float GetCurrentHealth();
};

// Class Tiger.TigerClientSeasonalRewardTier
// 0x0020 (FullSize[0x0048] - InheritedSize[0x0028])
class UTigerClientSeasonalRewardTier : public UObject
{
public:
	TArray<struct FTigerItemId>                        FreeRewardIds;                                             // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor, Transient, EditConst, NativeAccessSpecifierPublic)
	TArray<struct FTigerItemId>                        PremiumRewardIds;                                          // 0x0038(0x0010) (Edit, BlueprintVisible, ZeroConstructor, Transient, EditConst, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerClientSeasonalRewardTier");
		return ptr;
	}



	bool IsDoubleUISize();
};

// Class Tiger.TigerClientSeasonalRewardCollection
// 0x0018 (FullSize[0x0040] - InheritedSize[0x0028])
class UTigerClientSeasonalRewardCollection : public UObject
{
public:
	TArray<class UTigerClientSeasonalRewardTier*>      Tiers;                                                     // 0x0028(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, NativeAccessSpecifierPublic)
	int                                                BattlePassPrice;                                           // 0x0038(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_TVXR[0x4];                                     // 0x003C(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerClientSeasonalRewardCollection");
		return ptr;
	}



};

// Class Tiger.TigerUIColorSet
// 0x0240 (FullSize[0x0270] - InheritedSize[0x0030])
class UTigerUIColorSet : public UDataAsset
{
public:
	struct FLinearColor                                ColorArray[0x24];                                          // 0x0030(0x0240) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerUIColorSet");
		return ptr;
	}



	struct FLinearColor GetColor(Tiger_ETigerUIColor UIColor, Tiger_ETigerColourSpace ColourSpace);
};

// Class Tiger.TigerHUDSettings
// 0x0008 (FullSize[0x0040] - InheritedSize[0x0038])
class UTigerHUDSettings : public USharkLocalDeveloperSettings
{
public:
	Tiger_ETigerDamageNumberAmount                     DamageNumberAmountSetting;                                 // 0x0038(0x0001) (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_1ZLU[0x7];                                     // 0x0039(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerHUDSettings");
		return ptr;
	}



};

// Class Tiger.TigerImageUI
// 0x0000 (FullSize[0x0280] - InheritedSize[0x0280])
class UTigerImageUI : public UTigerWidget
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerImageUI");
		return ptr;
	}



	class UImage* GetImage();
};

// Class Tiger.TigerImpendingCollisionCalculator
// 0x0030 (FullSize[0x0058] - InheritedSize[0x0028])
class UTigerImpendingCollisionCalculator : public UObject
{
public:
	unsigned char                                      UnknownData_MYQL[0x30];                                    // 0x0028(0x0030) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerImpendingCollisionCalculator");
		return ptr;
	}



};

// Class Tiger.TigerIndoorComponent
// 0x0000 (FullSize[0x0480] - InheritedSize[0x0480])
class UTigerIndoorComponent : public UBoxComponent
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerIndoorComponent");
		return ptr;
	}



};

// Class Tiger.TigerIndoorVolume
// 0x0000 (FullSize[0x0260] - InheritedSize[0x0260])
class ATigerIndoorVolume : public ATriggerVolume
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerIndoorVolume");
		return ptr;
	}



};

// Class Tiger.TigerIngameMenuWidget
// 0x0038 (FullSize[0x02C8] - InheritedSize[0x0290])
class UTigerIngameMenuWidget : public UTigerMenuWidget
{
public:
	TArray<class UClass*>                              SubmenuClasses;                                            // 0x0290(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	TArray<class UTigerIngameSubmenuWidget*>           SubmenuWidgets;                                            // 0x02A0(0x0010) (BlueprintVisible, ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	int                                                ActiveMenuIndex;                                           // 0x02B0(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_9BKA[0x4];                                     // 0x02B4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UTigerIngameSubmenuWidget*                   SelectedMenu;                                              // 0x02B8(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bShouldShowPlayerCurrency;                                 // 0x02C0(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_X8EF[0x7];                                     // 0x02C1(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerIngameMenuWidget");
		return ptr;
	}



	void ToggleExistingSubmenu(class UClass* WidgetClass);
	void SelectMenuToTheRight();
	void SelectMenuToTheLeft();
	void SelectMenu(class UTigerIngameSubmenuWidget* NewSelectedMenu);
	void OnMenuSelected();
	void LocalPlayerSpawned();
	bool IsSubmenuSelected(class UClass* WidgetClass);
	bool IsSubmenuOpen(class UClass* WidgetClass);
	class UTigerIngameSubmenuWidget* GetSubmenuFromClass(class UClass* WidgetClass);
	void ConstructSubMenusIfNotConstructed();
};

// Class Tiger.TigerInputIcon
// 0x0000 (FullSize[0x0280] - InheritedSize[0x0280])
class UTigerInputIcon : public UTigerWidget
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerInputIcon");
		return ptr;
	}



	void SetIconFromKey(const struct FKey& Key);
};

// Class Tiger.TigerInputMenuUI
// 0x0000 (FullSize[0x02B8] - InheritedSize[0x02B8])
class UTigerInputMenuUI : public UTigerIngameSubmenuWidget
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerInputMenuUI");
		return ptr;
	}



	void ResetToDefault();
};

// Class Tiger.TigerInputPrompt
// 0x0068 (FullSize[0x02E8] - InheritedSize[0x0280])
class UTigerInputPrompt : public UTigerWidget
{
public:
	struct FText                                       PrefixText;                                                // 0x0280(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FText                                       PostfixText;                                               // 0x0298(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	bool                                               bUseKey;                                                   // 0x02B0(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bUseAction;                                                // 0x02B1(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_WC4T[0x2];                                     // 0x02B2(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FName                                       InputAction;                                               // 0x02B4(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       InputAxis;                                                 // 0x02BC(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_2TWZ[0x4];                                     // 0x02C4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FKey                                        InputKey;                                                  // 0x02C8(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bToggleVisibilityOnGamepadChanged;                         // 0x02E0(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_FBEZ[0x7];                                     // 0x02E1(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerInputPrompt");
		return ptr;
	}



	void UpdateProperties(const struct FText& NewPrefixText, const struct FText& NewPostfixText, bool bNewUseKey, const struct FName& NewInputAction, const struct FName& NewInputAxis, const struct FKey& NewInputKey);
	void UpdateInputKey(const struct FKey& NewInputKey);
	void UpdateInputAxis(const struct FName& NewInputAxis);
	void UpdateInputAction(const struct FName& NewInputAction);
	void UpdateIcon();
	void RegisterInputActionListener(const struct FScriptDelegate& Delegate);
};

// Class Tiger.TigerInteractionControllerComponent
// 0x0140 (FullSize[0x01F0] - InheritedSize[0x00B0])
class UTigerInteractionControllerComponent : public UActorComponent
{
public:
	struct FScriptMulticastDelegate                    OnTargetInteractionChanged;                                // 0x00B0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	float                                              DiablerizeDotProductCutOff;                                // 0x00C0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              HeldInputInteractionTime;                                  // 0x00C4(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              InteractionLineTraceLength;                                // 0x00C8(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              InteractionLineTraceThickness;                             // 0x00CC(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               AllowAutomaticPickUpBehindPlayer;                          // 0x00D0(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_J5VZ[0x3];                                     // 0x00D1(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              AutoPickUpCoolDown;                                        // 0x00D4(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                                     AutoPickUpBoxVolumeExtents;                                // 0x00D8(0x000C) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_XP83[0x4];                                     // 0x00E4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class ATigerPlayerController*                      TigerPC;                                                   // 0x00E8(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class ATigerPlayer*                                TigerPlayerPawn;                                           // 0x00F0(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_O2GL[0x10];                                    // 0x00F8(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TWeakObjectPtr<class ATigerCharacter>              TargetCharacter;                                           // 0x0108(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TWeakObjectPtr<class ATigerCharacter>              TrainerTarget;                                             // 0x0110(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TWeakObjectPtr<class ATigerItemWorldRepresentation> InteractionItem;                                           // 0x0118(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TWeakObjectPtr<class ATigerItemWorldRepresentation> LastAutoPickupItem;                                        // 0x0120(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TWeakObjectPtr<class ATigerInteractiveObject>      TargetInteractiveObject;                                   // 0x0128(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class ATigerBaseNPC*                               PotentialFeedingTarget;                                    // 0x0130(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_377U[0x10];                                    // 0x0138(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FOverlapResult>                      TriggerVolumeOverlaps;                                     // 0x0148(0x0010) (ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_AHRY[0x10];                                    // 0x0158(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FHitResult>                          InteractionSweepResults;                                   // 0x0168(0x0010) (ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_P4SB[0x10];                                    // 0x0178(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FHitResult>                          InteractionTraceResults;                                   // 0x0188(0x0010) (ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_TLCF[0x10];                                    // 0x0198(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FOverlapResult>                      AutoPickUpInteractionOverlaps;                             // 0x01A8(0x0010) (ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_LLG9[0x10];                                    // 0x01B8(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TWeakObjectPtr<class ATigerBaseNPC>                CachedVendor;                                              // 0x01C8(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_ABP7[0x20];                                    // 0x01D0(0x0020) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerInteractionControllerComponent");
		return ptr;
	}



	void StopVendorInteraction();
	void StopObjectInteraction();
	void Server_StopVendorInteraction();
	void Server_StopPhysicalInteraction(Tiger_ETargetInteraction InStoppedInteraction);
	void Server_StopObjectInteraction(class ATigerInteractiveObject* Target);
	void Server_StopJudgeFeed();
	void Server_StopFeeding();
	void Server_StartVendorInteraction(class ATigerBaseNPC* InInteractingCharacter);
	void Server_StartRevive(class ATigerPlayer* Target);
	void Server_StartObjectInteraction(class ATigerInteractiveObject* InTarget);
	void Server_StartJudgeFeed(class ATigerJudge* Target);
	void Server_StartFeeding(class ATigerBaseNPC* InTargetCharacter);
	void Server_StartDiablerize(class ATigerPlayer* Target);
	void OnInteractionChanged__DelegateSignature(Tiger_ETargetInteraction InInteraction);
	class ATigerCharacter* GetInteractionCharacter();
	Tiger_ETargetInteraction GetActiveOrTargetInteraction();
	void Client_InvalidateTimedObjectInteraction();
	void Client_FailedObjectInteraction(class ATigerInteractiveObject* InTarget);
};

// Class Tiger.TigerInteractiveCollectible
// 0x0020 (FullSize[0x02B0] - InheritedSize[0x0290])
class ATigerInteractiveCollectible : public ATigerClientInteractiveObject
{
public:
	class UTigerCollectibleData*                       Collectible;                                               // 0x0290(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMeshComponent*                        CollectibleMesh;                                           // 0x0298(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               CollectibleSoundEffect;                                    // 0x02A0(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystemComponent*                    CollectibleParticleSystem;                                 // 0x02A8(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerInteractiveCollectible");
		return ptr;
	}



};

// Class Tiger.TigerInteractiveGrimoireProp
// 0x0030 (FullSize[0x02B0] - InheritedSize[0x0280])
class ATigerInteractiveGrimoireProp : public ATigerInteractiveObject
{
public:
	class UStaticMeshComponent*                        ItemMesh;                                                  // 0x0280(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTigerGrimoireEntry*                         EntryToUnlock;                                             // 0x0288(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bDisableOnEntryUnlock;                                     // 0x0290(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_2CNT[0x7];                                     // 0x0291(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UClass*                                      GrimoireSubmenu;                                           // 0x0298(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      CustomStencilGroup;                                        // 0x02A0(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_ABJO[0xF];                                     // 0x02A1(0x000F) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerInteractiveGrimoireProp");
		return ptr;
	}



	void OpenGrimoire();
	void OnLanguageChanged();
	bool IsDeactivated();
	void DisableHighlight();
};

// Class Tiger.TigerInteractiveNpcComponent
// 0x00A8 (FullSize[0x0158] - InheritedSize[0x00B0])
class UTigerInteractiveNpcComponent : public UActorComponent
{
public:
	unsigned char                                      WidgetToSpawn[0x28];                                       // 0x00B0(0x0028) UNKNOWN PROPERTY: SoftClassProperty
	class UClass*                                      NpcSubmenu;                                                // 0x00D8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      OverheadWidget;                                            // 0x00E0(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	Tiger_ETigerVendorType                             InteractiveNpcType;                                        // 0x00E8(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_F2IP[0x7];                                     // 0x00E9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UTigerNpcDialogueList*                       DialogueList;                                              // 0x00F0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              DelayBetweenInteractions;                                  // 0x00F8(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_MTFM[0x4];                                     // 0x00FC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UTigerDialogueManager*                       DialogueManager;                                           // 0x0100(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FText                                       NpcName;                                                   // 0x0108(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	struct FText                                       NpcTitle;                                                  // 0x0120(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	class UTexture2D*                                  NpcIcon;                                                   // 0x0138(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTexture2D*                                  NpcBackground;                                             // 0x0140(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	Tiger_ETigerClan                                   NpcClan;                                                   // 0x0148(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_N3RC[0x3];                                     // 0x0149(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TWeakObjectPtr<class ACameraActor>                 ConnectedInteractionCamera;                                // 0x014C(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_WGL1[0x4];                                     // 0x0154(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerInteractiveNpcComponent");
		return ptr;
	}



	bool IsCorrectClanForInteraction(Tiger_ETigerClan Clan);
	class UTigerDialogueManager* GetDialogueManager();
	void AssignInteractionCameraToCameraActorOfName(const struct FString& CameraName);
};

// Class Tiger.TigerInteractiveQuestItem
// 0x0050 (FullSize[0x02E0] - InheritedSize[0x0290])
class ATigerInteractiveQuestItem : public ATigerClientInteractiveObject
{
public:
	class UStaticMeshComponent*                        QuestMesh;                                                 // 0x0290(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               QuestSoundEffect;                                          // 0x0298(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTigerGrimoireEntry*                         GrimoireEntryToUnlock;                                     // 0x02A0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_524H[0x30];                                    // 0x02A8(0x0030) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UParticleSystemComponent*                    QuestParticleSystem;                                       // 0x02D8(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerInteractiveQuestItem");
		return ptr;
	}



};

// Class Tiger.TigerEquippedModModifierValues
// 0x0058 (FullSize[0x0080] - InheritedSize[0x0028])
class UTigerEquippedModModifierValues : public UObject
{
public:
	class UTigerMaxIntAggregator*                      ExtendedMagazineLevel;                                     // 0x0028(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTigerFloatMultiplierAggregator*             ReloadSpeed;                                               // 0x0030(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTigerFloatMultiplierAggregator*             RecoilMultiplier;                                          // 0x0038(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTigerFloatMultiplierAggregator*             SpreadMultiplier;                                          // 0x0040(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTigerFloatMultiplierAggregator*             SwapSpeedMultiplier;                                       // 0x0048(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTigerFloatMultiplierAggregator*             SpreadDecreaseMultiplier;                                  // 0x0050(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTigerFloatMinAggregator*                    ModdedFOV;                                                 // 0x0058(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTigerFloatCurveMultiplierAggregator*        AimedSpreadMultiplier;                                     // 0x0060(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTigerBoolAnyAggregator*                     IsScoped;                                                  // 0x0068(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTigerBoolAnyAggregator*                     CanSwitchFireMode;                                         // 0x0070(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      CrossHairWidget;                                           // 0x0078(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerEquippedModModifierValues");
		return ptr;
	}



};

// Class Tiger.TigerInventoryComponent
// 0x0218 (FullSize[0x02C8] - InheritedSize[0x00B0])
class UTigerInventoryComponent : public UActorComponent
{
public:
	int                                                MaxItemsPerCategory;                                       // 0x00B0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                AmmoStackDistance;                                         // 0x00B4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                MaxConsumables;                                            // 0x00B8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FSharkRandomDeviation                       DropItemLaunchSpeed;                                       // 0x00BC(0x0008) (Edit, DisableEditOnInstance, NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      SlotColumnCount;                                           // 0x00C4(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_PESA[0x43];                                    // 0x00C5(0x0043) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class ATigerPlayer*                                Player;                                                    // 0x0108(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTigerItemAsset*                             UnarmedItemAsset;                                          // 0x0110(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FTigerInventoryWeapon                       Weapons[0x4];                                              // 0x0118(0x0020) (Edit, EditConst, NoDestructor, NativeAccessSpecifierPrivate)
	struct FTigerItemData                              Items[0xC];                                                // 0x0138(0x00C0) (Transient, NoDestructor, NativeAccessSpecifierPrivate)
	TArray<class UTigerAmmoAsset*>                     AmmoPickupItems;                                           // 0x01F8(0x0010) (ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	TArray<struct FTigerInventorySlotContent>          Slots;                                                     // 0x0208(0x0010) (ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_L71G[0xA0];                                    // 0x0218(0x00A0) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FTigerItemData                              Artifact;                                                  // 0x02B8(0x0010) (Transient, NoDestructor, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerInventoryComponent");
		return ptr;
	}



	void UnequipWeaponModForSlot(Tiger_ETigerWeaponSlot Slot, class UTigerItemAsset* ModItemAsset);
	class UTigerHuntingKnifeItemAsset* TryToGetHuntingKnifeAsset();
	void SwapRangedWeaponSlots();
	void SwapModWeapon(Tiger_ERangedWeaponModType InModType);
	void SetSwapOutDefaultWeaponOnPickup(bool bInSwapOutDefaultWeaponOnPickup);
	void Server_UnequipWeaponModForSlot(Tiger_ETigerWeaponSlot InSlot, class UTigerItemAsset* InModItemAsset);
	void Server_SwapRangedWeaponSlots();
	void Server_SwapModWeapon(Tiger_ERangedWeaponModType InModType);
	void Server_SetSwapOutDefaultWeaponOnPickup(bool bInSwapOutDefaultWeaponOnPickup);
	void Server_RemoveItem(class UTigerItemAsset* Item, bool bUpdateEquippedItem);
	void Server_EquipWeaponSlot(Tiger_ETigerWeaponSlot WeaponSlot);
	void Server_EquipWeaponMod(class UTigerRangedModItemAsset* InModItemAsset);
	void Server_DropWeapon(Tiger_ETigerWeaponSlot InWeaponSlot);
	void Server_DropItem(class UTigerItemAsset* Item, int DropCount, bool bUpdateEquippedItem);
	void RemoveItem(class UTigerItemAsset* Item, bool bUpdateEquippedItem);
	bool IsModSupportedForWeapon(class UTigerRangedModItemAsset* InModItemAsset, Tiger_ETigerWeaponSlot InWeaponSlot);
	bool IsCategoryFull(Tiger_ETigerInventoryItemType InventoryType);
	bool HasModEquippedOnWeapon(class UTigerRangedModItemAsset* InModItemAsset, Tiger_ETigerWeaponSlot InWeaponSlot);
	bool HasItemInCategory(Tiger_ETigerInventoryItemType InventoryType);
	bool HasItem(class UTigerItemAsset* InItem);
	class UTigerItemAsset* GetWeaponItemBySlot(Tiger_ETigerWeaponSlot Slot);
	void GetWeaponInfoForUnequippedModItem(class UTigerRangedModItemAsset* ModItemAsset, bool bIgnoreEquippedMod, struct FTigerInventoryWeapon* WeaponOut, struct FTigerModSlotInfo* ReplacesModOut);
	class UTigerWeapon* GetWeaponBySlot(Tiger_ETigerWeaponSlot WeaponSlot);
	void GetUsableModsForUnequippedWeaponItem(class UTigerItemAsset* InWeaponItem, TArray<struct FTigerModSlotInfo>* OutWeaponItemMods, bool* bOutHasAnyTransferableMods);
	Tiger_ETigerWeaponSlot GetSlotForUnequippedWeaponItem(class UTigerItemAsset* WeaponItem);
	struct FTigerInventorySlotContent GetSlotForPosition(int Column, int Row);
	Tiger_ETigerItemPickupInfo GetPickupInfo(class UTigerItemAsset* Item, int ItemCount, int* OutPickedUpItemCount);
	TArray<struct FTigerModSlotInfo> GetModsForSlot(Tiger_ETigerWeaponSlot InSlot);
	int GetItemCountByCategory(Tiger_ETigerInventoryItemType InventoryType);
	int GetItemCount(class UTigerItemAsset* InItemAsset);
	class UTigerItemAsset* GetItemByType(Tiger_ETigerInventoryItemType InventoryType);
	int GetInventoryAmmoByType(Tiger_ETigerWeaponAmmoType AmmoType);
	TArray<class UTigerItemAsset*> GetInventory();
	bool GetEquippedRangedWeaponAmmo(int* OutWeaponAmmo, int* OutInventoryAmmo);
	class UTigerItemAsset* GetArtifact();
	int GetAmmoInWeaponForSlot(Tiger_ETigerWeaponSlot Slot);
	class UTigerAmmoAsset* GetAmmoAssetOfSlot(Tiger_ETigerWeaponSlot Slot);
	class UTigerAmmoAsset* GetAmmoAssetFromAmmoType(Tiger_ETigerWeaponAmmoType AmmoType);
	void EquipWeaponMod(class UTigerRangedModItemAsset* ModItemAsset);
	void EquipItem(class UTigerItemAsset* Item);
	void DropWeapon(Tiger_ETigerWeaponSlot InWeaponSlot);
	void DropItem(class UTigerItemAsset* Item, bool bUpdateEquippedItem, int DropCount);
	void Client_UpdateWeaponModForSlot(Tiger_ETigerWeaponSlot Slot, class UTigerRangedModItemAsset* EquippedBarrelMod, class UTigerRangedModItemAsset* EquippedAmmoMod, class UTigerRangedModItemAsset* EquippedScopeMod, class UTigerRangedModItemAsset* EquippedStockMod, class UTigerRangedModItemAsset* EquippedSpecialMod);
	void Client_RevertSwapRangedWeaponSlots(class UTigerWeapon* InPrimaryWeapon);
	void Client_RemoveWeapon(Tiger_ETigerWeaponSlot WeaponSlot);
	void Client_RemoveFromInventory(class UTigerItemAsset* Item, int DropCount, bool bUpdateEquippedItem);
	void Client_AddToInventory(class UTigerItemAsset* InItem, int16_t InItemCount, bool bInNotifyPlayerOnNewItem, Tiger_ETigerTelemetryItemSourceID InItemSourceID);
};

// Class Tiger.TigerInventoryUI
// 0x0000 (FullSize[0x02B8] - InheritedSize[0x02B8])
class UTigerInventoryUI : public UTigerIngameSubmenuWidget
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerInventoryUI");
		return ptr;
	}



	void OnInventoryUpdatedBP();
};

// Class Tiger.TigerPlayerMasqueradeComponent
// 0x0098 (FullSize[0x0148] - InheritedSize[0x00B0])
class UTigerPlayerMasqueradeComponent : public UActorComponent
{
public:
	struct FScriptMulticastDelegate                    OnBloodHuntStateChanged;                                   // 0x00B0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnBloodHuntStateUpdated;                                   // 0x00C0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TArray<class UClass*>                              PossibleMasqueradeConsequences;                            // 0x00D0(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	TArray<class UTigerMasqueradeConsequenceSyncInstance*> SyncedMasqueradeConsequenceInstances;                      // 0x00E0(0x0010) (ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnMasqueradeConsequenceInstancedAdded;                     // 0x00F0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnMasqueradeConsequenceInstancedRemoved;                   // 0x0100(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_ZLN7[0x8];                                     // 0x0110(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class UTigerMasqueradeConsequence*>         ActiveConsequences;                                        // 0x0118(0x0010) (ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<struct FTigerConsequenceData>               ReplicatedConsequences;                                    // 0x0128(0x0010) (Net, ZeroConstructor, RepNotify, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_BKQW[0x10];                                    // 0x0138(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerPlayerMasqueradeComponent");
		return ptr;
	}



	void OnRep_ConsequenceData();
	void OnMasqueradePointsAdded__DelegateSignature();
	void Multicast_UpdateConsequences(TArray<struct FTigerConsequenceUpdateData> InUpdateData);
	void Multicast_RemoveConsequence(int InConsequenceId);
	void Multicast_AddConsequence(const struct FTigerConsequenceData& InMasqueradeConsequence);
	bool IsBloodHunted();
	class UTigerMasqueradeConsequenceSyncInstance* GetConsequenceInstance(class UClass* InInstanceClass);
	void Client_UpdateConsequenceLatestPlayerAction(int InConsequenceId, Tiger_ETigerAIPlayerAction InAction);
	void AddMasqueradePointsCausedByNpcReacting(class ATigerBaseNPC* InNpc, Tiger_ETigerAIPlayerAction InAction);
};

// Class Tiger.TigerMasqueradeActionMarker
// 0x0010 (FullSize[0x0238] - InheritedSize[0x0228])
class ATigerMasqueradeActionMarker : public AActor
{
public:
	unsigned char                                      UnknownData_UTPM[0x8];                                     // 0x0228(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               bOnlyVisibleInHeightenedSenses;                            // 0x0230(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_INMU[0x7];                                     // 0x0231(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerMasqueradeActionMarker");
		return ptr;
	}



};

// Class Tiger.TigerMasqueradeConsequenceActionWorldMaker
// 0x0008 (FullSize[0x0068] - InheritedSize[0x0060])
class UTigerMasqueradeConsequenceActionWorldMaker : public UTigerMasqueradeConsequence
{
public:
	class UClass*                                      MarkerClass;                                               // 0x0060(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerMasqueradeConsequenceActionWorldMaker");
		return ptr;
	}



};

// Class Tiger.TigerJudge
// 0x0090 (FullSize[0x0A30] - InheritedSize[0x09A0])
class ATigerJudge : public ATigerBaseNPC
{
public:
	class UTigerJudgeShieldComponent*                  JudgeShieldComponent;                                      // 0x09A0(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTigerJudgeSwordComponent*                   JudgeSwordComponent;                                       // 0x09A8(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      FeedEvent;                                                 // 0x09B0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTigerWorldMarkerComponent*                  WorldMarkerComponent;                                      // 0x09B8(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UClass*                                      CurrentJudgeState;                                         // 0x09C0(0x0008) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_3ZU9[0x8];                                     // 0x09C8(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class ATigerPlayer*                                FeedingPlayer;                                             // 0x09D0(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UClass*                                      HelicopterClass;                                           // 0x09D8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class ATigerEntityJudgeHelicopter>  Helicopter;                                                // 0x09E0(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FTigerJudgeRotationSettings                 CurrentRotationSettings;                                   // 0x09E8(0x0008) (BlueprintVisible, BlueprintReadOnly, Net, NoDestructor, Protected, NativeAccessSpecifierProtected)
	class ATigerPlayer*                                CurrentPrimaryTarget;                                      // 0x09F0(0x0008) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              DamageCauserCutoffDistanceSq;                              // 0x09F8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_US79[0x4];                                     // 0x09FC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FTigerTimedAnimationTriggerWrapper          AnimationTriggerWrapper;                                   // 0x0A00(0x0018) (NativeAccessSpecifierPrivate)
	TArray<struct FTigerJudgePlayerDamage>             PlayerDamageCollection;                                    // 0x0A18(0x0010) (ZeroConstructor, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_2V7Z[0x8];                                     // 0x0A28(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerJudge");
		return ptr;
	}



	class ATigerPlayer* SetPrimaryTarget(class ATigerPlayer* PrimaryTarget);
	void SetJudgeRotationSettings(const struct FTigerJudgeRotationSettings& RotationSettings);
	void OnRep_CurrentJudgeState(class UClass* OldState);
	void OnJudgeStateChanged(class UClass* OldState, class UClass* NewState);
	void Multicast_PlayTimedAnimationTriggers(TArray<struct FTigerTimedAnimationTrigger> AnimationTriggers);
	float GetDamageDoneByPlayer(class ATigerPlayer* Player);
};

// Class Tiger.TigerJudgeAnimInstance
// 0x0018 (FullSize[0x03D0] - InheritedSize[0x03B8])
class UTigerJudgeAnimInstance : public UTigerAnimInstance
{
public:
	class UClass*                                      CurrentJudgeState;                                         // 0x03B8(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UClass*                                      OldJudgeState;                                             // 0x03C0(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_Q5ZR[0x8];                                     // 0x03C8(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerJudgeAnimInstance");
		return ptr;
	}



	void OnJudgeStateChanged();
	class ATigerJudge* GetOwningJudge();
};

// Class Tiger.TigerLocalThrallData
// 0x0038 (FullSize[0x0060] - InheritedSize[0x0028])
class UTigerLocalThrallData : public UObject
{
public:
	class UTigerBaseThrallData*                        BaseData;                                                  // 0x0028(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FTigerPersistentThrallData                  PersistentData;                                            // 0x0030(0x0030) (NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerLocalThrallData");
		return ptr;
	}



	void SetStats(const struct FTigerThrallStats& InStats);
	void SetStat(Tiger_ETigerThrallStatId InType, int InValue);
	void RemoveAbility(Tiger_ETigerThrallAbilityId InAbility);
	bool HasAbility(Tiger_ETigerThrallAbilityId InAbility);
	struct FTigerThrallUpgradeScreenInformation GetUpgradeScreenInfo();
	struct FTigerThrallStats GetThrallStats();
	Tiger_ETigerThrallId GetThrallId();
	struct FTigerThrallStats GetMutableThrallStats();
	struct FTigerThrallDetailsScreenInformation GetDetailsScreenInfo();
	struct FTigerThrallCharacterCardInformation GetCharacterCardInfo();
	void DecreaseStatModifierTurnsByOne();
	struct FTigerThrallStats CalculateTrueStats();
	int CalculateTotalInjuryLevel();
	void AddStats(const struct FTigerThrallStats& InStatsToAdd);
	void AddStat(Tiger_ETigerThrallStatId InType, int InToAdd);
	void AddAbility(Tiger_ETigerThrallAbilityId InAbility);
};

// Class Tiger.TigerLocalThrallMissionData
// 0x0050 (FullSize[0x0078] - InheritedSize[0x0028])
class UTigerLocalThrallMissionData : public UObject
{
public:
	struct FScriptMulticastDelegate                    OnMissionProgression;                                      // 0x0028(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnMissionComplete;                                         // 0x0038(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UTigerThrallMission*                         BaseMissionData;                                           // 0x0048(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTigerThrallSystem*                          ThrallSystem;                                              // 0x0050(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FTigerPersistentMissionData                 PersistentMissionData;                                     // 0x0058(0x0020) (NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerLocalThrallMissionData");
		return ptr;
	}



	void OnMissionTurnProgression__DelegateSignature(class UTigerLocalThrallMissionData* LocalMissionData);
	void OnMissionComplete__DelegateSignature(class UTigerLocalThrallMissionData* LocalMissionData, Tiger_ETigerMissionSuccessRating SuccessRating);
	void IncrementMissionByOneTurn();
};

// Class Tiger.TigerLockOnCameraBehavior
// 0x0000 (FullSize[0x0128] - InheritedSize[0x0128])
class UTigerLockOnCameraBehavior : public UTigerActiveCameraBehavior
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerLockOnCameraBehavior");
		return ptr;
	}



};

// Class Tiger.TigerLoginQueueService
// 0x0098 (FullSize[0x00C0] - InheritedSize[0x0028])
class UTigerLoginQueueService : public UObject
{
public:
	unsigned char                                      UnknownData_NZ3C[0x98];                                    // 0x0028(0x0098) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerLoginQueueService");
		return ptr;
	}



};

// Class Tiger.TigerLootSpawner
// 0x0030 (FullSize[0x0258] - InheritedSize[0x0228])
class ATigerLootSpawner : public AActor
{
public:
	class UTigerItemLootTable*                         LootTable;                                                 // 0x0228(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      GameTypeFilter;                                            // 0x0230(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bShouldReceiveItemsFromLootLocation;                       // 0x0231(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_SSL5[0x6];                                     // 0x0232(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FTigerRandomizedLootResult>          AssignedLoot;                                              // 0x0238(0x0010) (ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	class USphereComponent*                            LootLocationCollider;                                      // 0x0248(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class ATigerLootLocation*                          AssignedLootLocation;                                      // 0x0250(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerLootSpawner");
		return ptr;
	}



	bool IsValidForCurrentGameType();
};

// Class Tiger.TigerLootBoxSpawner
// 0x0018 (FullSize[0x0270] - InheritedSize[0x0258])
class ATigerLootBoxSpawner : public ATigerLootSpawner
{
public:
	class UClass*                                      LootBoxClass;                                              // 0x0258(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                MinimumNumberOfItems;                                      // 0x0260(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                MaximumNumberOfItems;                                      // 0x0264(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_PINO[0x4];                                     // 0x0268(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	Tiger_ETigerTelemetryItemSourceID                  TelemetryIDSource;                                         // 0x026C(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_T7YC[0x3];                                     // 0x026D(0x0003) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerLootBoxSpawner");
		return ptr;
	}



};

// Class Tiger.TigerLootableVehicleDoorSpawner
// 0x0008 (FullSize[0x0278] - InheritedSize[0x0270])
class ATigerLootableVehicleDoorSpawner : public ATigerLootBoxSpawner
{
public:
	class ATigerVehicle*                               VehicleBody;                                               // 0x0270(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerLootableVehicleDoorSpawner");
		return ptr;
	}



};

// Class Tiger.TigerLootContainer
// 0x0018 (FullSize[0x0298] - InheritedSize[0x0280])
class ATigerLootContainer : public ATigerInteractiveObject
{
public:
	unsigned char                                      UnknownData_32O7[0x8];                                     // 0x0280(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               bDoorIsOpen;                                               // 0x0288(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_TKNF[0x7];                                     // 0x0289(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UTigerBlueprintLootComponent*                LootSpawnerComponent;                                      // 0x0290(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerLootContainer");
		return ptr;
	}



	void OnStoppedBeingClosestLootContainerInHeightenedSenses();
	void OnBecameClosestLootContainerInHeightenedSenses();
};

// Class Tiger.TigerLootDropComponent
// 0x0020 (FullSize[0x00D0] - InheritedSize[0x00B0])
class UTigerLootDropComponent : public UActorComponent
{
public:
	int                                                DropChance;                                                // 0x00B0(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_I2L8[0x4];                                     // 0x00B4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FTigerLootItemType>                  LootAssets;                                                // 0x00B8(0x0010) (Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	Tiger_ETigerTelemetryItemSourceID                  TelemetryIDSource;                                         // 0x00C8(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_ZMTH[0x7];                                     // 0x00C9(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerLootDropComponent");
		return ptr;
	}



};

// Class Tiger.TigerWeaponCrosshairWidget
// 0x0038 (FullSize[0x02B8] - InheritedSize[0x0280])
class UTigerWeaponCrosshairWidget : public UTigerWidget
{
public:
	float                                              WeaponSpread;                                              // 0x0280(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     PlayerMovementVelocity;                                    // 0x0284(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bIsAiming;                                                 // 0x0290(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_NTTC[0x3];                                     // 0x0291(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              PreviewWeaponSpread;                                       // 0x0294(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FTigerWeaponCrosshairSlot>           CrosshairImages;                                           // 0x0298(0x0010) (Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FTigerWeaponScalingCrosshairSlot>    CrosshairScalingImages;                                    // 0x02A8(0x0010) (Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerWeaponCrosshairWidget");
		return ptr;
	}



	void OnWeaponFired();
	float GetScreenSpaceSpread(float InFov);
};

// Class Tiger.TigerMeleeCrosshairWidget
// 0x0010 (FullSize[0x02C8] - InheritedSize[0x02B8])
class UTigerMeleeCrosshairWidget : public UTigerWeaponCrosshairWidget
{
public:
	class UTigerMeleeWeaponComponent*                  OwnerMelee;                                                // 0x02B8(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                      CrosshairImage;                                            // 0x02C0(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerMeleeCrosshairWidget");
		return ptr;
	}



};

// Class Tiger.TigerMeleeWeaponComponent
// 0x0218 (FullSize[0x02C8] - InheritedSize[0x00B0])
class UTigerMeleeWeaponComponent : public UActorComponent
{
public:
	struct FScriptMulticastDelegate                    OnAttack;                                                  // 0x00B0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnQuickAttack;                                             // 0x00C0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnAttackHit;                                               // 0x00D0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_HY9O[0x10];                                    // 0x00E0(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnSuccessfulBlock;                                         // 0x00F0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnHeavyAttackChargeBegin;                                  // 0x0100(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnHeavyAttackChargeEnd;                                    // 0x0110(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	float                                              DebugDrawTime;                                             // 0x0120(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_D56Z[0x24];                                    // 0x0124(0x0024) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UTigerSwingCollisionData*                    SwingCollisionData;                                        // 0x0148(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnHeavyAttackReachedMinimumCharge;                         // 0x0150(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnMeleeWeaponEquipped;                                     // 0x0160(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	bool                                               bHeavyAttackEnabled;                                       // 0x0170(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bBlockingEnabled;                                          // 0x0171(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bAttackingViaQuickAttackEnabled;                           // 0x0172(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FTigerMeleeWeaponAttackIdentifier           CurrentAttackIdentifier;                                   // 0x0173(0x0002) (BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_RFYG[0xB];                                     // 0x0175(0x000B) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UDataTable*                                  MeleeAttacksDatabase;                                      // 0x0180(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTigerMeleeWeapon*                           EquippedWeaponType;                                        // 0x0188(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTigerMeleeAimAssistBehavior*                CurrentAimAssistBehavior;                                  // 0x0190(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              BlockCooldown;                                             // 0x0198(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              MaxBlockAttackAngle;                                       // 0x019C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              AttackQueueCooldown;                                       // 0x01A0(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              AirAttackRequiredDistanceToGround;                         // 0x01A4(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              HitEffectRadiusOffset;                                     // 0x01A8(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              HitEffectHeightOffset;                                     // 0x01AC(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              RootMotionAnimationHeightThreshold;                        // 0x01B0(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_2WFC[0x4];                                     // 0x01B4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UClass*                                      BlockBuffOnAttacker;                                       // 0x01B8(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              DiminishingReturnCooldown;                                 // 0x01C0(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              DiminishingReturnMultiplierRegenerationRate;               // 0x01C4(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_X34G[0x38];                                    // 0x01C8(0x0038) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               bCanMoveDuringMeleeAttacks;                                // 0x0200(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_MSMF[0xF];                                     // 0x0201(0x000F) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class ATigerCharacter*>                     HitFeedbackTargets;                                        // 0x0210(0x0010) (ZeroConstructor, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_BR6X[0x68];                                    // 0x0220(0x0068) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class AActor*>                              HitCharactersOnCurrentSwing;                               // 0x0288(0x0010) (ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<class AActor*>                              HitWorldStaticsOnCurrentSwing;                             // 0x0298(0x0010) (ZeroConstructor, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_LXRP[0x8];                                     // 0x02A8(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UAnimMontage*                                CurrentSwingAnimation;                                     // 0x02B0(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AActor*                                      LockOnTarget;                                              // 0x02B8(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              MaxLockOnDistance;                                         // 0x02C0(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_P8QM[0x4];                                     // 0x02C4(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerMeleeWeaponComponent");
		return ptr;
	}



	void TigerOnMeleeWeaponEquipped__DelegateSignature();
	void TigerHeavyAttackChargeEnd__DelegateSignature();
	void TigerHeavyAttackChargeBegin__DelegateSignature();
	void TigerDelegateSwingState__DelegateSignature();
	void TigerDelegateSuccessfullyBlocked__DelegateSignature();
	void TigerDelegateQuickAttacked__DelegateSignature();
	void TigerDelegateHeavyAttackReachedMinimumCharge__DelegateSignature();
	void TigerDelegateAttackHit__DelegateSignature(Tiger_ETigerWeaponMeleeAttackType InAttackType);
	void TigerDelegateAttacked__DelegateSignature(bool bWasHeavyAttack);
	void Server_SwingWeapon(const struct FTigerMeleeAttackNetData& InAttackIdentifier, bool bInDisabledRootMotion);
	void Server_SetClientSideHitDetectionMelee(bool bEnableClientSideHits);
	void Server_OnSuccessfulClientAttack(TArray<struct FTigerCharacterClientHit> CharacterHits);
	void Server_OnDeflectedAttack(const struct FVector_NetQuantize& DeflectLocation, class ATigerCharacter* DeflectingChar);
	void Server_DisableRecoveryRootMotion(float InDisableTimeInAnimation);
	void OnMontageStartedDuringSwing(class UAnimMontage* Montage);
	void OnMontageStartedDuringBlockStance(class UAnimMontage* Montage);
	void Multicast_StopBlocking();
	void Multicast_StartHeavySwing(bool bDisabledRootMotion);
	void Multicast_StartBlocking();
	void Multicast_SetClientSideHitDetectionMelee(bool bEnableClientSideHits);
	void Multicast_OnSwingWeapon(const struct FTigerMeleeAttackNetData& AttackIdentifier, bool bDisabledRootMotion);
	void Multicast_OnAttackSuccessful(TArray<struct FTigerCharacterServerHit> InCharacterHits, Tiger_ETigerWeaponMeleeAttackType InAttackType);
	void Multicast_OnAttackBlocked();
	void Multicast_DisableRecoveryRootMotion();
	void Multicast_DeflectAttack(class ATigerCharacter* Attacker);
	void Multicast_AbortCurrentAttack();
	bool IsInMeleeSwing();
	bool IsChargingHeavyAttack();
	bool IsBlocking();
	bool HasLockOnTarget();
	float GetTimeSinceLastAttack();
	void Client_OnHit(const struct FTigerCharacterServerHit& ServerHit);
	void Client_OnAttackBlocked(const struct FVector_NetQuantize& BlockedAtLocation, class UTigerMeleeWeaponComponent* BlockingMelee);
	void Client_DeflectAttack();
	void Client_Debug_ShowServerSwingLocation(const struct FVector& Position, const struct FQuat& Rotation);
	void Client_AbortCurrentAttack();
	void BroadcastHeavyAttackReleaseCallback();
};

// Class Tiger.TigerSwingCollisionData
// 0x0050 (FullSize[0x0080] - InheritedSize[0x0030])
class UTigerSwingCollisionData : public UDataAsset
{
public:
	TMap<struct FName, struct FTigerSwingCollisionInfo> SwingCollisionInfos;                                       // 0x0030(0x0050) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerSwingCollisionData");
		return ptr;
	}



};

// Class Tiger.TigerMeleeAimAssistBehavior
// 0x0050 (FullSize[0x0078] - InheritedSize[0x0028])
class UTigerMeleeAimAssistBehavior : public UObject
{
public:
	float                                              AimAssistMinRadius;                                        // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              AimAssistMaxRadius;                                        // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaxTargetHeightDiff;                                       // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              DebugDrawTime;                                             // 0x0034(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bPredictCandidateLocationsBeforeEvaluation;                // 0x0038(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_C1A4[0x7];                                     // 0x0039(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class ATigerCharacter*                             TigerOwner;                                                // 0x0040(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTigerMeleeWeapon*                           EquippedWeapon;                                            // 0x0048(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                                     TigerOwnerLocation;                                        // 0x0050(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class ATigerCharacter>              FinalTargetCharacter;                                      // 0x005C(0x0008) (Edit, BlueprintVisible, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FTigerMeleeWeaponAttackIdentifier           FinalAttackIdentifier;                                     // 0x0064(0x0002) (Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_Z3SM[0x2];                                     // 0x0066(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              AimAssistMinRadiusSquared;                                 // 0x0068(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              AimAssistMaxRadiusSquared;                                 // 0x006C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              AimAssistTravelTime;                                       // 0x0070(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_Q1JH[0x4];                                     // 0x0074(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerMeleeAimAssistBehavior");
		return ptr;
	}



	void UpdateAimTarget(TArray<struct FTigerMeleeAimAssistCandidate>* InCandidates, const struct FVector& InCameraForward, bool bInIsInAir, bool bInIsQuickAttack, const struct FTigerMeleeWeaponAttackIdentifier& InPreviousAttackIdentifier, float InSecondsSincePreviousAttack, class ATigerCharacter** OutFinalTarget, struct FTigerMeleeWeaponAttackIdentifier* OutAttackIdentifier);
	void ShowDebugValue(struct FTigerMeleeAimAssistCandidate* Candidate, const struct FString& DebugLabel, const struct FString& DebugValue);
	void ShowDebugAttackIdentifier(struct FTigerMeleeAimAssistCandidate* Candidate, const struct FString& DebugLabel, const struct FTigerMeleeWeaponAttackIdentifier& AttackIdentifier);
	bool ShouldRotatePlayer();
	void PredictMultipleCharacterLocations(float PredictionTime, TArray<struct FTigerMeleeAimAssistCandidate>* Candidates);
	void PredictCharacterLocation(float PredictionTime, struct FTigerMeleeAimAssistCandidate* Candidate);
	struct FVector PredictAimAssistTargetLocation(class ATigerCharacter* AimTargetChar, float PredictionTime);
	void OnStartMeleeAttack(const struct FVector& InTargetLocationOrDirection, bool bIsLocation, const struct FTigerMeleeWeaponAttackIdentifier& InAttackIdentifier);
	void OnAnimNotifyMelee(const struct FName& MeleeEventName);
	void MoveCharacterToTargetLocation(const struct FVector& TargetLocation, float TravelTime);
	struct FTigerMeleeAimAssistData GetAimAssistData(const struct FTigerMeleeWeaponAttackIdentifier& AttackIdentifier);
	struct FTigerMeleeAimAssistCandidate CreateCandidate(class ATigerCharacter* AimTargetChar, const struct FVector& PredictedTargetLocation, const struct FVector& CameraForwardDirection, const struct FVector& CameraLocation, float HalfFOV);
	bool CanQueueMeleeAttack();
	void AddRelativeImpulse(const struct FVector& ImpulseDirection, float ImpulseStrength);
};

// Class Tiger.TigerSplatmapGenerationSettings
// 0x0020 (FullSize[0x0048] - InheritedSize[0x0028])
class UTigerSplatmapGenerationSettings : public UObject
{
public:
	float                                              CellBounds;                                                // 0x0028(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FIntPoint                                   CellCount;                                                 // 0x002C(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FIntPoint                                   CellTextureDimensions;                                     // 0x0034(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     CenterLocation;                                            // 0x003C(0x000C) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerSplatmapGenerationSettings");
		return ptr;
	}



};

// Class Tiger.TigerSplatmap
// 0x0068 (FullSize[0x0290] - InheritedSize[0x0228])
class ATigerSplatmap : public AActor
{
public:
	class UMaterialParameterCollection*                SplatmapParameterCollection;                               // 0x0228(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTextureRenderTarget2D*                      SplatTextureRenderTarget;                                  // 0x0230(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UMaterial*                                   SplatmapCellReadMaterial;                                  // 0x0238(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UMaterialInstanceDynamic*                    SplatmapCellReadMaterialInstance;                          // 0x0240(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              BoundsSize;                                                // 0x0248(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_21O1[0x4];                                     // 0x024C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UTigerSplatmapGenerationSettings*            CurrentGenerationSettings;                                 // 0x0250(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<TWeakObjectPtr<class ATigerSplatmapCell>>   SplatmapCells;                                             // 0x0258(0x0010) (Edit, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPrivate)
	class USceneComponent*                             Root;                                                      // 0x0268(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AActor*                                      CellOwner;                                                 // 0x0270(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              TickInterval;                                              // 0x0278(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              MinRerenderDistance;                                       // 0x027C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_LCRB[0x10];                                    // 0x0280(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerSplatmap");
		return ptr;
	}



};

// Class Tiger.TigerSplatmapCell
// 0x0018 (FullSize[0x0240] - InheritedSize[0x0228])
class ATigerSplatmapCell : public AActor
{
public:
	class UTexture2D*                                  TextureResource;                                           // 0x0228(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UMaterialInterface*                          DrawMaterial;                                              // 0x0230(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              BoundsSize;                                                // 0x0238(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_WA1N[0x4];                                     // 0x023C(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerSplatmapCell");
		return ptr;
	}



};

// Class Tiger.TigerSpotLight
// 0x0008 (FullSize[0x0240] - InheritedSize[0x0238])
class ATigerSpotLight : public ALight
{
public:
	class UTigerSpotLightComponent*                    SpotLightComponent;                                        // 0x0238(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerSpotLight");
		return ptr;
	}



};

// Class Tiger.TigerSpotLightComponent
// 0x0000 (FullSize[0x0370] - InheritedSize[0x0370])
class UTigerSpotLightComponent : public USpotLightComponent
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerSpotLightComponent");
		return ptr;
	}



};

// Class Tiger.TigerSpringArmComponent
// 0x00F0 (FullSize[0x0370] - InheritedSize[0x0280])
class UTigerSpringArmComponent : public USpringArmComponent
{
public:
	unsigned char                                      UnknownData_43DW[0x40];                                    // 0x0280(0x0040) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              HideCharacterBelowLength;                                  // 0x02C0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              SpringArmShortenSpeed;                                     // 0x02C4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              SpringArmLengthenSpeed;                                    // 0x02C8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              StepUpOffsetLerpSpeed;                                     // 0x02CC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_GW11[0x70];                                    // 0x02D0(0x0070) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<TWeakObjectPtr<class UStaticMeshComponent>> CurrentNearObjectFadeToggledObjects;                       // 0x0340(0x0010) (ExportObject, ZeroConstructor, ContainsInstancedReference, UObjectWrapper, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_7RB5[0x20];                                    // 0x0350(0x0020) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerSpringArmComponent");
		return ptr;
	}



	void SetCameraComponentPelvisOffset(const struct FVector& InOffset);
	void ResetAttachment();
	void AttachToOtherComponent(class USceneComponent* InAnotherComponent);
};

// Class Tiger.TigerSprintConfig
// 0x00F0 (FullSize[0x0118] - InheritedSize[0x0028])
class UTigerSprintConfig : public UObject
{
public:
	float                                              MinimumForwardInput;                                       // 0x0028(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_2PIH[0x4];                                     // 0x002C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              SprintDelay;                                               // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_Q49N[0x4];                                     // 0x0034(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UTigerCharacterMovementComponent*            MoveComp;                                                  // 0x0038(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_O4I6[0xC];                                     // 0x0040(0x000C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              LedgeGrabReductionMultiplier;                              // 0x004C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              MeleeAttackReductionMultiplier[0x8];                       // 0x0050(0x0020) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              DisciplineUseReductionMultiplier[0x20];                    // 0x0070(0x0080) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<float>                                      DodgeReductionMultiplier;                                  // 0x00F0(0x0010) (Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	float                                              JumpReductionMultiplier;                                   // 0x0100(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              DoubleJumpReductionMultiplier;                             // 0x0104(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              SprintBuildUpDecayDuration;                                // 0x0108(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              SprintBuildUpDecayDelay;                                   // 0x010C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCurveFloat*                                 SprintBuildUpCurve;                                        // 0x0110(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerSprintConfig");
		return ptr;
	}



	void OnSprintDelayCompleted(class ATigerPlayer* InPlayer);
};

// Class Tiger.TigerStaggerComponent
// 0x0018 (FullSize[0x00C8] - InheritedSize[0x00B0])
class UTigerStaggerComponent : public UActorComponent
{
public:
	class UAnimMontage*                                CurrentStaggerAnimation;                                   // 0x00B0(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_9VUL[0x10];                                    // 0x00B8(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerStaggerComponent");
		return ptr;
	}



};

// Class Tiger.TigerStaticMeshUserData
// 0x0008 (FullSize[0x0030] - InheritedSize[0x0028])
class UTigerStaticMeshUserData : public UAssetUserData
{
public:
	Tiger_ETigerStaticMeshType                         StaticMeshType;                                            // 0x0028(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bIsClimbable;                                              // 0x0029(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bIsWallJumpable;                                           // 0x002A(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bFadeWhenNearToCamera;                                     // 0x002B(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bForceHorizontalVelocityOnFallingImpact;                   // 0x002C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_15IH[0x3];                                     // 0x002D(0x0003) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerStaticMeshUserData");
		return ptr;
	}



};

// Class Tiger.TigerPiercingPhysicsAssetUserData
// 0x0010 (FullSize[0x0038] - InheritedSize[0x0028])
class UTigerPiercingPhysicsAssetUserData : public UAssetUserData
{
public:
	float                                              Mass;                                                      // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ForceAmount;                                               // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              AnglePitchLimit;                                           // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              AngleRollLimit;                                            // 0x0034(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerPiercingPhysicsAssetUserData");
		return ptr;
	}



};

// Class Tiger.TigerStoreEntryWidget
// 0x0050 (FullSize[0x02D0] - InheritedSize[0x0280])
class UTigerStoreEntryWidget : public UTigerWidget
{
public:
	struct FTigerMetaStoreEntry                        RepresentedStoreEntry;                                     // 0x0280(0x0050) (BlueprintVisible, Protected, ExposeOnSpawn, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerStoreEntryWidget");
		return ptr;
	}



	bool HasValidStoreEntry();
	void BuyStoreEntry(const struct FScriptDelegate& InOnBuyResponse, int InQuantity);
};

// Class Tiger.TigerStoreService
// 0x0018 (FullSize[0x0040] - InheritedSize[0x0028])
class UTigerStoreService : public UObject
{
public:
	unsigned char                                      UnknownData_5TPO[0x18];                                    // 0x0028(0x0018) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerStoreService");
		return ptr;
	}



};

// Class Tiger.TigerStreamingBenchmarkTraversalStrategy
// 0x0048 (FullSize[0x0070] - InheritedSize[0x0028])
class UTigerStreamingBenchmarkTraversalStrategy : public UObject
{
public:
	unsigned char                                      UnknownData_OZKH[0x48];                                    // 0x0028(0x0048) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerStreamingBenchmarkTraversalStrategy");
		return ptr;
	}



};

// Class Tiger.TigerStreamingBenchmarkTeleportStrategy
// 0x0000 (FullSize[0x0070] - InheritedSize[0x0070])
class UTigerStreamingBenchmarkTeleportStrategy : public UTigerStreamingBenchmarkTraversalStrategy
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerStreamingBenchmarkTeleportStrategy");
		return ptr;
	}



};

// Class Tiger.TigerStreamingBenchmarkFlyingStrategy
// 0x0020 (FullSize[0x0090] - InheritedSize[0x0070])
class UTigerStreamingBenchmarkFlyingStrategy : public UTigerStreamingBenchmarkTraversalStrategy
{
public:
	unsigned char                                      UnknownData_Q0V7[0x20];                                    // 0x0070(0x0020) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerStreamingBenchmarkFlyingStrategy");
		return ptr;
	}



};

// Class Tiger.TigerLootLocationConfiguration
// 0x0010 (FullSize[0x0040] - InheritedSize[0x0030])
class UTigerLootLocationConfiguration : public UDataAsset
{
public:
	TArray<struct FTigerLootLocationEntry>             LocationEntries;                                           // 0x0030(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerLootLocationConfiguration");
		return ptr;
	}



};

// Class Tiger.TigerLootLocation
// 0x0070 (FullSize[0x02D0] - InheritedSize[0x0260])
class ATigerLootLocation : public AVolume
{
public:
	class UTigerLootLocationConfiguration*             Configuration;                                             // 0x0260(0x0008) (Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FText                                       EnteringAreaMainText;                                      // 0x0268(0x0018) (Edit, DisableEditOnTemplate, NativeAccessSpecifierPrivate)
	struct FText                                       EnteringAreaSubText;                                       // 0x0280(0x0018) (Edit, DisableEditOnTemplate, NativeAccessSpecifierPrivate)
	class UTexture2D*                                  EnteringAreaTextBackground;                                // 0x0298(0x0008) (Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class ATigerLootSpawner*>                   OverlappingLootSpawners;                                   // 0x02A0(0x0010) (ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	TArray<class ATigerLootSpawner*>                   AlwaysOverlappingLootSpawner;                              // 0x02B0(0x0010) (ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	unsigned char                                      GameTypeFilter;                                            // 0x02C0(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_4923[0xB];                                     // 0x02C1(0x000B) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              EnteringPromptCooldown;                                    // 0x02CC(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerLootLocation");
		return ptr;
	}



	void OnEndOverlap(class AActor* InOverlappedActor, class AActor* InOtherActor);
	void OnBeginOverlap(class AActor* InOverlappedActor, class AActor* InOtherActor);
};

// Class Tiger.TigerItemLootTable
// 0x0090 (FullSize[0x00C0] - InheritedSize[0x0030])
class UTigerItemLootTable : public UDataAsset
{
public:
	TArray<struct FTigerItemLootEntry>                 Items;                                                     // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, SimpleDisplay, NativeAccessSpecifierPublic)
	TArray<struct FTigerSubItemLootTable>              SubLootTables;                                             // 0x0040(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, SimpleDisplay, NativeAccessSpecifierPublic)
	TMap<struct FTigerLootTableKey, struct FTigerGeneratedLootTable> GeneratedSubsets;                                          // 0x0050(0x0050) (Transient, Protected, NativeAccessSpecifierProtected)
	struct FTigerGeneratedLootTable                    EntireLootTable;                                           // 0x00A0(0x0018) (Transient, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_MJ3M[0x1];                                     // 0x00B8(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               bIsLootBuilt;                                              // 0x00B9(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_L226[0x6];                                     // 0x00BA(0x0006) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerItemLootTable");
		return ptr;
	}



	void DebugChances();
};

// Class Tiger.TigerMapGameData
// 0x0088 (FullSize[0x00B0] - InheritedSize[0x0028])
class UTigerMapGameData : public UObject
{
public:
	struct FScriptMulticastDelegate                    OnMapMarkerAdded;                                          // 0x0028(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnMapMarkerRemoved;                                        // 0x0038(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TArray<class UTigerMapMarkerProxy*>                MapMarkerProxies;                                          // 0x0048(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	class UTigerMapInfoDataAsset*                      MapInfoAsset;                                              // 0x0058(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_VNBO[0x50];                                    // 0x0060(0x0050) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerMapGameData");
		return ptr;
	}



	void SetCurrentMinimapSize(const struct FVector2D& InMinimapSize);
	void RemoveMapMarker(class UTigerMapMarkerProxy* Marker);
	bool HasAnyMapInfo();
	struct FVector2D GetPositionZeroToOne(const struct FVector2D& InPositionOnTexture);
	struct FVector2D GetPositionOnMap(const struct FVector& InLocation);
	struct FVector2D GetPositionInWorld(const struct FVector2D& MapPosition);
	struct FTigerMapInfo GetCurrentMapInfo();
	class UTigerMapMarkerProxy* AddMapMarkerBP(class UClass* MapMarker);
};

// Class Tiger.TigerMapIncenseLine
// 0x0020 (FullSize[0x0280] - InheritedSize[0x0260])
class UTigerMapIncenseLine : public UUserWidget
{
public:
	struct FName                                       LineLengthParam;                                           // 0x0260(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_WYUZ[0x18];                                    // 0x0268(0x0018) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerMapIncenseLine");
		return ptr;
	}



	void UpdateLinePosition(class UMaterialInstanceDynamic* InDynamicMaterial);
	void SetStartPos(const struct FVector2D& InPos);
	void SetEndPos(const struct FVector2D& InPos);
	void SetActualEndPos(float InLineLengthCutoff, float InInterpSpeed, float InDeltaTime);
	void ResetLinePosition(class UMaterialInstanceDynamic* InLineMaterial);
	struct FVector2D GetStartPos();
	struct FVector2D GetEndPos();
	void ExternalUpdateLinePosition();
	void ExternalResetLinePosition();
};

// Class Tiger.TigerMapInfoDataAsset
// 0x00D0 (FullSize[0x0100] - InheritedSize[0x0030])
class UTigerMapInfoDataAsset : public UDataAsset
{
public:
	TArray<struct FTigerMapInfo>                       MapInfoList;                                               // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FTigerMapInfo                               DefaultMapInfo;                                            // 0x0040(0x00B8) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class UClass*                                      PointOfInterestWidgetType;                                 // 0x00F8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerMapInfoDataAsset");
		return ptr;
	}



};

// Class Tiger.TigerMapMarkerOverlay
// 0x0008 (FullSize[0x0288] - InheritedSize[0x0280])
class UTigerMapMarkerOverlay : public UTigerWidget
{
public:
	unsigned char                                      UnknownData_4XJN[0x8];                                     // 0x0280(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerMapMarkerOverlay");
		return ptr;
	}



	void SetPlayerMarkerWidget(class UTigerPlayerMarkerWidget* InPlayerMarkerWidget);
	class UTigerPlayerMarkerWidget* GetPlayerMarkerWidget();
};

// Class Tiger.TigerMapSubMenu
// 0x0000 (FullSize[0x02B8] - InheritedSize[0x02B8])
class UTigerMapSubMenu : public UTigerIngameSubmenuWidget
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerMapSubMenu");
		return ptr;
	}



	void ShowMatchTimer();
};

// Class Tiger.TigerMapUi
// 0x0020 (FullSize[0x02A0] - InheritedSize[0x0280])
class UTigerMapUi : public UTigerWidget
{
public:
	struct FName                                       GasOverlayWorldTimeSeconds;                                // 0x0280(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       GasOverlayWaveRevealTime;                                  // 0x0288(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_CFP0[0x10];                                    // 0x0290(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerMapUi");
		return ptr;
	}



	void UpdateMapIncenseLine(class UTigerMapIncenseLine* InMapIncenceLineWidget, class UCanvasPanel* InMapCanvas, class UTigerMapMarkerOverlay* InMapMarkerOverlay);
	void UpdateGasOverlayAndInsenceLine(class UImage* InGasOverlayImage, class UTigerMapIncenseLine* InMapIncenceLineWidget, class UCanvasPanel* InMapCanvas, class UTigerMapMarkerOverlay* InMapMarkerOverlay);
	void SetupMasqueradeComponentAndDelegate();
	void OnMasqueradeStateChanged(bool InIsMasqueradeBreached, Tiger_ETigerAIPlayerAction InPlayerAction);
	struct FTigerMapInfo GetMapInfo();
};

// Class Tiger.TigerMasqueradeActionResponse
// 0x0018 (FullSize[0x0040] - InheritedSize[0x0028])
class UTigerMasqueradeActionResponse : public UObject
{
public:
	float                                              MinFearScaleDistance;                                      // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              MinFearScaleValue;                                         // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              MinMasqueradeScaleDistance;                                // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              MinMasqueradeScaleValue;                                   // 0x0034(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bIsDummy;                                                  // 0x0038(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_6U3W[0x7];                                     // 0x0039(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerMasqueradeActionResponse");
		return ptr;
	}



	Tiger_ETigerAIMasqueradeState OnReactToPlayerAction(class ATigerAIController* TigerAIController, class ATigerPlayer* TigerPlayer, const struct FTigerAIPlayerAction& PlayerAction, Tiger_ETigerAIMasqueradeState CurrentState, float* FearValue);
	void OnJudgeReaction(class ATigerAiJudgeController* JudgeAIC, class ATigerPlayer* Player, const struct FTigerAIPlayerAction& PlayerAction);
	bool IsActionDisciplineRelated(Tiger_ETigerAIPlayerAction Action);
	float GetPlayerMasqueradePointsForAction(class ATigerNPC* InNpc, class ATigerPlayer* InTigerPlayer, const struct FTigerAIPlayerAction& InPlayerAction);
};

// Class Tiger.TigerMasqueradeCoordinator
// 0x0010 (FullSize[0x00C0] - InheritedSize[0x00B0])
class UTigerMasqueradeCoordinator : public UActorComponent
{
public:
	unsigned char                                      UnknownData_70SY[0x10];                                    // 0x00B0(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerMasqueradeCoordinator");
		return ptr;
	}



};

// Class Tiger.TigerMasqueradeMarker
// 0x0008 (FullSize[0x02B8] - InheritedSize[0x02B0])
class UTigerMasqueradeMarker : public UTigerMapMarkerWidget
{
public:
	float                                              MarkerRadius;                                              // 0x02B0(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_1Y60[0x4];                                     // 0x02B4(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerMasqueradeMarker");
		return ptr;
	}



	void EventScaleToCurrentMap();
};

// Class Tiger.TigerMasqueradeMarkerProxy
// 0x0008 (FullSize[0x0070] - InheritedSize[0x0068])
class UTigerMasqueradeMarkerProxy : public UTigerMapMarkerProxy
{
public:
	bool                                               bIsMarkingFriendlyOrLocalPlayer;                           // 0x0068(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_2UIV[0x3];                                     // 0x0069(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              MarkerRadius;                                              // 0x006C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerMasqueradeMarkerProxy");
		return ptr;
	}



};

// Class Tiger.TigerResourceBarUI
// 0x00C0 (FullSize[0x0340] - InheritedSize[0x0280])
class UTigerResourceBarUI : public UTigerWidget
{
public:
	struct FScriptMulticastDelegate                    OnHealthChanged;                                           // 0x0280(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	class ATigerCharacter*                             TigerCharacterOwner;                                       // 0x0290(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UTigerResourceBarSegmentUI*>          HealthBarSegments;                                         // 0x0298(0x0010) (BlueprintVisible, ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	struct FLinearColor                                FilledColor;                                               // 0x02A8(0x0010) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                                EmptyColor;                                                // 0x02B8(0x0010) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                                LockedColor;                                               // 0x02C8(0x0010) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                NumberOfSegments;                                          // 0x02D8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bShouldShowLostHealth;                                     // 0x02DC(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_RK2L[0x3];                                     // 0x02DD(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              LostHealthDelay;                                           // 0x02E0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              LostHealthBarSpeed;                                        // 0x02E4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              LostHealthPercentage;                                      // 0x02E8(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bShouldShowGainedResources;                                // 0x02EC(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_FD1Y[0x3];                                     // 0x02ED(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              GainedResourceDelay;                                       // 0x02F0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              GainedResourceBarSpeed;                                    // 0x02F4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              GainedResourcePercentage;                                  // 0x02F8(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              TheoreticalMaxResources;                                   // 0x02FC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              WidthBetweenSegments;                                      // 0x0300(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_97Y6[0x3C];                                    // 0x0304(0x003C) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerResourceBarUI");
		return ptr;
	}



	void TigerDelegateHealthChanged__DelegateSignature(float InNewHealth, float InNewHealthPercentage);
	void SetOwner(class ATigerCharacter* TigerCharacter);
	void ResetCurrentResourceNameIndex();
	void OnSegmentFilled(float InProgress);
	void OnSegmentEmptied(float HorizontalProgress);
	void OnHealthLost();
	float GetRecentResourcesLost();
	float GetMaxResources();
	struct FLinearColor GetLockedColor();
	struct FLinearColor GetFilledColor();
	struct FLinearColor GetEmptyColor();
	float GetCurrentResources();
};

// Class Tiger.TigerMasqueradeStatusWidget
// 0x0008 (FullSize[0x0348] - InheritedSize[0x0340])
class UTigerMasqueradeStatusWidget : public UTigerResourceBarUI
{
public:
	unsigned char                                      PlayerVisibilityToNPC;                                     // 0x0340(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bIsHunted;                                                 // 0x0341(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_79GM[0x6];                                     // 0x0342(0x0006) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerMasqueradeStatusWidget");
		return ptr;
	}



	void OnNpcLostSightOfPlayer(class ATigerBaseNPC* InNpc);
	void OnNpcGainedSightOfPlayer(class ATigerBaseNPC* InNpc);
	void OnMasqueradeRestored();
	void OnMasqueradeBreached();
	void AddNpcDirectionalIndicator(class ATigerBaseNPC* InNpc);
};

// Class Tiger.TigerMatchGameMode
// 0x01E8 (FullSize[0x06A0] - InheritedSize[0x04B8])
class ATigerMatchGameMode : public ATigerGameMode
{
public:
	struct FScriptMulticastDelegate                    OnPlayerDeathEvent;                                        // 0x04B8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_ZC19[0x40];                                    // 0x04C8(0x0040) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UTigerSHPBCoordinator*                       SHPBCoordinator;                                           // 0x0508(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTigerHeatmapCollector*                      HeatmapCollector;                                          // 0x0510(0x0008) (Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FTigerReadyToPlayState>              ReadyToPlayStates;                                         // 0x0518(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_1MTD[0x38];                                    // 0x0528(0x0038) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UTigerMatchStateComponent*                   MatchStateManager;                                         // 0x0560(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class ATigerHaven*>                         AllHavens;                                                 // 0x0568(0x0010) (ZeroConstructor, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_HAQ3[0x128];                                   // 0x0578(0x0128) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerMatchGameMode");
		return ptr;
	}



	void StartReturnToElysiumSequence(class ATigerPlayerController* PlayerController);
	void ShowEndScreenOnClients();
	void ShowDeathScreenOnClient(class ATigerPlayerController* InTigerPlayerController, const struct FString& InInstigatorName, Tiger_ETigerKillerType InKillerType);
	void ReportMatchResults(const struct FScriptDelegate& Delegate);
	void PlayerLeavingMatch(class ATigerPlayerController* InTigerPlayerController);
	void OnRegisterPlayerPlacement__DelegateSignature(class ATigerPlayerState* InPlayerState);
	void OnPlayerDeathEvent__DelegateSignature(class ATigerPlayer* DeadPlayer, class ATigerPlayer* InstigatorPlayer);
	void OnMatchStatsReceivedDelegate__DelegateSignature();
	void OnBalanceModeSet();
	class ATigerPlayer* GetWinningPlayer();
	struct FTigerMatchStats GenerateMatchStatsForPlayer(class ATigerPlayerController* Player);
};

// Class Tiger.TigerMatchGameModeSettings
// 0x0190 (FullSize[0x01C8] - InheritedSize[0x0038])
class UTigerMatchGameModeSettings : public USharkLocalDeveloperSettings
{
public:
	unsigned char                                      RangedWeaponsDatatable[0x28];                              // 0x0038(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	unsigned char                                      BloodTrackPassiveList[0x28];                               // 0x0060(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	float                                              HighPotenceBloodTransferTime;                              // 0x0088(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                SpawnCountdownTime;                                        // 0x008C(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                MatchStartTimeOutSeconds;                                  // 0x0090(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                PlayerConnectionTimeOutSeconds;                            // 0x0094(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                PlayerConnectionMinimumWaitTimeSeconds;                    // 0x0098(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                SecondsOfNetworkInactivityAllowedBeforeForcingReady;       // 0x009C(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                MinPlayersToStartMatch;                                    // 0x00A0(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bEnableSpawnCountdown;                                     // 0x00A4(0x0001) (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bEnableWinningCondition;                                   // 0x00A5(0x0001) (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bRespawnPlayerOnDeath;                                     // 0x00A6(0x0001) (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bReturnPlayersToElysiumOnFinish;                           // 0x00A7(0x0001) (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bRebootServerOnFinish;                                     // 0x00A8(0x0001) (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bEnableAssaults;                                           // 0x00A9(0x0001) (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bEnableGroupFill;                                          // 0x00AA(0x0001) (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bLogTickRate;                                              // 0x00AB(0x0001) (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bAutoSpectateOnDeath;                                      // 0x00AC(0x0001) (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bAllowSpectateNonTeamMembersInGroupMode;                   // 0x00AD(0x0001) (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_DZCX[0x2];                                     // 0x00AE(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FTigerEntityCheckpointsSettings             EntityCheckpointsSettings[0x2];                            // 0x00B0(0x0020) (Edit, Config, NoDestructor, NativeAccessSpecifierPublic)
	struct FTigerRatSpawnpointSettings                 RatSpawnpointSettings[0x2];                                // 0x00D0(0x0010) (Edit, Config, NoDestructor, NativeAccessSpecifierPublic)
	struct FTigerSHPBSettings                          SHPBSettings[0x2];                                         // 0x00E0(0x0038) (Edit, Config, NoDestructor, NativeAccessSpecifierPublic)
	struct FTigerHavenCapturePointSettings             CapturePointSettings[0x2];                                 // 0x0118(0x0040) (Edit, Config, NoDestructor, NativeAccessSpecifierPublic)
	struct FTigerBattleRoyalePlayerSpawnSettings       BattleRoyalePlayerSpawnSettings;                           // 0x0158(0x0008) (Edit, Config, NoDestructor, NativeAccessSpecifierPublic)
	struct FTigerPreSpawnSettings                      PreSpawnSettings;                                          // 0x0160(0x0028) (Edit, Config, NoDestructor, NativeAccessSpecifierPublic)
	struct FTigerHighTierLootSettings                  HighTierLootSettings;                                      // 0x0188(0x0030) (Edit, Config, NativeAccessSpecifierPublic)
	float                                              DownedRegenDuration[0x2];                                  // 0x01B8(0x0008) (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                AssistDamageTreshold;                                      // 0x01C0(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              AssistDuration;                                            // 0x01C4(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerMatchGameModeSettings");
		return ptr;
	}



	bool STATIC_ShouldReturnPlayersToElysiumOnFinish();
	bool STATIC_ShouldRebootServerOnFinish();
	struct FTigerSHPBSettings STATIC_GetSHPBSettings(Tiger_EMatchBalanceMode BalanceMode);
	struct FTigerRatSpawnpointSettings STATIC_GetRatSpawnpointSettings(Tiger_EMatchBalanceMode BalanceMode);
	class UDataTable* STATIC_GetRangedWeaponsDatatable();
	struct FTigerPreSpawnSettings STATIC_GetPreSpawnSettings();
	struct FTigerEntityCheckpointsSettings STATIC_GetEntityCheckpointSettings(Tiger_EMatchBalanceMode BalanceMode);
	float STATIC_GetDownedRegenDuration(Tiger_EMatchBalanceMode InBalanceMode);
	struct FTigerHavenCapturePointSettings STATIC_GetCapturePointSettings(Tiger_EMatchBalanceMode BalanceMode);
	struct FTigerBattleRoyalePlayerSpawnSettings STATIC_GetBattleRoyalePlayerSpawnSettings();
};

// Class Tiger.TigerMatchGameSession
// 0x0000 (FullSize[0x0298] - InheritedSize[0x0298])
class ATigerMatchGameSession : public ATigerGameSession
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerMatchGameSession");
		return ptr;
	}



};

// Class Tiger.TigerMatchGameState
// 0x00F8 (FullSize[0x0418] - InheritedSize[0x0320])
class ATigerMatchGameState : public ATigerGameState
{
public:
	struct FScriptMulticastDelegate                    OnPreMatchStateChanged;                                    // 0x0320(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnMatchStateChanged;                                       // 0x0330(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnNumberOfPlayersAttachedToBloodVeinUpdated;               // 0x0340(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    HighTierLootLocationsChanged;                              // 0x0350(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	float                                              NextWaveRevealGameTime;                                    // 0x0360(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              MatchTimePassed;                                           // 0x0364(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              ReplicatedMatchTimePassed;                                 // 0x0368(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                NumPlayersAlive;                                           // 0x036C(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                NumGroupsAlive;                                            // 0x0370(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                GroupSize;                                                 // 0x0374(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                NumPlayersConnected;                                       // 0x0378(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                RandomizedWeatherValue;                                    // 0x037C(0x0004) (BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FTigerPreMatchStateInfo                     PreMatchState;                                             // 0x0380(0x0008) (BlueprintVisible, BlueprintReadOnly, Net, NoDestructor, Protected, NativeAccessSpecifierProtected)
	Tiger_ETigerMatchState                             TigerMatchState;                                           // 0x0388(0x0001) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	Tiger_EMatchBalanceMode                            BalanceMode;                                               // 0x0389(0x0001) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_E3O1[0x6];                                     // 0x038A(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UClass*                                      EntityCheckpointMarkerClass;                               // 0x0390(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      NumberOfPawnsAttachedToBloodVein;                          // 0x0398(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_LYPW[0x7];                                     // 0x0399(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnSpawnMechanicReceived;                                   // 0x03A0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	class UClass*                                      SpawnMechanicClass;                                        // 0x03B0(0x0008) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      ActiveHighTierLootGroups[0x10];                            // 0x03B8(0x0010) UNKNOWN PROPERTY: ArrayProperty
	struct FText                                       JudgeSlainText;                                            // 0x03C8(0x0018) (Edit, Protected, NativeAccessSpecifierProtected)
	TArray<struct FVector2D>                           EntityCheckpointLocations;                                 // 0x03E0(0x0010) (Net, ZeroConstructor, RepNotify, NativeAccessSpecifierPrivate)
	TArray<class ATigerWorldMarker*>                   EntityCheckpointMarkers;                                   // 0x03F0(0x0010) (ZeroConstructor, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_0KO2[0x18];                                    // 0x0400(0x0018) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerMatchGameState");
		return ptr;
	}



	void TigerOnSpawnMechanicReceived__DelegateSignature();
	void SetMatchState(Tiger_ETigerMatchState MatchState);
	void OnRep_TigerMatchState(Tiger_ETigerMatchState OldMatchState);
	void OnRep_TigerBalanceMode(Tiger_EMatchBalanceMode InOldBalanceMode);
	void OnRep_SpawnMechanicClass();
	void OnRep_EntityCheckpointLocations();
	void OnRep_BloodVeinAttachedPlayers();
	void OnPreMatchStateChanged__DelegateSignature(const struct FTigerPreMatchStateInfo& PreMatchState);
	void OnNumberOfPlayersAttachedToBloodVeinUpdated__DelegateSignature(int NumberOfPlayersAttached);
	void OnMatchStateChanged__DelegateSignature(Tiger_ETigerMatchState OldState, Tiger_ETigerMatchState NewState);
	void OnHighTierLootLocationsChanged__DelegateSignature();
	void Multicast_UpdatePreMatchState(const struct FTigerPreMatchStateInfo& NewPreMatchState);
	void Multicast_SetEnitityCheckpointLocations(TArray<struct FVector2D> CheckpointLocations);
	void Multicast_SetBloodVeinSpeedMultipliers(float InMainBranchSpeed, float InBranchSpeed);
	void Multicast_JudgeSpawned();
	void Multicast_JudgeSlain(class APlayerState* InInstigatorPlayer);
	void HandleOnRestartPlayer(class AController* NewPlayer);
	Tiger_ETigerMatchState GetMatchState();
	bool GetClosestLocationOnNextWaveWall(const struct FVector2D& Location, struct FVector2D* ClosestLocation, bool* bIsOutsidePlayableArea);
	void Client_ChangeNumPlayersAlive(int NewNumPlayersAlive, int NewNumPlayersConnected);
};

// Class Tiger.TigerMatchHUD
// 0x0140 (FullSize[0x0538] - InheritedSize[0x03F8])
class ATigerMatchHUD : public ATigerHUD
{
public:
	class UTigerPromptCollectionWidget*                PromptCollection;                                          // 0x03F8(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ATigerMusicManager*                          MusicManager;                                              // 0x0400(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTigerCompassUI*                             CompassUI;                                                 // 0x0408(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTigerMasqueradeStatusWidget*                MasqueradeStatus;                                          // 0x0410(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTigerWidget*                                ChallengeList;                                             // 0x0418(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTigerWidget*                                BloodResonanceUi;                                          // 0x0420(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTigerRevivingStatusUI*                      RevivingStatusUI;                                          // 0x0428(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTigerConsumableWheelWidget*                 ConsumableWheel;                                           // 0x0430(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTigerWidget*                                ClimbPrompt;                                               // 0x0438(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTigerWidget*                                LevelOverlay;                                              // 0x0440(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTigerWidget*                                YouAreDownedPrompt;                                        // 0x0448(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTigerWidget*                                Minimap;                                                   // 0x0450(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTigerWidget*                                StatusMessage;                                             // 0x0458(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTigerWidget*                                InputTray;                                                 // 0x0460(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTigerIngameMenuWidget*                      SpectatorIngameMenu;                                       // 0x0468(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnDropItemAction;                                          // 0x0470(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UTigerDisciplinesUi*                         Disciplines;                                               // 0x0480(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTigerCapturePointProgressUI*                CapturePointProgressUI;                                    // 0x0488(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTigerWeaponAmmoWidget*                      WeaponAmmo;                                                // 0x0490(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTigerPingWheelWidget*                       PingWheelWidget;                                           // 0x0498(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTigerWidget*                                Watermark;                                                 // 0x04A0(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTigerSpawnPointSelectionUi*                 SpawnSelectionUi;                                          // 0x04A8(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTigerArchetypeSelectPragueUI*               ArchetypeSelectUi;                                         // 0x04B0(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTigerWidget*                                PreMatchMapWidget;                                         // 0x04B8(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTigerPingSetupAsset*                        PingSetup;                                                 // 0x04C0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      DeathScreenClass;                                          // 0x04C8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTigerDeathScreen*                           DeathScreen;                                               // 0x04D0(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTigerInventoryUI*                           InventoryUi;                                               // 0x04D8(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTigerMapSubMenu*                            MapUi;                                                     // 0x04E0(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTigerInputMenuUI*                           SettingsMenuUi;                                            // 0x04E8(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTigerWidget*                                HealthBar;                                                 // 0x04F0(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      PreMatchUiClasses[0x10];                                   // 0x04F8(0x0010) UNKNOWN PROPERTY: ArrayProperty
	unsigned char                                      UnknownData_WAKH[0x10];                                    // 0x0508(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class UTigerWidget*>                        PreMatchWidgets;                                           // 0x0518(0x0010) (ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	class UTigerPreMatchPaperDollComponent*            PreMatchPaperDollComponent;                                // 0x0528(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_0EMH[0x8];                                     // 0x0530(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerMatchHUD");
		return ptr;
	}



	void ToggleSpectatorMap();
	void ToggleSettingsMenu();
	void ToggleMap();
	void ToggleInventory();
	void ToggleInputMenu();
	void ToggleCharacterMenu();
	void ShowIntroPrompt(float InDelayAfterMatchStart);
	void ShowInteractionPrompt(class UTigerSimpleTextPrompt* Prompt);
	void ShowDeathScreen(int InPlayerPlacement, int InNumGroupsAtStart, const struct FString& InInstigatorName, Tiger_ETigerKillerType InKillerType, bool bInReturnToElysiumOnClose);
	void ReleasePreMatchAssets();
	void RaiseOnDropItemAction();
	void PreparePreMatchMapForMatchStart(float InMatchStartTimeStamp);
	void PreMatchStateChanged(const struct FTigerPreMatchStateInfo& InNewPreMatchState);
	void OpenPreMatchMap(float InPreMatchMapEndTimeStamp);
	void OpenDeathScreen();
	void OnTookDamage(const struct FTigerDamageSource& DamageSource);
	void OnStartMatchAssetsLoaded();
	void OnPreMatchWidgetClassesLoaded();
	void OnPersistentPlayerStateInitialized(class ATigerPlayerController* InPlayerController);
	void OnEndedSpectator();
	void OnBecameSpectator();
	bool IsPreSpawnBackgroundOpen();
	bool IsPreMatchAssetsLoaded();
	bool IsAllowedToOpenMainMenu();
	void HideInteractionPrompt(class UTigerSimpleTextPrompt* Prompt);
	class UTigerWidget* GetPreSpawnWidget(class UClass* InCppClass);
	class UTigerMapSubMenu* GetMapUi();
	class UTigerInventoryUI* GetInventoryUI();
	void EndPreMatch();
	void CloseDeathScreen();
};

// Class Tiger.TigerMatchStateComponent
// 0x0050 (FullSize[0x0100] - InheritedSize[0x00B0])
class UTigerMatchStateComponent : public UActorComponent
{
public:
	class ATigerMatchGameMode*                         MatchGameMode;                                             // 0x00B0(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class ATigerMatchGameState*                        MatchGameState;                                            // 0x00B8(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_JOWO[0x40];                                    // 0x00C0(0x0040) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerMatchStateComponent");
		return ptr;
	}



};

// Class Tiger.TigerPreMatchPaperDollComponent
// 0x00A0 (FullSize[0x0150] - InheritedSize[0x00B0])
class UTigerPreMatchPaperDollComponent : public UActorComponent
{
public:
	TMap<struct FName, class ATigerPaperDoll*>         PaperDollByTagNames;                                       // 0x00B0(0x0050) (BlueprintVisible, BlueprintReadOnly, Transient, NativeAccessSpecifierPublic)
	TMap<class ATigerPaperDoll*, struct FTigerPaperDollHighlightComponents> PaperDollHighlightComponents;                              // 0x0100(0x0050) (Transient, ContainsInstancedReference, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerPreMatchPaperDollComponent");
		return ptr;
	}



	void EnablePaperDollHighlight(class ATigerPaperDoll* InPaperDoll, bool bInEnable);
};

// Class Tiger.TigerPremiumCurrencyUiScreen
// 0x0060 (FullSize[0x02E0] - InheritedSize[0x0280])
class UTigerPremiumCurrencyUiScreen : public UTigerWidget
{
public:
	unsigned char                                      UnknownData_NH79[0x60];                                    // 0x0280(0x0060) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerPremiumCurrencyUiScreen");
		return ptr;
	}



	void PurchaseResult(TEnumAsByte<Shark_EShMidasResultCode> InPurchaseResult);
	void OnPurchaseHandled(bool bInWasSuccesful, TEnumAsByte<Shark_EShMidasResultCode> InPurchaseResult);
	void OnCurrencyPacksUpdated();
	TArray<struct FTigerPremiumCurrencyPackData> GetCurrencyPacks();
	void FillCurrencyPacks(TArray<struct FShMidasPremiumCurrencyPack> InPremiumCurrencyPacks);
	void ConfirmPurchase(const struct FTigerPremiumCurrencyPackData& InCurrencyPackData);
};

// Class Tiger.TigerPresenceService
// 0x0018 (FullSize[0x0040] - InheritedSize[0x0028])
class UTigerPresenceService : public UObject
{
public:
	unsigned char                                      UnknownData_8BH2[0x18];                                    // 0x0028(0x0018) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerPresenceService");
		return ptr;
	}



};

// Class Tiger.TigerPresenceSubsystem
// 0x0078 (FullSize[0x00A8] - InheritedSize[0x0030])
class UTigerPresenceSubsystem : public UGameInstanceSubsystem
{
public:
	struct FScriptMulticastDelegate                    OnPlayerPresenceChange;                                    // 0x0030(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnPlayersPresenceChange;                                   // 0x0040(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UTigerPresenceService*                       PresenceService;                                           // 0x0050(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int                                                HeartbeatIntervalInSeconds;                                // 0x0058(0x0004) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_RW89[0x4C];                                    // 0x005C(0x004C) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerPresenceSubsystem");
		return ptr;
	}



	void TigerOnPlayersPresenceChange__DelegateSignature(TArray<struct FTigerPlayerPresenceInfo> InPlayersPresenceInfo);
	void TigerOnPlayerPresenceChange__DelegateSignature(const struct FTigerPlayerPresenceInfo& InPlayerPresenceInfo);
	void SetLocation(const struct FString& InLocation);
	void SetInterestedPlayers(TArray<struct FString> InInterestedPlayerIds);
	void Register(const struct FString& InLocation, TArray<struct FString> InInterestedPlayerIds);
	TArray<struct FTigerPlayerPresenceInfo> GetInterestedPlayers();
	void DeRegister();
};

// Class Tiger.TigerPreSpawnMapUI
// 0x0000 (FullSize[0x0280] - InheritedSize[0x0280])
class UTigerPreSpawnMapUI : public UTigerWidget
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerPreSpawnMapUI");
		return ptr;
	}



};

// Class Tiger.TigerCharacterPreset
// 0x02B8 (FullSize[0x02E0] - InheritedSize[0x0028])
class UTigerCharacterPreset : public UObject
{
public:
	struct FTigerPreviewerData                         PreviewerData;                                             // 0x0028(0x02B0) (Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	Tiger_ETigerGender                                 BodyType;                                                  // 0x02D8(0x0001) (Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_D8GW[0x7];                                     // 0x02D9(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerCharacterPreset");
		return ptr;
	}



	Tiger_ETigerGender GetBodyTypeFromHead();
	struct FTigerCharacterAppearance GetAppearance();
};

// Class Tiger.TigerInputPresetDataAsset
// 0x0050 (FullSize[0x0080] - InheritedSize[0x0030])
class UTigerInputPresetDataAsset : public UDataAsset
{
public:
	TMap<struct FName, struct FTigerInputPresetData>   InputPresets;                                              // 0x0030(0x0050) (Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerInputPresetDataAsset");
		return ptr;
	}



	TArray<struct FName> GetInputPresetsArray();
};

// Class Tiger.TigerCustomizableKeybindsDataAsset
// 0x00A0 (FullSize[0x00D0] - InheritedSize[0x0030])
class UTigerCustomizableKeybindsDataAsset : public UDataAsset
{
public:
	TMap<struct FName, struct FTigerCustomizableKeybindData> KeybindData;                                               // 0x0030(0x0050) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TMap<struct FName, struct FTigerCustomizableAxisKeybindData> AxisKeybindData;                                           // 0x0080(0x0050) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerCustomizableKeybindsDataAsset");
		return ptr;
	}



};

// Class Tiger.TigerWeaponCycleStyle
// 0x0020 (FullSize[0x0048] - InheritedSize[0x0028])
class UTigerWeaponCycleStyle : public UObject
{
public:
	int                                                WeaponSlotsToCycle;                                        // 0x0028(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_ENF0[0x4];                                     // 0x002C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FText                                       UiName;                                                    // 0x0030(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerWeaponCycleStyle");
		return ptr;
	}



	int WrapSlotValue(int InSlotAsInt);
	bool IsValidWeaponSlotToCycle(Tiger_ETigerWeaponSlot InWeaponSlot);
	Tiger_ETigerWeaponSlot IntToSlot(int InSlotAsInt);
	Tiger_ETigerWeaponSlot DetermineNextWeaponSlot(class ATigerPlayerController* InPlayerController, Tiger_ETigerWeaponCycleDirection InDirection);
};

// Class Tiger.TigerUtilityBFL
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class UTigerUtilityBFL : public UBlueprintFunctionLibrary
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerUtilityBFL");
		return ptr;
	}



	struct FVector STATIC_VRandCone(const struct FVector& InDir, float InConeHalfAngleRad, struct FTigerRangedRandomState* InOutRandomState);
	void STATIC_UpdateTelemetryIDBundle(struct FTigerTelemetryIDBundle* InBundle);
	struct FLinearColor STATIC_UnpackLinearColorFromFloat(float InPackedColor);
	float STATIC_TimeSince(float Time, class UObject* WorldContextObject);
	void STATIC_TigerDebugDrawSphere(class UObject* InWorldContextObject, const struct FVector& InCenter, float InRadius, int InSegments, const struct FLinearColor& InColor, bool bInPersistentLines, float InLifeTime, unsigned char InDepthPriority, float InThickness);
	void STATIC_TigerDebugDrawRotation(class UObject* InWorldContextObject, const struct FRotator& InRotation, const struct FVector& InPosition, float InLength, float InLifeTime);
	void STATIC_TigerDebugDrawLine(class UObject* InWorldContextObject, const struct FVector& InLineStart, const struct FVector& InLineEnd, const struct FLinearColor& InColor, bool bInPersistentLines, float InLifeTime, unsigned char InDepthPriority, float InThickness);
	void STATIC_TigerDebugDrawCapsule(class UObject* InWorldContextObject, const struct FVector& InCenter, float InRadius, float InHalfHeight, const struct FRotator& InRotation, const struct FLinearColor& InColor, bool bInPersistentLines, float InLifeTime, unsigned char InDepthPriority, float InThickness);
	void STATIC_TigerDebugDrawBox(class UObject* WorldContextObject, const struct FVector& InCenter, const struct FVector& InExtent, const struct FRotator& InRotation, const struct FLinearColor& InColor, bool bInPersistentLines, float InLifeTime, unsigned char InDepthPriority, float InThickness);
	float STATIC_TigerApplyPointDamage(class ATigerCharacter* InDamagedActor, float InBaseDamage, const struct FVector& InHitFromDirection, const struct FHitResult& InHitInfo, class AController* InEventInstigator, class AActor* InDamageCauser, class UClass* InDamageTypeClass, Tiger_ETigerDamageCauser InDamageCauserType, const struct FString& InDamageReason, const struct FTigerDamageContext& InDamageContext);
	float STATIC_TigerApplyDamage(class ATigerCharacter* InDamagedActor, float InBaseDamage, class AController* InEventInstigator, class AActor* InDamageCauser, class UClass* InDamageTypeClass, Tiger_ETigerDamageCauser InDamageCauserType, const struct FString& InDamageReason, const struct FTigerDamageContext& InDamageContext);
	class UProceduralMeshComponent* STATIC_TigerAddProceduralMeshComponent(class AActor* Actor, const struct FCollisionResponseContainer& CollisionResponses, TEnumAsByte<Engine_ECollisionChannel> CollisionObjectType, const struct FName& ComponentName);
	void STATIC_StoreOpened(class ATigerPlayerController* InPlayerController);
	void STATIC_StoreItemPreviewOpened(class ATigerPlayerController* InPlayerController, const struct FTigerMetaStoreEntry& InEntry);
	void STATIC_StoreItemPreviewExited(class ATigerPlayerController* InPlayerController, const struct FTigerMetaStoreEntry& InEntry);
	void STATIC_StoreExited(class ATigerPlayerController* InPlayerController);
	void STATIC_StopAkPlayingId(int AkPlayingId, float FadeOutDuration);
	struct FPerfTimerHandle STATIC_StartPerfTimer();
	void STATIC_SpawnItemFromTable(class UObject* InWorldContextObject, class UTigerItemLootTable* InLootTable, const struct FTransform& InFirstTransform, const struct FTransform& InSecondTransform, Tiger_ETigerTelemetryItemSourceID InItemSource, class ATigerItemWorldRepresentation** OutFirstSpawnedItem, class ATigerItemWorldRepresentation** OutSecondSpawnedItem, bool bInSpawnSecondItem, bool bInSimulatePhysics);
	class ATigerItemWorldRepresentation* STATIC_SpawnItem(class UObject* InWorldContextObject, const struct FTransform& InTransform, class UTigerItemAsset* InItem, Tiger_ETigerTelemetryItemSourceID InItemSource, int InItemCount, bool bInSimulatePhysics);
	class UParticleSystemComponent* STATIC_SpawnEmitterStrategized(class UParticleSystem* InSystemToSpawn, class ATigerCharacter* InInstigatingCharacter, const struct FTransform& InRelativeTransform, const struct FName& InAttachPointName, class USceneComponent* InComponentToAttachTo, class UTigerParticleStrategyPostSpawn* InPostSpawnStrategy);
	class UParticleSystemComponent* STATIC_SpawnEmitterDefaultStrategized(class UParticleSystem* InSystemToSpawn, class ATigerCharacter* InInstigatingCharacter, const struct FTransform& InRelativeTransform, const struct FName& InAttachPointName, class USceneComponent* InComponentToAttachTo, class UClass* InPostSpawnStrategy);
	bool STATIC_ShouldAutoSpectateOnDeath();
	void STATIC_SetTemporalAASamples(int InSamples);
	void STATIC_SetStaticMeshMobility(class UStaticMeshComponent* MeshComponent, TEnumAsByte<Engine_EComponentMobility> NewMobility);
	void STATIC_SetSignificanceManagerBudgetType(class UObject* InWorldContextObject, Tiger_ETigerSignificanceBudgetType InBudgetType);
	void STATIC_SetCurrentAudioCultureForced(const struct FString& InNewAudioCulture);
	void STATIC_RunAllFunctionalTestsOnMap();
	void STATIC_ResetMaterialsToMeshDefault(class UPrimitiveComponent* Component);
	void STATIC_RenameActorInstance(class AActor* InActor, const struct FString& InName);
	void STATIC_RecordStartOfTutorialObjective(class UObject* InWorldContextObject, const struct FString& InTimeStampId, const struct FVector& InLocation);
	void STATIC_RecordStartOfTutorial(class UObject* InWorldContextObject);
	void STATIC_RecordEndOfTutorialObjective(class UObject* InWorldContextObject, const struct FString& InTimeStampId);
	void STATIC_RecordEndOfTutorial(class UObject* InWorldContextObject, bool InTutorialFinished);
	void STATIC_PrintPerfTimer(const struct FPerfTimerHandle& Handle, bool bPrintToLog, const struct FLinearColor& TextColor);
	int STATIC_PostAudioVisualizedAkEventOnComponent(class UAkAudioEvent* InEvent, class AActor* InActor, class UTigerAudioVisualizationSpawnerComponent* InVisualizationComponent, const struct FName& InAttachPointName, bool bInStopWhenAttachedToDestroyed, const struct FString& InEventName);
	int STATIC_PostAudioVisualizedAkEventAtLocation(class UAkAudioEvent* InEvent, const struct FVector& InLocation, const struct FRotator& InOrientation, class UTigerAudioVisualizationSpawnerComponent* InVisualizationComponent, const struct FString& InEventName);
	int STATIC_PostAudioVisualizedAkEvent(class UAkAudioEvent* InEvent, class ATigerPlayer* InPlayer, const struct FName& InAttachPointName, bool bInStopWhenAttachedToDestroyed, const struct FString& InEventName);
	void STATIC_PostAkEventRaw(int* InAkPlayingId, class UAkAudioEvent* InAkAudioEvent, class AActor* InOwner, bool bInStopWhenOwnerIsDestroyed);
	int STATIC_PostAkEventIfLocallyControlled(class AActor* InActor, class UAkAudioEvent* InEvent);
	bool STATIC_PartialMatch(const struct FString& InRegexPattern, const struct FString& InInput);
	float STATIC_PackLinearColorToFloat(const struct FLinearColor& InColor);
	void OnItemAppliedToCard__DelegateSignature(const struct FTigerPersistentPlayerCardData& InCard);
	void OnItemAppliedToApperance__DelegateSignature(const struct FTigerCharacterAppearance& InAppearance);
	struct FTigerDamageContext STATIC_MakeTigerDamageContext(class UObject* InUObject);
	class UObject* STATIC_LoadObjectOfType(class UClass* Type);
	class UObject* STATIC_LoadDefaultObjectFromSoftClass(class UClass* InOutputType);
	void STATIC_LoadClan(class UTigerPlayerClanData** ClanData);
	struct FText STATIC_ListChanges(TArray<float> Changes, const struct FText& Prefix, const struct FText& Suffix, const struct FText& Seperator);
	bool STATIC_IsValidCharacterId(const struct FTigerPersistentCharacterID& CharacterId);
	bool STATIC_IsSameCharacterId(const struct FTigerPersistentCharacterID& CharacterA, const struct FTigerPersistentCharacterID& CharacterB);
	bool STATIC_IsInTutorial(class UObject* InWorldContextObject);
	bool STATIC_IsInTransferFromMatch(class UObject* InWorldContextObject);
	bool STATIC_IsInMatch(class UObject* InWorldContextObject);
	bool STATIC_IsInElysium(class UObject* WorldContextObject);
	bool STATIC_IsInEditor();
	bool STATIC_IsInBenchmark(class UObject* InWorldContextObject);
	bool STATIC_IsEditorBuild();
	bool STATIC_IsDirectlyHovered(class UWidget* Widget);
	void STATIC_InitializeCharacterAlignmentAk(class AActor* Actor);
	struct FTigerPersistentPlayerTransactionalData STATIC_GetTransactionalPlayerData(class UObject* WorldContextObject);
	void STATIC_GetTimeLeftForStoreEntry(class UObject* InWorldContextObject, const struct FTigerMetaStoreEntry& InStoreEntry, bool* bOutHasExpired, struct FTimespan* OutTimeLeft);
	class UTigerGameInstance* STATIC_GetTigerGameInstance(class UObject* InWorldContextObject);
	int STATIC_GetTemporalAASamples();
	struct FTigerPersistentPlayerCharacterData STATIC_GetSelectedCharacterData(class UObject* InWorldContextObject);
	struct FTigerCharacterAppearance STATIC_GetSelectedCharacterAppearance(class UObject* InWorldContextObject);
	float STATIC_GetScrollBoxContentSpace(class UScrollBox* ScrollBox);
	class UNiagaraSystem* STATIC_GetPreloadedNiagaraSystem(class UObject* WorldContextObject, const struct FSoftObjectPath& SoftObjectPath);
	struct FTigerPersistentPlayerCardData STATIC_GetPlayerCardData(class UObject* InWorldContextObject);
	float STATIC_GetPerfTimerElapsedTime(const struct FPerfTimerHandle& Handle);
	class UTigerPartyManager* STATIC_GetPartyManager(class UObject* InWorldContextObject);
	int STATIC_GetNearestScrollBoxToPoint(TArray<class UScrollBox*> Boxes, const struct FVector2D& Point);
	class ATigerPlayerController* STATIC_GetLocalPlayerController(class UObject* WorldContextObject);
	class ATigerPlayer* STATIC_GetLocalPlayer(class UObject* WorldContextObject);
	float STATIC_GetLastRenderTime(class UPrimitiveComponent* Primitive);
	class UTigerItemDatabase* STATIC_GetItemsDatabase();
	struct FTigerItemId STATIC_GetItemIdForItem();
	class UTigerInventoryItemBase* STATIC_GetItemFromItemId(const struct FTigerItemId& InItemId);
	int STATIC_GetHardCurrency(class UObject* InWorldContextObject);
	class UTigerGrimoireTree* STATIC_GetGrimoireTree();
	float STATIC_GetGameTimeSecondsByContext(class UObject* InWorldContextObject);
	float STATIC_GetGameTimeSeconds(class UObject* InWorldContextObject);
	Tiger_ETigerDamageCauser STATIC_GetDamageCauserFromCharacter(class ATigerCharacter* InCharacter);
	struct FString STATIC_GetComputerIdentifier(class UObject* InWorldContextObject);
	void STATIC_GetCommandLineInteger(const struct FString& ParameterName, bool* ParameterExists, int* Integer);
	class AActor* STATIC_GetClosestActorToLocation(class UClass* ActorClass, TArray<class AActor*> ActorArray, const struct FVector& Location);
	class UObject* STATIC_GetClassDefaultObject(class UClass* Class);
	int STATIC_GetBuildVersion();
	void STATIC_GetBlueprintsUsingTelemetryID();
	class UTigerBloodTrackPassiveList* STATIC_GetBloodTrackPassiveList();
	struct FTigerPropAttachmentInfo STATIC_GetAttachmentInfoFromIdentifierAndClass(class UClass* Subclass, const struct FName& Identifier);
	float STATIC_GetAngleDeltaDegrees(float Angle1, float Angle2);
	class USharkAccounts* STATIC_GetAccountSystem(class UObject* InWorldContextObject);
	struct FString STATIC_FormatDate(const struct FDateTime& DateTime, const struct FText& Format);
	TArray<struct FTigerTelemetryIDCollisionBundle> STATIC_FindTelemetryIDCollisions(TArray<struct FTigerTelemetryIDBundle> InIDBundles, bool* bOutHadInvalidIDs, bool* bOutValidIDsExisted);
	bool STATIC_ExportTelemetryIdsToJson(TArray<struct FTigerTelemetryIDBundle> InIDBundles, const struct FTigerTelemetryIDExportFilter& InFilter);
	void STATIC_ExportTelemetryDefinitionsToJson(const struct FString& InPingDefinitionName, const struct FTigerTelemetryDefinition& InPingDefinition);
	bool STATIC_EqualTigerPersistentPlayerId(const struct FTigerPersistentPlayerID& InLHS, const struct FTigerPersistentPlayerID& InRHS);
	bool STATIC_EqualTigerItemIDs(const struct FTigerItemId& InLHS, const struct FTigerItemId& InRHS);
	void STATIC_DisableReplicationInElysium(class UActorComponent* InActorComponent);
	bool STATIC_DestroyActorIfNotEditorBuild(class AActor* InActor);
	void STATIC_DedicatedServerBranch(class UObject* WorldContextObject, Tiger_ETigerIsDedicatedServer* NetMode);
	struct FTigerChatMessage STATIC_CreateGameChatMessage(const struct FText& InMessage, bool bInIsChatBanMessage);
	int STATIC_ConvertInt64ToInt(int64_t Int64Value, bool* bSuccess);
	bool STATIC_CheckTelemetryIDIsCollisionFree(TArray<struct FTigerTelemetryIDBundle> InIDBundles, struct FTigerTelemetryIDBundle* InBundleToValidate, int InOuterIndex, int* OutInnerCollisionIndex);
	TArray<struct FTigerTelemetryIDBundle> STATIC_CheckAndGenerateUniqueTelemetryIds(TArray<struct FTigerTelemetryIDBundle>* InIDBundles);
	void STATIC_CenterMouseLocation(class ATigerPlayerController* PlayerController);
	bool STATIC_ArePlayerStateArraysEqual(TArray<class APlayerState*> InLeft, TArray<class APlayerState*> InRight);
	bool STATIC_AreOutfitPhysicalMeshesValid(const struct FTigerPersistentOutfitSetup& InOutfitSetup);
	void STATIC_ApplyItemToCardAsync(const struct FTigerPersistentPlayerCardData& InCardData, const struct FScriptDelegate& InDelegate);
	void STATIC_ApplyItemToAppearance(int InSlot, const struct FTigerCharacterAppearance& InAppearance, Tiger_ETigerPowerKitType InUsedPowerKit, Tiger_ETigerClan InClan, const struct FScriptDelegate& InDelegate);
	void STATIC_ApplyCustomizationParametersToMeshComponentFiltered(const struct FTigerCharacterCustomizationParameters& InParams, class USkeletalMeshComponent* InMeshComponent, Tiger_ETigerCharacterMeshPart InPart);
	void STATIC_ApplyCustomizationParametersToMeshComponent(const struct FTigerCharacterCustomizationParameters& Params, class USkeletalMeshComponent* MeshComponent);
	class UProceduralMeshComponent* STATIC_AddProceduralMeshWithSection(class AActor* Actor, TArray<struct FVector> Vertices, TArray<int> Triangles, TArray<struct FVector> Normals, TArray<struct FVector2D> UV0, TArray<struct FLinearColor> VertexColors, TArray<struct FProcMeshTangent> Tangents, bool bCreateCollision, const struct FCollisionResponseContainer& CollisionResponses, TEnumAsByte<Engine_ECollisionChannel> CollisionObjectType);
};

// Class Tiger.TigerUtilityPowerBaseComponent
// 0x0038 (FullSize[0x00E8] - InheritedSize[0x00B0])
class UTigerUtilityPowerBaseComponent : public UActorComponent
{
public:
	struct FText                                       UtilityName;                                               // 0x00B0(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FText                                       UtilityDescription;                                        // 0x00C8(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	bool                                               bUseClientBackgroundUpdate;                                // 0x00E0(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_79VD[0x7];                                     // 0x00E1(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerUtilityPowerBaseComponent");
		return ptr;
	}



};

// Class Tiger.TigerVendorStoreCategory
// 0x0028 (FullSize[0x0050] - InheritedSize[0x0028])
class UTigerVendorStoreCategory : public UObject
{
public:
	TArray<struct FTigerVendorStoreCategoryItem>       CachedItems;                                               // 0x0028(0x0010) (ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	TArray<struct FTigerPersistentItemDefinition>      ItemDefinitions;                                           // 0x0038(0x0010) (ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_OJA4[0x8];                                     // 0x0048(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerVendorStoreCategory");
		return ptr;
	}



	TArray<struct FTigerVendorStoreCategoryItem> GetItemsWithClass(class UClass* Class);
	TArray<struct FTigerVendorStoreCategoryItem> GetItems();
	Tiger_ETigerPersistentStoreCategory GetCategoryType();
};

// Class Tiger.TigerVendorComponent
// 0x0080 (FullSize[0x0130] - InheritedSize[0x00B0])
class UTigerVendorComponent : public UActorComponent
{
public:
	TArray<class UTigerVendorStoreCategory*>           DynamicCategories;                                         // 0x00B0(0x0010) (Edit, BlueprintVisible, ZeroConstructor, Transient, EditConst, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_3X1X[0x70];                                    // 0x00C0(0x0070) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerVendorComponent");
		return ptr;
	}



	void UnsubscribeToStoreEntryConfigEvents(Tiger_ETigerMetaStoreCategoryType InStoreEntryCategory, const struct FScriptDelegate& InEventDelegate);
	void TigerPurchaseItemDelegate__DelegateSignature(bool bInSuccess, const struct FString& InErrorString, const struct FTigerItemId& InItemId);
	void SubscribeToStoreEntryConfigEvents(Tiger_ETigerMetaStoreCategoryType InStoreEntryCategory, const struct FScriptDelegate& InEventDelegate);
	void SaveOutfitSetup(const struct FTigerPersistentOutfitSetup& OutfitSetup);
	struct FTigerItemPrice GetSpecialItemCost(const struct FTigerItemId& InItemId);
	class UTigerVendorStoreCategory* GetCategory(Tiger_ETigerPersistentStoreCategory CategoryType);
};

// Class Tiger.TigerVendorUI
// 0x0028 (FullSize[0x02B8] - InheritedSize[0x0290])
class UTigerVendorUI : public UTigerMenuWidget
{
public:
	TWeakObjectPtr<class ATigerNPC>                    VendorNPC;                                                 // 0x0290(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class UTigerInteractiveNpcComponent> InteractiveNpcComponent;                                   // 0x0298(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTigerSharedVendorUI*                        SharedVendorUI;                                            // 0x02A0(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bHideMouseCusorAtDescruction;                              // 0x02A8(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_CSNB[0x1];                                     // 0x02A9(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               bUseTransitions;                                           // 0x02AA(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_R5MS[0x5];                                     // 0x02AB(0x0005) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UClass*                                      BattlepassSubMenuClass;                                    // 0x02B0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerVendorUI");
		return ptr;
	}



	bool ShouldUseTransitions();
	void OpenBattlepassMenu();
	void OnMenuBuy();
	void OnCloseVendorWidget(bool* bShouldRemoveWidget);
	void OnAddToScreen();
};

// Class Tiger.TigerVisitLocationTriggerVolume
// 0x0020 (FullSize[0x0280] - InheritedSize[0x0260])
class ATigerVisitLocationTriggerVolume : public ATriggerVolume
{
public:
	unsigned char                                      UnknownData_X3MP[0x20];                                    // 0x0260(0x0020) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerVisitLocationTriggerVolume");
		return ptr;
	}



	void OnBeginOverlap(class AActor* InOverlappedActor, class AActor* InOtherActor);
	void OnAreaEntered__DelegateSignature();
	void HandleOnRestartPlayer(class AController* InNewPlayer);
};

// Class Tiger.TigerMeleeWeaponTrailConfig
// 0x0020 (FullSize[0x0048] - InheritedSize[0x0028])
class UTigerMeleeWeaponTrailConfig : public UObject
{
public:
	TArray<struct FScalarParameterValue>               ScalarParameters;                                          // 0x0028(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FVectorParameterValue>               VectorParameters;                                          // 0x0038(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerMeleeWeaponTrailConfig");
		return ptr;
	}



};

// Class Tiger.TigerMeleeWeapon
// 0x00F0 (FullSize[0x0198] - InheritedSize[0x00A8])
class UTigerMeleeWeapon : public UTigerWeapon
{
public:
	class UCurveFloat*                                 HorizontalFlinchCurve;                                     // 0x00A8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                                 VerticalFlinchCurve;                                       // 0x00B0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              DamageMultiplier;                                          // 0x00B8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              RootMotionAttacksStopDistance;                             // 0x00BC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              RootMotionAttacksStopDistanceAboveOrBelow;                 // 0x00C0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bIsUnarmedWeapon;                                          // 0x00C4(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_U1MZ[0x3];                                     // 0x00C5(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UClass*                                      AimAssistBehavior;                                         // 0x00C8(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              AimAssistPredictionTime;                                   // 0x00D0(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_36PI[0x4];                                     // 0x00D4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FTigerMeleeAttack>                   Attacks;                                                   // 0x00D8(0x0010) (Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	struct FName                                       HeavyAttackChargeUpMontageName;                            // 0x00E8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	Tiger_ETigerDisciplinesEnum                        WeaponAbility;                                             // 0x00F0(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_6CCO[0x7];                                     // 0x00F1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UAkAudioEvent*                               HitAkEvent;                                                // 0x00F8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               HeavyHitAkEvent;                                           // 0x0100(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystem*                             HitEffect;                                                 // 0x0108(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      HitEffectClass;                                            // 0x0110(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UForceFeedbackEffect*                        TargetHitForceFeedback;                                    // 0x0118(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UForceFeedbackEffect*                        AttackBlockedForceFeedback;                                // 0x0120(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UForceFeedbackEffect*                        SuccesfullyBlockedForceFeedback;                           // 0x0128(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       BlockBlendSpaceName;                                       // 0x0130(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               BlockStanceActivatedAkEvent;                               // 0x0138(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              StartBlockingTransitionTime;                               // 0x0140(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              BlockMovementMultiplier;                                   // 0x0144(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              BlockStunTime;                                             // 0x0148(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              DiminishingReturnBlockStunMultiplierReduction;             // 0x014C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               BlockHitAkEvent;                                           // 0x0150(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystem*                             BlockEffect;                                               // 0x0158(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       BlockHitMontageName;                                       // 0x0160(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       BlockKnockbackMontageName;                                 // 0x0168(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              BlockImpulseStrength;                                      // 0x0170(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              BlockMoveDistance;                                         // 0x0174(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              BlockMoveDuration;                                         // 0x0178(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              BlockMoveExitVelocityScale;                                // 0x017C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              BlockAttackDamageMultiplier;                               // 0x0180(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              BlockHeavyAttackDamageMultiplier;                          // 0x0184(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      WeaponTrailConfigClass;                                    // 0x0188(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MasqueradeNoiseEventRadius;                                // 0x0190(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	Tiger_ETigerMeleeWeaponIdentifier                  MeleeWeaponIdentifier;                                     // 0x0194(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_YOT1[0x3];                                     // 0x0195(0x0003) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerMeleeWeapon");
		return ptr;
	}



	void OnWorldObjectHit(class ATigerCharacter* InInstigator, const struct FHitResult& InWorldObjectHitResult, const struct FVector& InSwingDirection);
	void OnHit(class ATigerCharacter* Instigator, class ATigerCharacter* Target, Tiger_ETigerWeaponMeleeAttackType AttackType, float Damage);
	struct FName GetWeaponOverrideHitReactionMontage(class ATigerCharacter* Attacker, Shark_ESharkFourWayDirection HitFromFourWayDirection);
	unsigned char GetRandomAttackFromNextGroup(const struct FTigerMeleeWeaponAttackIdentifier& AttackIdentifier);
	unsigned char GetRandomAttackFromGroup(const struct FTigerMeleeWeaponAttackIdentifier& AttackIdentifier, unsigned char AttackGroup);
	Tiger_ETigerMeleeWeaponIdentifier GetMeleeWeaponIdentifier();
	unsigned char GetAttackGroupFromAttackIdentifier(const struct FTigerMeleeWeaponAttackIdentifier& AttackIdentifier);
};

// Class Tiger.TigerMetaStoreUtilityBFL
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class UTigerMetaStoreUtilityBFL : public UBlueprintFunctionLibrary
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerMetaStoreUtilityBFL");
		return ptr;
	}



	struct FString STATIC_GetTotalPriceAsString(const struct FTigerMetaStoreEntry& InStoreEntry);
	void STATIC_GetTotalPayloadPriceAsString(class UTigerVendorComponent* InVendorComponent, TArray<struct FTigerMetaStoreBuyPayloadElement> InStoreBuyPayloadElements, struct FString* OutPrice, bool* bOutCouldGetTotalPrice);
	struct FString STATIC_GetStoreEntryIdAsString(const struct FTigerMetaStoreEntry& InStoreEntry);
	struct FString STATIC_GetQuantityAsString(const struct FTigerMetaStoreEntryItem& InStoreEntryItem);
	struct FString STATIC_GetPremiumPriceAsString(const struct FTigerMetaStoreEntry& InStoreEntry);
	int STATIC_GetNumBoughtItems(const struct FTigerBuyStoreEntryResponsePayload& InBuyResponse);
	struct FString STATIC_GetDiscountAsString(const struct FTigerMetaStoreEntry& InStoreEntry);
	bool STATIC_GetBoughtItemInfo(const struct FTigerBuyStoreEntryResponsePayload& InBuyResponse, int InItemIndex, struct FTigerItemId* OutItemId, struct FString* OutItemQuantity);
	struct FTigerMetaStoreBuyPayloadElement STATIC_CreateStoreEntryBuyElement(const struct FTigerMetaStoreEntry& InStoreEntry, int InQuantity);
};

// Class Tiger.TigerMiniMap
// 0x0008 (FullSize[0x0288] - InheritedSize[0x0280])
class UTigerMiniMap : public UTigerWidget
{
public:
	unsigned char                                      UnknownData_WHWP[0x8];                                     // 0x0280(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerMiniMap");
		return ptr;
	}



	void UpdatePlayerMarkerAlignmentAndMinimapSize(class UTigerMapUi* InMap, class UImage* InMinimapBorder, class UTigerMapMarkerOverlay* InMapMarkerOverlay, const struct FVector2D& InPreviousCanvasSize);
	void SetupMasqueradeComponentAndDelegate();
	void OnMasqueradeStateChanged(bool InIsMasqueradeBreached, Tiger_ETigerAIPlayerAction InPlayerAction);
};

// Class Tiger.TigerModelViewerItem
// 0x0010 (FullSize[0x0238] - InheritedSize[0x0228])
class ATigerModelViewerItem : public AActor
{
public:
	class UStaticMeshComponent*                        Mesh;                                                      // 0x0228(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              DesiredScreenSize;                                         // 0x0230(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              CurrentScreenSize;                                         // 0x0234(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerModelViewerItem");
		return ptr;
	}



	float GetCurrentScreenSize(const struct FVector& InOrigin, float InDistance, const struct FVector& InViewOrigin, const struct FMatrix& InProjectionMatrix);
};

// Class Tiger.TigerMultiplayAgent
// 0x00A8 (FullSize[0x00F8] - InheritedSize[0x0050])
class UTigerMultiplayAgent : public UTigerDsBackendAgent
{
public:
	unsigned char                                      UnknownData_GETP[0xA8];                                    // 0x0050(0x00A8) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerMultiplayAgent");
		return ptr;
	}



};

// Class Tiger.TigerMultiplayRegionCache
// 0x0120 (FullSize[0x0150] - InheritedSize[0x0030])
class UTigerMultiplayRegionCache : public UGameInstanceSubsystem
{
public:
	unsigned char                                      UnknownData_RUXD[0x10];                                    // 0x0030(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              RefreshRegionsIntervalSeconds;                             // 0x0040(0x0004) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              MaxWaitTimeSecondsAfterRegionDetermination;                // 0x0044(0x0004) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FTigerRegionPingerSettings                  PingerSettings;                                            // 0x0048(0x0014) (Config, NoDestructor, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_0M53[0x3C];                                    // 0x005C(0x003C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              MinimumMeasurementTime;                                    // 0x0098(0x0004) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int                                                DesiredMeasuredRegions;                                    // 0x009C(0x0004) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_FLWY[0xB0];                                    // 0x00A0(0x00B0) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerMultiplayRegionCache");
		return ptr;
	}



};

// Class Tiger.TigerMusicAsset
// 0x0008 (FullSize[0x0038] - InheritedSize[0x0030])
class UTigerMusicAsset : public UDataAsset
{
public:
	class USoundCue*                                   SoundCue;                                                  // 0x0030(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerMusicAsset");
		return ptr;
	}



};

// Class Tiger.TigerMusicVolume
// 0x0008 (FullSize[0x0268] - InheritedSize[0x0260])
class ATigerMusicVolume : public AVolume
{
public:
	class UTigerMusicAsset*                            MusicAsset;                                                // 0x0260(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerMusicVolume");
		return ptr;
	}



};

// Class Tiger.TigerMusicManager
// 0x0008 (FullSize[0x0230] - InheritedSize[0x0228])
class ATigerMusicManager : public AActor
{
public:
	class UAudioComponent*                             AudioComponent;                                            // 0x0228(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerMusicManager");
		return ptr;
	}



};

// Class Tiger.TigerNearbySoundCueComponent
// 0x0040 (FullSize[0x00F0] - InheritedSize[0x00B0])
class UTigerNearbySoundCueComponent : public UActorComponent
{
public:
	float                                              DistanceToPlaySoundOnSquared;                              // 0x00B0(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              DistanceToStopSoundOnSquared;                              // 0x00B4(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAkAudioEvent*                               PlayEvent;                                                 // 0x00B8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAkAudioEvent*                               StopEvent;                                                 // 0x00C0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bDisableOcclusion;                                         // 0x00C8(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_7OX2[0x7];                                     // 0x00C9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class ATigerCharacter*                             CharacterOwner;                                            // 0x00D0(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAkComponent*                                AkComponent;                                               // 0x00D8(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_JRTA[0x10];                                    // 0x00E0(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerNearbySoundCueComponent");
		return ptr;
	}



};

// Class Tiger.TigerNearCameraFadeMaterialDb
// 0x00A0 (FullSize[0x00D0] - InheritedSize[0x0030])
class UTigerNearCameraFadeMaterialDb : public UDataAsset
{
public:
	unsigned char                                      OriginalMaterialToFadingMaterialLut[0x50];                 // 0x0030(0x0050) UNKNOWN PROPERTY: MapProperty
	unsigned char                                      FadingMaterialToOriginalMaterialLut[0x50];                 // 0x0080(0x0050) UNKNOWN PROPERTY: MapProperty


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerNearCameraFadeMaterialDb");
		return ptr;
	}



};

// Class Tiger.TigerNearCameraFadeSettings
// 0x00A0 (FullSize[0x00D8] - InheritedSize[0x0038])
class UTigerNearCameraFadeSettings : public UDeveloperSettings
{
public:
	bool                                               bEnableNearCameraFade;                                     // 0x0038(0x0001) (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_UYV9[0x7];                                     // 0x0039(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TMap<struct FName, struct FName>                   CollisionProfileChangesWhenTogglingFade;                   // 0x0040(0x0050) (Edit, Config, NativeAccessSpecifierPublic)
	class UClass*                                      MaterialDatabase;                                          // 0x0090(0x0008) (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              FadeLength;                                                // 0x0098(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_BW0G[0x4];                                     // 0x009C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FTigerNearCameraFadeMaterialMasterData> MasterMaterialDatas;                                       // 0x00A0(0x0010) (Edit, ZeroConstructor, Config, NativeAccessSpecifierPublic)
	struct FTigerNearCameraFadeDebugData               DebugData;                                                 // 0x00B0(0x0028) (Edit, Config, NoDestructor, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerNearCameraFadeSettings");
		return ptr;
	}



};

// Class Tiger.TigerNetInfoSubSystem
// 0x0020 (FullSize[0x0050] - InheritedSize[0x0030])
class UTigerNetInfoSubSystem : public UGameInstanceSubsystem
{
public:
	unsigned char                                      UnknownData_J6OU[0x20];                                    // 0x0030(0x0020) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerNetInfoSubSystem");
		return ptr;
	}



	bool IsPublicIpv6Set();
	bool IsPublicIpv4Set();
	struct FString GetPublicIpv6();
	struct FString GetPublicIpv4();
};

// Class Tiger.TigerBestialTrailPart
// 0x0000 (FullSize[0x0580] - InheritedSize[0x0580])
class UTigerBestialTrailPart : public USplineMeshComponent
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerBestialTrailPart");
		return ptr;
	}



};

// Class Tiger.TigerBestialTrailVisualizer
// 0x0018 (FullSize[0x0240] - InheritedSize[0x0228])
class ATigerBestialTrailVisualizer : public AActor
{
public:
	TArray<struct FTigerPlayerSavedLocation>           LocationHistory;                                           // 0x0228(0x0010) (BlueprintVisible, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	class ATigerGameState*                             GameState;                                                 // 0x0238(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerBestialTrailVisualizer");
		return ptr;
	}



	float SecondsUntilTimeStamp(float Timestamp);
	float SecondsSinceTimeStamp(float Timestamp);
	void ReceiveNewTrackingPoint(const struct FTigerPlayerSavedLocation& NewLocation);
	void ReceiveInitialTrackingPoints(TArray<struct FTigerPlayerSavedLocation> Locations, class ATigerPlayer* TrackedPlayer);
	void BeginEndTracking();
};

// Class Tiger.TigerTrackedBuffInstance
// 0x0000 (FullSize[0x0088] - InheritedSize[0x0088])
class UTigerTrackedBuffInstance : public UTigerBuffInstance
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerTrackedBuffInstance");
		return ptr;
	}



};

// Class Tiger.TigerTrackedBuff
// 0x0000 (FullSize[0x0270] - InheritedSize[0x0270])
class UTigerTrackedBuff : public UTigerBuff
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerTrackedBuff");
		return ptr;
	}



};

// Class Tiger.TigerNosferatuPassiveBestialConfig
// 0x0030 (FullSize[0x0168] - InheritedSize[0x0138])
class UTigerNosferatuPassiveBestialConfig : public UTigerPassiveConfig
{
public:
	class UClass*                                      TrailVisualizationActor;                                   // 0x0138(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      TrackedBuffType;                                           // 0x0140(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              RevealDistanceSquared;                                     // 0x0148(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              LoseDistanceSquared;                                       // 0x014C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<float>                                      RevealHealthThreshold;                                     // 0x0150(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	float                                              TrackingTimeSeconds;                                       // 0x0160(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bEnableTrackingFeedback;                                   // 0x0164(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_MI8W[0x3];                                     // 0x0165(0x0003) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerNosferatuPassiveBestialConfig");
		return ptr;
	}



};

// Class Tiger.TigerNosferatuPassiveBestialLogic
// 0x0058 (FullSize[0x01D0] - InheritedSize[0x0178])
class UTigerNosferatuPassiveBestialLogic : public UTigerPassiveArchetypeLogic
{
public:
	TMap<int, struct FTigerTrackedPlayerData>          RevealedPlayers;                                           // 0x0178(0x0050) (NativeAccessSpecifierPrivate)
	class UTigerNosferatuPassiveBestialConfig*         Config;                                                    // 0x01C8(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerNosferatuPassiveBestialLogic");
		return ptr;
	}



	void NewTrackedLocation(class ATigerPlayer* InTrackedPlayer, const struct FVector& InNewLocation, float InTimeStamp);
	bool CalculateIsWithinDistanceToTrail(float InDistance);
	float CalculateDistanceToTrail();
};

// Class Tiger.TigerNotificationsUI
// 0x0038 (FullSize[0x02B8] - InheritedSize[0x0280])
class UTigerNotificationsUI : public UTigerWidget
{
public:
	float                                              HolyIncenseImminentTime;                                   // 0x0280(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_HPTH[0x34];                                    // 0x0284(0x0034) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerNotificationsUI");
		return ptr;
	}



	void OnReceivedReward();
	void OnQuestObjectiveCompleted(class UTigerQuestObjective* InCompleteObjective);
	void OnQuestCompleted(class UTigerQuest* InCompletedQuest);
	void OnPlayerHealed(const struct FString& InPlayerName);
	void OnPlayerDeath(const struct FText& PlayerName, const struct FText& InstigatorName, bool bIsPlayerInSameGroup);
	void OnOtherPlayerBrokeMasquerade(class ATigerPlayerState* InPlayerState);
	void OnMosquitoActivated();
	void OnMemberLeftGroup(const struct FString& PlayerName);
	void OnMemberJoinedGroup(const struct FString& PlayerName);
	void OnInGameTalentUnlocked(class UTexture2D* Icon, const struct FText& Name);
	void OnHolyIncenseImminent(float Time);
	void OnGroupPingResponse(class UTigerPingClientData* InPingData, class ATigerPlayerState* InRespondingPlayer, bool bInIsInterested);
	void OnGroupPingCanceled(class UTigerPingClientData* InPingData);
	void OnGroupPing(const struct FTigerPingNotificationNetData& PingData, class ATigerPlayerState* InSendingPlayerState);
	void OnGroupInviteReceived(class UTigerPartyInvite* InInvite);
	void OnGrimoireItemUnlocked(class UTigerGrimoireEntry* InGrimoireEntry);
	void OnFriendRemoved(class UTigerFriend* InLostFriend);
	void OnFriendInviteSent();
	void OnFriendInviteRejected(class UTigerFriendInvite* InInvite);
	void OnFriendInviteReceived(class UTigerFriendInvite* InInvite);
	void OnFriendAdded(class UTigerFriend* InNewFriend);
	void OnExperienceGained(class UTigerExperienceEvent* ExperienceEvent, int GainedExperience);
	void OnDisciplineReceived(class UTexture2D* Icon, const struct FText& Name);
	void OnCollectibleFound(class UTigerCollectibleData* InCollectible);
	void OnChallengeCompleted(class UTigerChallenge* InCompletedChallenge);
	void OnBloodTrackPassiveUnlocked(class UTigerBloodTrackPassiveConfig* Passive);
	void OnBloodReceived(int Amount);
	void OnAcceptGroupInviteFailed(const struct FTigerInviteId& InInviteId);
	void ItemReceived(const struct FTigerItemNotification& ItemNotification);
};

// Class Tiger.TigerNotificationsUIStacker
// 0x0060 (FullSize[0x02E0] - InheritedSize[0x0280])
class UTigerNotificationsUIStacker : public UTigerWidget
{
public:
	TArray<struct FDisplayedItemWidget>                ShownItemWidgets;                                          // 0x0280(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	int                                                MaxDisplayedItems;                                         // 0x0290(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              ItemMargin;                                                // 0x0294(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              ItemDisplayTime;                                           // 0x0298(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              ItemMoveTime;                                              // 0x029C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              ItemFadeOffsetX;                                           // 0x02A0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_LZ1I[0x4];                                     // 0x02A4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class UUserWidget*>                         WaitingItems;                                              // 0x02A8(0x0010) (ExportObject, ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	class UUserWidget*                                 ItemWidgetFadingIn;                                        // 0x02B8(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUserWidget*                                 ItemWidgetFadingOut;                                       // 0x02C0(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                                ItemCanvasWidget;                                          // 0x02C8(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_H4MF[0x10];                                    // 0x02D0(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerNotificationsUIStacker");
		return ptr;
	}



	void EnqueueItem(class UUserWidget* ItemWidget);
};

// Class Tiger.TigerNPC
// 0x0168 (FullSize[0x0B08] - InheritedSize[0x09A0])
class ATigerNPC : public ATigerBaseNPC
{
public:
	struct FScriptMulticastDelegate                    OnAnimationModeChanged;                                    // 0x09A0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UTigerAICommandComponent*                    AICommandComponent;                                        // 0x09B0(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTigerNpcAccuracyComponent*                  AccuracyComponent;                                         // 0x09B8(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTigerEntityCombatComponent*                 EntityCombatComponent;                                     // 0x09C0(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystemComponent*                    NpcAwarenessComponent;                                     // 0x09C8(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class ATigerCharacter>              CurrentTarget;                                             // 0x09D0(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector_NetQuantize                         CurrentTargetLocation;                                     // 0x09D8(0x000C) (BlueprintVisible, BlueprintReadOnly, Net, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_CSDW[0x4];                                     // 0x09E4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class ATigerCharacter*                             TargetToShoot;                                             // 0x09E8(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	Tiger_ETigerAIAnimationMode                        AnimationMode;                                             // 0x09F0(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, EditConst, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	Tiger_ETigerCivilianEmotionalState                 EmotionalState;                                            // 0x09F1(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_VURD[0x2];                                     // 0x09F2(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                EmotionalStateRandomPot[0x6];                              // 0x09F4(0x0018) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_P6SE[0x4];                                     // 0x0A0C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UAnimMontage*                                LuredCancelAnim;                                           // 0x0A10(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTigerNpcPropComponent*                      NpcPropComponent;                                          // 0x0A18(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_C223[0x20];                                    // 0x0A20(0x0020) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              BumpTimeInterval;                                          // 0x0A40(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              HighPotenceBloodChange;                                    // 0x0A44(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              EarliestHighPotenceBloodTime;                              // 0x0A48(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              LastHighPotenceBloodTime;                                  // 0x0A4C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              PreferedMinimumDistanceBetweenPotent;                      // 0x0A50(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector_NetQuantize                         RagdollImpulse;                                            // 0x0A54(0x000C) (Net, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FTigerNpcReactionData                       ReactionData;                                              // 0x0A60(0x000C) (BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_KHIS[0x4];                                     // 0x0A6C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              MaxYawAngleToShoot;                                        // 0x0A70(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              MinTargetIsInfrontDotAngle;                                // 0x0A74(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FSharkRandomDeviation                       DownedStateDuration;                                       // 0x0A78(0x0008) (Edit, DisableEditOnInstance, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FName                                       HeartRateParam;                                            // 0x0A80(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FName                                       BloodAmountParam;                                          // 0x0A88(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FName                                       HeartSocketName;                                           // 0x0A90(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FName                                       HeartLocationParam;                                        // 0x0A98(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              HeartLocationUpdateTime;                                   // 0x0AA0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_XLAI[0x4];                                     // 0x0AA4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UClass*                                      LastDamageSource;                                          // 0x0AA8(0x0008) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_JVEN[0x58];                                    // 0x0AB0(0x0058) Fix Super Size


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerNPC");
		return ptr;
	}



	void TriggerNpcReactionEvent(const struct FTigerNpcReactionEvent& ReactionEvent);
	void TigerDelegateNpcAnimationModeChanged__DelegateSignature(Tiger_ETigerAIAnimationMode NewAnimationMode);
	void StopFireWeapon();
	bool StartFireWeapon(class ATigerCharacter* InTigerChar);
	void Server_SetCharacterMeshes(const struct FTigerMeshCollection& MeshCollection);
	void OnRep_RagdollImpulseSet();
	void OnRep_AnimationModeChanged(Tiger_ETigerAIAnimationMode LastMode);
	void OnFeedingStart(int FeedingTicksLeft, int MaxFeedingTicks);
	void OnFeedingEnd();
	void OnBurstCompleted();
	void Multicast_PlayReactionFromMontage(class UAnimMontage* InMontage, float InPlayBackSpeed, bool bInCanMoveDuringReaction);
	void Multicast_PlayReactionFromBlendSpace(class UBlendSpaceBase* InBlendSpace, const struct FVector& InSamplePoint, float InPlayBackSpeed, bool bInCanMoveDuringReaction, float InBlendOutTime);
	void Multicast_PlayMontageFromBlendSpace(class UBlendSpaceBase* BlendSpace, const struct FVector& SamplePoint, float PlayBackSpeed, bool bFreezeAtEnd);
	void Multicast_PlayDeathMontage(const struct FVector& SamplePoint, float PlayBackSpeed);
	void Multicast_PlayAnimationWithContextIdle(class UAnimMontage* InMontage, const struct FName& InContextIdle);
	void Multicast_InterruptCap(Tiger_ETigerDetachMethod InDetachMethod);
	void Multicast_DeactivateLure();
	void Multicast_AuthorityPlayAkEvent(class UAkAudioEvent* VoiceEvent);
	bool IsReacting();
	bool IsInControl();
	bool HasShootingTarget();
	struct FVector GetHeardRoarPosition();
	class ATigerAIController* GetAIController();
	void CollideWithOtherCharacter(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, const struct FHitResult& Hit);
	void AuthorityPlayReactionFromMontage(class UAnimMontage* InMontage, bool bInCanMoveDuringReaction);
	void AuthorityPlayReactionFromBlendSpace(class UBlendSpaceBase* InBlendSpace, const struct FVector& InSamplePoint, bool bInCanMoveDuringReaction, float InBlendOutTime);
	void AuthorityPlayMontageFromBlendSpace(class UBlendSpaceBase* BlendSpace, const struct FVector& SamplePoint, bool bFreezeAtEnd);
	void AuthorityPlayDeathMontage(const struct FVector& SamplePoint);
	void AuthorityPlayAkEvent(class UAkAudioEvent* VoiceEvent);
};

// Class Tiger.TigerNpcAccuracyComponent
// 0x0040 (FullSize[0x00F0] - InheritedSize[0x00B0])
class UTigerNpcAccuracyComponent : public UActorComponent
{
public:
	float                                              TimeToReachMaxAccuracy;                                    // 0x00B0(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              TimeToReachMaxInaccuracy;                                  // 0x00B4(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              MaxAccuracyConeRadius;                                     // 0x00B8(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              MinAccuracyConeRadius;                                     // 0x00BC(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              AccuracyDistance;                                          // 0x00C0(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              MovingTargetAccuracyPenaltyPercentage;                     // 0x00C4(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              MinSwooshByAccuracyConeRadius;                             // 0x00C8(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              MaxSwooshByAccuracyConeRadius;                             // 0x00CC(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              MinSwooshByAccuracyDistance;                               // 0x00D0(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bShouldKeepAccuracyWhenSwitchingToTargetsAlly;             // 0x00D4(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bShouldDebugDraw;                                          // 0x00D5(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bShouldMissEveryBurst;                                     // 0x00D6(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_HY2K[0x9];                                     // 0x00D7(0x0009) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class ATigerNPC*                                   Owner;                                                     // 0x00E0(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_LIDS[0x8];                                     // 0x00E8(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerNpcAccuracyComponent");
		return ptr;
	}



	void OnBurstCompleted();
};

// Class Tiger.TigerNpcAnimInstance
// 0x0078 (FullSize[0x0430] - InheritedSize[0x03B8])
class UTigerNpcAnimInstance : public UTigerAnimInstance
{
public:
	unsigned char                                      UnknownData_4Q69[0x8];                                     // 0x03B8(0x0008) Fix Super Size
	class UClass*                                      PropDummyClass;                                            // 0x03C0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bIsReadyToFireWeapon;                                      // 0x03C8(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_3J71[0x3];                                     // 0x03C9(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              TimeAnimModeChanged;                                       // 0x03CC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bIsBurstFiring;                                            // 0x03D0(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bIsBeingFedOn;                                             // 0x03D1(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bCanSeeLocalPlayer;                                        // 0x03D2(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bIsLookingAtLocalPlayer;                                   // 0x03D3(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                                     AimDirection;                                              // 0x03D4(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                                     StrafeDirection;                                           // 0x03E0(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              LocalPlayerLookAtPitch;                                    // 0x03EC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              LocalPlayerLookAtYaw;                                      // 0x03F0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              LocalPlayerLookAtDistance;                                 // 0x03F4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              LocalPlayerLookAtActivationDistance;                       // 0x03F8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              LocalPlayerLookAtDeactivationDistance;                     // 0x03FC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FSharkRandomDeviation                       LocalPlayerLookAtDuration;                                 // 0x0400(0x0008) (Edit, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FSharkRandomDeviation                       LocalPlayerLookAtAgainCooldown;                            // 0x0408(0x0008) (Edit, NoDestructor, Protected, NativeAccessSpecifierProtected)
	float                                              DeathDirection;                                            // 0x0410(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              ReactionCooldown;                                          // 0x0414(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              TurnCooldownTime;                                          // 0x0418(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_S5LP[0x14];                                    // 0x041C(0x0014) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerNpcAnimInstance");
		return ptr;
	}



	void UpdateSpeed();
	void OnVisualAssetReceived(class UTigerNPCVisualAsset* VisualAsset);
	void OnPropAssetReceivedEvent();
	void OnNpcThreatStateChangedEvent(Tiger_ETigerAIMasqueradeState OldThreatState, Tiger_ETigerAIMasqueradeState NewThreatState);
	void OnNpcReactionEvent(const struct FTigerNpcReactionEvent& ReactionEvent);
	void OnEntityEvent(Tiger_ETigerEntityEvent EntityEvent);
	void OnBumpedByPlayerEvent(class ATigerPlayer* InPlayer, const struct FVector& InDirectionToPlayer);
	void OnAnimationModeChanged(Tiger_ETigerAIAnimationMode LastAnimationMode);
	bool IsReactionOnCooldown();
	bool IsFootIKEnabled();
	class ATigerAIController* GetTigerAIController();
	class ATigerNPC* GetOwningNpc();
	void DetachProps();
	void AttachProps();
};

// Class Tiger.TigerNpcCapSpawner
// 0x0008 (FullSize[0x0268] - InheritedSize[0x0260])
class ATigerNpcCapSpawner : public ATigerNPCSpawningBase
{
public:
	class ATigerAiSpawningCap*                         OwningSpawningCap;                                         // 0x0260(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerNpcCapSpawner");
		return ptr;
	}



};

// Class Tiger.TigerDroppedPropTrackerComponent
// 0x0008 (FullSize[0x00B8] - InheritedSize[0x00B0])
class UTigerDroppedPropTrackerComponent : public UActorComponent
{
public:
	unsigned char                                      UnknownData_BP9M[0x8];                                     // 0x00B0(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerDroppedPropTrackerComponent");
		return ptr;
	}



};

// Class Tiger.TigerNPCDetachedProp
// 0x0008 (FullSize[0x0240] - InheritedSize[0x0238])
class ATigerNPCDetachedProp : public AStaticMeshActor
{
public:
	unsigned char                                      UnknownData_NWIM[0x8];                                     // 0x0238(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerNPCDetachedProp");
		return ptr;
	}



};

// Class Tiger.TigerDialogueCondition
// 0x0008 (FullSize[0x0030] - InheritedSize[0x0028])
class UTigerDialogueCondition : public UObject
{
public:
	bool                                               bFalseCondition;                                           // 0x0028(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_QRL9[0x7];                                     // 0x0029(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerDialogueCondition");
		return ptr;
	}



};

// Class Tiger.TigerDialogueCondition_Clan
// 0x0008 (FullSize[0x0038] - InheritedSize[0x0030])
class UTigerDialogueCondition_Clan : public UTigerDialogueCondition
{
public:
	Tiger_ETigerDialogueClanRequirementSpecifier       ClanEquality;                                              // 0x0030(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	Tiger_ETigerClan                                   ClanRequirement;                                           // 0x0031(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_T06B[0x6];                                     // 0x0032(0x0006) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerDialogueCondition_Clan");
		return ptr;
	}



};

// Class Tiger.TigerDialogueCondition_DialogueRead
// 0x0020 (FullSize[0x0050] - InheritedSize[0x0030])
class UTigerDialogueCondition_DialogueRead : public UTigerDialogueCondition
{
public:
	struct FString                                     ListId;                                                    // 0x0030(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FString                                     DialogueId;                                                // 0x0040(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerDialogueCondition_DialogueRead");
		return ptr;
	}



};

// Class Tiger.TigerDialogueCondition_FinishedCertainGame
// 0x0008 (FullSize[0x0038] - InheritedSize[0x0030])
class UTigerDialogueCondition_FinishedCertainGame : public UTigerDialogueCondition
{
public:
	Tiger_ETigerGroupingMode                           ModeFinished;                                              // 0x0030(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_C950[0x7];                                     // 0x0031(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerDialogueCondition_FinishedCertainGame");
		return ptr;
	}



};

// Class Tiger.TigerDialogueCondition_GrimoireEntry
// 0x0008 (FullSize[0x0038] - InheritedSize[0x0030])
class UTigerDialogueCondition_GrimoireEntry : public UTigerDialogueCondition
{
public:
	class UTigerGrimoireEntry*                         RequiredEntry;                                             // 0x0030(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerDialogueCondition_GrimoireEntry");
		return ptr;
	}



};

// Class Tiger.TigerDialogueCondition_MatchCount
// 0x0008 (FullSize[0x0038] - InheritedSize[0x0030])
class UTigerDialogueCondition_MatchCount : public UTigerDialogueCondition
{
public:
	int                                                RequiredMatches;                                           // 0x0030(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	Tiger_ETigerDialogueEqualitySpecifier              MatchEquality;                                             // 0x0034(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_WLZ2[0x3];                                     // 0x0035(0x0003) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerDialogueCondition_MatchCount");
		return ptr;
	}



};

// Class Tiger.TigerDialogueCondition_MatchStats
// 0x0008 (FullSize[0x0038] - InheritedSize[0x0030])
class UTigerDialogueCondition_MatchStats : public UTigerDialogueCondition
{
public:
	Tiger_ETigerSeasonMatchStatType                    StatType;                                                  // 0x0030(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	Tiger_ETigerDialogueEqualitySpecifier              StatEquality;                                              // 0x0031(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_K3FV[0x2];                                     // 0x0032(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                StatValue;                                                 // 0x0034(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerDialogueCondition_MatchStats");
		return ptr;
	}



};

// Class Tiger.TigerDialogueCondition_Outfit
// 0x0018 (FullSize[0x0048] - InheritedSize[0x0030])
class UTigerDialogueCondition_Outfit : public UTigerDialogueCondition
{
public:
	Tiger_ETigerDialogueOutfitRequirementSpecifier     OutfitRequirement;                                         // 0x0030(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	Tiger_ETigerClan                                   Clan;                                                      // 0x0031(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	Tiger_ETigerGender                                 Gender;                                                    // 0x0032(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_EDQM[0x5];                                     // 0x0033(0x0005) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FString                                     OutfitAssetName;                                           // 0x0038(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerDialogueCondition_Outfit");
		return ptr;
	}



};

// Class Tiger.TigerPrimogenNPC
// 0x0028 (FullSize[0x0B30] - InheritedSize[0x0B08])
class ATigerPrimogenNPC : public ATigerNPC
{
public:
	struct FSoftObjectPath                             CharacterPresetPath;                                       // 0x0B08(0x0018) (Net, ZeroConstructor, RepNotify, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_FQHM[0x10];                                    // 0x0B20(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerPrimogenNPC");
		return ptr;
	}



	void OnRep_CharacterPresetPath();
};

// Class Tiger.TigerBodyPartProjectileDamageModifiersAsset
// 0x0050 (FullSize[0x0080] - InheritedSize[0x0030])
class UTigerBodyPartProjectileDamageModifiersAsset : public UDataAsset
{
public:
	TMap<struct FName, Tiger_EBodyPart>                BonesToBodyParts;                                          // 0x0030(0x0050) (Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerBodyPartProjectileDamageModifiersAsset");
		return ptr;
	}



};

// Class Tiger.TigerProjectile
// 0x00A8 (FullSize[0x02D0] - InheritedSize[0x0228])
class ATigerProjectile : public AActor
{
public:
	class USphereComponent*                            CollisionComp;                                             // 0x0228(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UProjectileMovementComponent*                ProjectileMovement;                                        // 0x0230(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UParticleSystemComponent*                    BulletTrail;                                               // 0x0238(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticMeshComponent*                        ProjectileMesh;                                            // 0x0240(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTigerRangedWeapon*                          RangedWeaponType;                                          // 0x0248(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_PCB6[0x8];                                     // 0x0250(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	Tiger_EHitAudio                                    HitAudioEnum;                                              // 0x0258(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bDoProjectileCollision;                                    // 0x0259(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bIsKilled;                                                 // 0x025A(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bWillBeReflected;                                          // 0x025B(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bIsReflected;                                              // 0x025C(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bWasHeadShot;                                              // 0x025D(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bIsPooled;                                                 // 0x025E(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_SRG7[0x1];                                     // 0x025F(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UTigerProjectilePool*                        HomeProjectilePool;                                        // 0x0260(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UNiagaraComponent*                           TraceNiagaraComponent;                                     // 0x0268(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_2R69[0x30];                                    // 0x0270(0x0030) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FTigerRangedHitInfo>                 PiercedCharacters;                                         // 0x02A0(0x0010) (ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	TArray<class ATigerCharacter*>                     HitCharacters;                                             // 0x02B0(0x0010) (ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_OLDY[0x10];                                    // 0x02C0(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerProjectile");
		return ptr;
	}



	void TriggerHitEffects(const struct FHitResult& Hit);
	void OverlappedActor(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void OnReactivate();
	void KillProjectile();
	bool IsWithinRange(const struct FVector& Location);
	void HitActor(class UPrimitiveComponent* HitComp, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, const struct FHitResult& Hit);
	void HideTrail();
	void DeactivateProjectileTraceIfInactive();
	bool CheckIsCharacterInHitResults(class ATigerCharacter* InCharacter);
};

// Class Tiger.TigerProjectilePool
// 0x0030 (FullSize[0x0058] - InheritedSize[0x0028])
class UTigerProjectilePool : public UObject
{
public:
	unsigned char                                      UnknownData_6PI3[0x30];                                    // 0x0028(0x0030) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerProjectilePool");
		return ptr;
	}



};

// Class Tiger.TigerProjectilePoolingSettings
// 0x0008 (FullSize[0x0040] - InheritedSize[0x0038])
class UTigerProjectilePoolingSettings : public USharkLocalDeveloperSettings
{
public:
	bool                                               bUsingProjectilePooling;                                   // 0x0038(0x0001) (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_L8KJ[0x7];                                     // 0x0039(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerProjectilePoolingSettings");
		return ptr;
	}



};

// Class Tiger.TigerProjectionDashProjectile
// 0x0058 (FullSize[0x0280] - InheritedSize[0x0228])
class ATigerProjectionDashProjectile : public AActor
{
public:
	float                                              MovementSpeed;                                             // 0x0228(0x0004) (Edit, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              Duration;                                                  // 0x022C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                                     TargetPosition;                                            // 0x0230(0x000C) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FVector                                     StartingPosition;                                          // 0x023C(0x000C) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_BT3I[0xC];                                     // 0x0248(0x000C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FVector                                     LastValidPosition;                                         // 0x0254(0x000C) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_7EP3[0x8];                                     // 0x0260(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class USphereComponent*                            SphereCollider;                                            // 0x0268(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UClass*                                      ThornsBuff;                                                // 0x0270(0x0008) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_UOP1[0x8];                                     // 0x0278(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerProjectionDashProjectile");
		return ptr;
	}



	void OverlapCharacter(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void OnProjectileStopped();
	void OnProjectileDeath();
	void Multicast_OnStopped();
	void Multicast_OnDeath();
};

// Class Tiger.TigerPromotionalUI
// 0x0070 (FullSize[0x0300] - InheritedSize[0x0290])
class UTigerPromotionalUI : public UTigerMenuWidget
{
public:
	unsigned char                                      UnknownData_3GAC[0x10];                                    // 0x0290(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               bIsPreviewWidget;                                          // 0x02A0(0x0001) (Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_JMV3[0x3];                                     // 0x02A1(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                ZValue;                                                    // 0x02A4(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      FirstTimeWelcomeTexturePath[0x28];                         // 0x02A8(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	struct FText                                       FirstTimeWelcomeTitleText;                                 // 0x02D0(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FText                                       FirstTimeWelcomeDescriptionText;                           // 0x02E8(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerPromotionalUI");
		return ptr;
	}



	void RefreshConfig();
	void OverrideCulture(const struct FString& InCulture);
	void OnTitleScreenClosed();
	void OnShowFirstTimeEntry();
	void OnShowEntry(const struct FTigerPromotionalPopupConfigEntry& InEntry);
	void OnInitializeDone(bool bInSuccess);
};

// Class Tiger.TigerDialogueCondition_Quest
// 0x0038 (FullSize[0x0068] - InheritedSize[0x0030])
class UTigerDialogueCondition_Quest : public UTigerDialogueCondition
{
public:
	Tiger_ETigerDialogueQuestRequirementSpecifier      Requirement;                                               // 0x0030(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_88I1[0x7];                                     // 0x0031(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FTigerQuestIdentifier                       questIdToCheck;                                            // 0x0038(0x0030) (Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerDialogueCondition_Quest");
		return ptr;
	}



};

// Class Tiger.TigerDialogueCondition_SeasonLevel
// 0x0008 (FullSize[0x0038] - InheritedSize[0x0030])
class UTigerDialogueCondition_SeasonLevel : public UTigerDialogueCondition
{
public:
	int                                                RequiredSeasonLevel;                                       // 0x0030(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	Tiger_ETigerDialogueEqualitySpecifier              SeasonEquality;                                            // 0x0034(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_8JNB[0x3];                                     // 0x0035(0x0003) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerDialogueCondition_SeasonLevel");
		return ptr;
	}



};

// Class Tiger.TigerNpcMovementRestrictionBoundsData
// 0x0020 (FullSize[0x0048] - InheritedSize[0x0028])
class UTigerNpcMovementRestrictionBoundsData : public UObject
{
public:
	unsigned char                                      UnknownData_TJZC[0x20];                                    // 0x0028(0x0020) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerNpcMovementRestrictionBoundsData");
		return ptr;
	}



};

// Class Tiger.TigerNpcMovementRestrictionBounds
// 0x0020 (FullSize[0x0248] - InheritedSize[0x0228])
class ATigerNpcMovementRestrictionBounds : public AActor
{
public:
	class USplineComponent*                            InnerSpline;                                               // 0x0228(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USplineComponent*                            OuterSpline;                                               // 0x0230(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_GAPZ[0x10];                                    // 0x0238(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerNpcMovementRestrictionBounds");
		return ptr;
	}



};

// Class Tiger.TigerNpcPropComponent
// 0x0028 (FullSize[0x00D8] - InheritedSize[0x00B0])
class UTigerNpcPropComponent : public UActorComponent
{
public:
	class USkeletalMeshComponent*                      OwnerMeshComp;                                             // 0x00B0(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FTigerPropAttachment>                AttachedProps;                                             // 0x00B8(0x0010) (ZeroConstructor, NativeAccessSpecifierPrivate)
	unsigned char                                      FreeProps[0x10];                                           // 0x00C8(0x0010) UNKNOWN PROPERTY: ArrayProperty


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerNpcPropComponent");
		return ptr;
	}



	bool HasProp(const struct FName& AttachmentIdentifier);
	bool HasAnyProp(TArray<struct FName> AttachmentIdentifiers);
	bool HasAllProps(TArray<struct FName> AttachmentIdentifiers);
	class UMeshComponent* GetPropComponent(const struct FName& Identifier);
	void DetachPropWithSetImpulse(const struct FName& AttachmentIdentifier, const struct FVector& Impulse, float AngularImpulseStrength);
	void DetachProp(const struct FName& AttachmentIdentifier, Tiger_ETigerDetachMethod DetachMethod);
	void ClearProps(Tiger_ETigerDetachMethod DetachMethod);
	class UMeshComponent* AttachProp(const struct FTigerPropAttachmentInfo& Attachment);
};

// Class Tiger.TigerNPCSpawningCoordinator
// 0x0078 (FullSize[0x0128] - InheritedSize[0x00B0])
class UTigerNPCSpawningCoordinator : public UActorComponent
{
public:
	class UTigerNPCAsset*                              JudgeNpcAsset;                                             // 0x00B0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UDataTable*                                  NpcSpawningGroupBudget;                                    // 0x00B8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              JudgeSpawnTime;                                            // 0x00C0(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bShouldSpawnJudge;                                         // 0x00C4(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_XFK8[0x63];                                    // 0x00C5(0x0063) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerNPCSpawningCoordinator");
		return ptr;
	}



	void TrySpawnNpcs();
	void SpawnNpcs();
	void OnMatchStateChanged(Tiger_ETigerMatchState OldState, Tiger_ETigerMatchState NewState);
	void OnBalanceModeSet();
};

// Class Tiger.TigerOnlineStatusMessages
// 0x0070 (FullSize[0x0098] - InheritedSize[0x0028])
class UTigerOnlineStatusMessages : public UObject
{
public:
	struct FText                                       DefaultMessage;                                            // 0x0028(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FText                                       DefaultAccountMessage;                                     // 0x0040(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FText                                       DefaultSystemMessage;                                      // 0x0058(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FText                                       DefaultServerMessage;                                      // 0x0070(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	TArray<struct FTigerOnlineStatusMessageEntry>      Messages;                                                  // 0x0088(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerOnlineStatusMessages");
		return ptr;
	}



	struct FText GetMessageForError(const struct FTigerOnlineErrorCode& InErrorCode);
};

// Class Tiger.TigerOnlineStatusSubsystem
// 0x00A8 (FullSize[0x00D8] - InheritedSize[0x0030])
class UTigerOnlineStatusSubsystem : public UGameInstanceSubsystem
{
public:
	unsigned char                                      UnknownData_MSJK[0x10];                                    // 0x0030(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UTigerOnlineStatusMessages*                  OnlineStatusMessages;                                      // 0x0040(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_W234[0x90];                                    // 0x0048(0x0090) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerOnlineStatusSubsystem");
		return ptr;
	}



	void TigerTestOnlineError(Tiger_ETigerOnlineErrorCategory InCategory, int InId);
	void SetOnlineErrorAndGoToTitle(const struct FTigerOnlineErrorCode& InErrorCode);
	void SetOnlineError(const struct FTigerOnlineErrorCode& InErrorCode);
	bool IsStatusOk();
	float GetRetryDelaySeconds();
	class UTigerOnlineError* GetOnlineError();
	void ClearOnlineError();
};

// Class Tiger.TigerOutfitVendorUI
// 0x0018 (FullSize[0x03C8] - InheritedSize[0x03B0])
class UTigerOutfitVendorUI : public UTigerSceneBackgroundUI
{
public:
	class UTigerVendorComponent*                       VendorComponent;                                           // 0x03B0(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTigerVendorStoreCategory*                   CurrentCategory;                                           // 0x03B8(0x0008) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_FQE0[0x8];                                     // 0x03C0(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerOutfitVendorUI");
		return ptr;
	}



	void OnCategoryItemsReceived(Tiger_ETigerPersistentStoreCategory CategoryType, TArray<struct FTigerVendorStoreCategoryItem> CategoryItems);
	void OnBuyItemResponseBP(const struct FString& ErrorMessage, int InventoryCount);
	void OnBuyItemResponse(bool bInSuccess, const struct FTigerItemId& InItemId, const struct FString& InErrorMessage);
	void GetStoreCategoriesResponse(Tiger_ETigerPersistentStoreCategory CategoryType);
	void FetchCategoryItems(Tiger_ETigerPersistentStoreCategory CategoryType);
	struct FTigerVendorStoreCategoryItem CreateStoreCategoryItemFromStoreEntry(const struct FTigerMetaStoreEntry& InStoreEntry);
	void BuyItem(const struct FTigerItemId& InItemId, const struct FTigerItemId& InSoftCurrencyId);
};

// Class Tiger.TigerOutlineComponent
// 0x0040 (FullSize[0x00F0] - InheritedSize[0x00B0])
class UTigerOutlineComponent : public UActorComponent
{
public:
	Tiger_ETigerOutlineMode                            CurrentMode;                                               // 0x00B0(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_J7O9[0x3];                                     // 0x00B1(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                StencilValue;                                              // 0x00B4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                LocalPlayerStencilValue;                                   // 0x00B8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_TMYM[0x4];                                     // 0x00BC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnOutlineModeRefreshed;                                    // 0x00C0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	TArray<class UMeshComponent*>                      OutlineMeshes;                                             // 0x00D0(0x0010) (ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	uint16_t                                           OutlinesToPauseWhenHidden;                                 // 0x00E0(0x0002) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint16_t                                           OutlinesToPauseWhenBehindTrapGas;                          // 0x00E2(0x0002) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_E2X6[0xC];                                     // 0x00E4(0x000C) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerOutlineComponent");
		return ptr;
	}



	void SetShouldUseCustomDepth(bool bInShouldUseCustomDepth);
	void RegisterOutlineMesh(class UMeshComponent* InMesh);
	void OnOutlineModeRefreshed__DelegateSignature(Tiger_ETigerOutlineMode HighestPrioOutline);
	bool IsOutlineActivated(Tiger_ETigerOutlineMode InMode);
	bool IsHidden();
	bool IsBehindTrapGas();
	bool HasOutline();
	void DeactivateOutline(Tiger_ETigerOutlineMode InMode);
	void ActivateOutline(Tiger_ETigerOutlineMode InMode);
};

// Class Tiger.TigerPaperDoll
// 0x03F8 (FullSize[0x0620] - InheritedSize[0x0228])
class ATigerPaperDoll : public AActor
{
public:
	class UTigerCharacterMeshManager*                  MeshManager;                                               // 0x0228(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class ATigerPlayerState>            TigerPlayerState;                                          // 0x0230(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTigerNpcPropComponent*                      PropComponent;                                             // 0x0238(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USceneComponent*                             PlayerAttachment;                                          // 0x0240(0x0008) (Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USkeletalMeshComponent*                      BodySkelMesh;                                              // 0x0248(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USkeletalMeshComponent*                      HeadSkelMesh;                                              // 0x0250(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USkeletalMeshComponent*                      HoodieSkelMesh;                                            // 0x0258(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USkeletalMeshComponent*                      HairSkelMesh;                                              // 0x0260(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USkeletalMeshComponent*                      HeadgearMesh;                                              // 0x0268(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USkeletalMeshComponent*                      EyewearMesh;                                               // 0x0270(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USkeletalMeshComponent*                      BeardSkelMesh;                                             // 0x0278(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USkeletalMeshComponent*                      BodyAdditionalMesh;                                        // 0x0280(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FTigerPreviewerData                         StartupAppearance;                                         // 0x0288(0x02B0) (Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	bool                                               bRegisterWithPlayerController;                             // 0x0538(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_KGSI[0x7];                                     // 0x0539(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UTigerCharCustomizationComponent*            CharacterCustomization;                                    // 0x0540(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTigerPlayerClanData*                        PlayerClan;                                                // 0x0548(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCameraComponent*                            CameraComponent;                                           // 0x0550(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UClass*                                      PlayerAnimInstanceClass;                                   // 0x0558(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USceneCaptureComponent2D*                    SceneCapture;                                              // 0x0560(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ATigerPlayerCameraManager*                   CameraManager;                                             // 0x0568(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bUseFreeCam;                                               // 0x0570(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_H4Q2[0x3];                                     // 0x0571(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              DefaultCameraLerpSpeed;                                    // 0x0574(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                                     CamerasOffset[0xB];                                        // 0x0578(0x0084) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                                     CameraTargetOffset;                                        // 0x05FC(0x000C) (Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnStartupAppearanceApplied;                                // 0x0608(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_12WA[0x8];                                     // 0x0618(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerPaperDoll");
		return ptr;
	}



	void ShowPaperdollFromCharacter(class ATigerCharacter* Character);
	void ShowPaperDoll();
	void ShowCharacter(const struct FTigerPersistentPlayerCharacter& Character);
	void SetPlayerState(class ATigerPlayerState* InPlayerState);
	void SetCameraTargetOffset(const struct FVector& InCameraTargetOffset, bool bAnimateCamera);
	void SetCameraFocus(Tiger_ETigerCustomizePart CustomizePart, bool bAnimateCamera);
	void SetAppearanceFromPlayerState(class ATigerPlayerState* InPlayerState);
	void SetAppearanceDataWithItemOverride(const struct FTigerPreviewerData& InPreviewAppearance, Tiger_ETigerClan InClanType);
	void SetAppearanceAndOutfit(const struct FTigerCharacterAppearance& Appearance);
	void SetAppearanceAndClan(const struct FTigerCharacterAppearance& Appearance, class UTigerPlayerClanData* ClanData, const struct FScriptDelegate& Delegate);
	void SetAppearance(const struct FTigerCharacterAppearance& Appearance);
	void PreNewCharacterSelected();
	void PostNewCharacterSelected();
	void OnStartupAppearanceApplied__DelegateSignature();
	void OnDynamicAppearanceLoaded__DelegateSignature();
	void HidePaperdoll();
	class UTigerAnimInstance* GetTigerAnimInstance();
	Tiger_ETigerGender GetBodyType();
	void ApplyStartupAppearance(class UTigerCharCustomizationComponent* InCustomizationComponent);
	bool ApplyEditorAppearance(class UTigerCharCustomizationComponent* CustomizationComponent);
};

// Class Tiger.TigerPaperDollAnimInstance
// 0x0008 (FullSize[0x03C0] - InheritedSize[0x03B8])
class UTigerPaperDollAnimInstance : public UTigerAnimInstance
{
public:
	struct FName                                       DefaultSequenceName;                                       // 0x03B8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerPaperDollAnimInstance");
		return ptr;
	}



};

// Class Tiger.TigerParticleStrategyChooseSystem
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class UTigerParticleStrategyChooseSystem : public UTigerParticleStrategy
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerParticleStrategyChooseSystem");
		return ptr;
	}



	class UParticleSystem* ChooseSpawningSystem(class ATigerCharacter* InParticleInstigator);
};

// Class Tiger.TigerPartyInvite
// 0x0048 (FullSize[0x0070] - InheritedSize[0x0028])
class UTigerPartyInvite : public UObject
{
public:
	struct FTigerInviteId                              ID;                                                        // 0x0028(0x0010) (BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FTigerPersistentPlayerID                    HostId;                                                    // 0x0038(0x0010) (BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	struct FString                                     HostDisplayName;                                           // 0x0048(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_XIEV[0x18];                                    // 0x0058(0x0018) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerPartyInvite");
		return ptr;
	}



};

// Class Tiger.TigerPartyManager
// 0x0228 (FullSize[0x0250] - InheritedSize[0x0028])
class UTigerPartyManager : public UObject
{
public:
	struct FScriptMulticastDelegate                    OnInviteReceived;                                          // 0x0028(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnInviteRemoved;                                           // 0x0038(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnJoinedParty;                                             // 0x0048(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnLeftParty;                                               // 0x0058(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnMemberJoinedParty;                                       // 0x0068(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnMemberLeftParty;                                         // 0x0078(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnLeaderChanged;                                           // 0x0088(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnInviteAccepted;                                          // 0x0098(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnInviteDeclined;                                          // 0x00A8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnPartyUpdated;                                            // 0x00B8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnInviteFailed;                                            // 0x00C8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnAcceptInviteFailed;                                      // 0x00D8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnSessionAvailable;                                        // 0x00E8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnCreateGameSessionFailed;                                 // 0x00F8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class UTigerGameInstance>           GameInstance;                                              // 0x0108(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UTigerUser*>                          PartyMembers;                                              // 0x0110(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	TArray<class UTigerPartyInvite*>                   Invites;                                                   // 0x0120(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	float                                              TravelTimeoutSeconds;                                      // 0x0130(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              MaxInviteAgeSeconds;                                       // 0x0134(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                MaxInvites;                                                // 0x0138(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_A090[0xC];                                     // 0x013C(0x000C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UTigerPartyService*                          PartyService;                                              // 0x0148(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_0Y06[0x98];                                    // 0x0150(0x0098) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TMap<struct FString, double>                       LatestInviteAttemptTimestamps;                             // 0x01E8(0x0050) (NativeAccessSpecifierPrivate)
	float                                              DefaultInviteCooldown;                                     // 0x0238(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              DeclinedInviteCooldown;                                    // 0x023C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_LG80[0x10];                                    // 0x0240(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerPartyManager");
		return ptr;
	}



	bool TravelToPartyElysium();
	void TigerPartyInvite(const struct FString& InPlayerId);
	void TigerPartyDump();
	void RequestPartyUpdate();
	void RequestPartyCheck();
	void RemoveInvitesOfPlayer(const struct FTigerPersistentPlayerID& InPlayerId);
	void RemoveExpiredInvites();
	bool PartyHasSelectedElysium();
	void OnSessionAvailableDelegate__DelegateSignature();
	void OnPartyUpdatedDelegate__DelegateSignature();
	void OnMemberLeftDelegate__DelegateSignature(const struct FTigerPartyId& InPartyId, const struct FString& InDepartingPlayerId);
	void OnMemberJoinedDelegate__DelegateSignature(const struct FTigerPartyId& InPartyId, const struct FString& InJoiningPlayerId);
	void OnLeftPartyDelegate__DelegateSignature(const struct FTigerParty& InParty);
	void OnLeaderChangedDelegate__DelegateSignature();
	void OnJoinPartyFailedDelegate__DelegateSignature();
	void OnJoinedPartyDelegate__DelegateSignature(const struct FTigerParty& InParty);
	void OnInviteFailedDelegate__DelegateSignature();
	void OnInviteDeclinedDelegate__DelegateSignature(const struct FTigerInviteId& InInviteId);
	void OnInviteActionDelegate__DelegateSignature(class UTigerPartyInvite* InInvite);
	void OnInviteAcceptedDelegate__DelegateSignature(const struct FTigerInviteId& InInviteId);
	void OnCreateGameSessionFailedDelegate__DelegateSignature();
	void OnAcceptInviteFailedDelegate__DelegateSignature(const struct FTigerInviteId& InInviteId);
	void LeaveParty();
	bool IsPartyFull();
	bool IsLeader(const struct FString& InPlayerId);
	bool IsInParty();
	void InviteByPlayerId(const struct FTigerPersistentPlayerID& InPlayerId);
	void Invite(class UTigerUser* InUser);
	struct FTigerPartyId GetPartyId();
	float GetInvitePlayerCooldown(const struct FTigerPersistentPlayerID& InPlayerId);
	void DeclineInvite(class UTigerPartyInvite* InInvite);
	void CreateGameSession(const struct FTigerBpFindSessionSelectedSession& InGameSession);
	void AcceptInvite(class UTigerPartyInvite* InInvite);
};

// Class Tiger.TigerPartyService
// 0x0018 (FullSize[0x0040] - InheritedSize[0x0028])
class UTigerPartyService : public UObject
{
public:
	unsigned char                                      UnknownData_DOHY[0x18];                                    // 0x0028(0x0018) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerPartyService");
		return ptr;
	}



};

// Class Tiger.TigerPassionProjectile
// 0x0060 (FullSize[0x0288] - InheritedSize[0x0228])
class ATigerPassionProjectile : public AActor
{
public:
	struct FVector                                     TargetLocation;                                            // 0x0228(0x000C) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                                     Velocity;                                                  // 0x0234(0x000C) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              ScaledSpeedValue;                                          // 0x0240(0x0004) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              BuffDuration;                                              // 0x0244(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              BuffStrength;                                              // 0x0248(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              TimeUntilParticleFadeTiemout;                              // 0x024C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FTimerHandle                                TimerHandle;                                               // 0x0250(0x0008) (NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      Effect;                                                    // 0x0258(0x0001) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bIsMoving;                                                 // 0x0259(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bTurnOnCollision;                                          // 0x025A(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_1MD5[0x5];                                     // 0x025B(0x0005) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class ATigerCharacter*                             TigerCharacterOwner;                                       // 0x0260(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTigerDisciplinePassion*                     PassionDiscipline;                                         // 0x0268(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UClass*                                      ConfigType;                                                // 0x0270(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBoxComponent*                               Box;                                                       // 0x0278(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UParticleSystemComponent*                    ParticleComp;                                              // 0x0280(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerPassionProjectile");
		return ptr;
	}



	void Server_DestroyProjectile();
	void OnRep_TargetLocation();
	void OnRep_Effect();
};

// Class Tiger.TigerPassiveOverpower
// 0x0000 (FullSize[0x0138] - InheritedSize[0x0138])
class UTigerPassiveOverpower : public UTigerPassiveConfig
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerPassiveOverpower");
		return ptr;
	}



};

// Class Tiger.TigerPassiveAdrenalineRushConfig
// 0x0010 (FullSize[0x0148] - InheritedSize[0x0138])
class UTigerPassiveAdrenalineRushConfig : public UTigerPassiveConfig
{
public:
	class UClass*                                      OnEnemyWithinRadiusBuff;                                   // 0x0138(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              RadiusInUnits;                                             // 0x0140(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_JH2W[0x4];                                     // 0x0144(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerPassiveAdrenalineRushConfig");
		return ptr;
	}



};

// Class Tiger.TigerPassiveAdrenalineRushLogicComponent
// 0x0020 (FullSize[0x0198] - InheritedSize[0x0178])
class UTigerPassiveAdrenalineRushLogicComponent : public UTigerPassiveArchetypeLogic
{
public:
	class UTigerPassiveAdrenalineRushConfig*           PassiveConfig;                                             // 0x0178(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_L1T9[0x18];                                    // 0x0180(0x0018) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerPassiveAdrenalineRushLogicComponent");
		return ptr;
	}



};

// Class Tiger.TigerPassiveAHuntForPleasure
// 0x0008 (FullSize[0x0140] - InheritedSize[0x0138])
class UTigerPassiveAHuntForPleasure : public UTigerPassiveConfig
{
public:
	float                                              MinEffectDistance;                                         // 0x0138(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaxEffectDistance;                                         // 0x013C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerPassiveAHuntForPleasure");
		return ptr;
	}



};

// Class Tiger.TigerPassiveCollectorConfig
// 0x0008 (FullSize[0x0140] - InheritedSize[0x0138])
class UTigerPassiveCollectorConfig : public UTigerPassiveConfig
{
public:
	float                                              CarryCapacityMultiplier;                                   // 0x0138(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_866V[0x4];                                     // 0x013C(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerPassiveCollectorConfig");
		return ptr;
	}



};

// Class Tiger.TigerPassiveColossalStrength
// 0x0008 (FullSize[0x0140] - InheritedSize[0x0138])
class UTigerPassiveColossalStrength : public UTigerPassiveConfig
{
public:
	float                                              UnarmedDamageMultiplier;                                   // 0x0138(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_APXL[0x4];                                     // 0x013C(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerPassiveColossalStrength");
		return ptr;
	}



};

// Class Tiger.TigerPassiveEnragedConfig
// 0x0038 (FullSize[0x0170] - InheritedSize[0x0138])
class UTigerPassiveEnragedConfig : public UTigerPassiveConfig
{
public:
	class UAnimMontage*                                ActivationMontage;                                         // 0x0138(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      EffectActor;                                               // 0x0140(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              EffectActorDestructionDelay;                               // 0x0148(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_DQYR[0x4];                                     // 0x014C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UClass*                                      OnHitBuff;                                                 // 0x0150(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              DisciplineDamageMultiplier;                                // 0x0158(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              RegenSpeed;                                                // 0x015C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              RegenDelay;                                                // 0x0160(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              HealthPercentThreshold;                                    // 0x0164(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bUseBaseHealthPercent;                                     // 0x0168(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bDamageMultiplierOneTimeUse;                               // 0x0169(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_XYGF[0x6];                                     // 0x016A(0x0006) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerPassiveEnragedConfig");
		return ptr;
	}



};

// Class Tiger.TigerPassiveEnragedLogic
// 0x0018 (FullSize[0x00D8] - InheritedSize[0x00C0])
class UTigerPassiveEnragedLogic : public UTigerPassiveComponent
{
public:
	class UTigerPassiveEnragedConfig*                  Config;                                                    // 0x00C0(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class ATigerEnragedEffectActor*                    EffectActor;                                               // 0x00C8(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_M4K5[0x8];                                     // 0x00D0(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerPassiveEnragedLogic");
		return ptr;
	}



	bool IsEnraged();
};

// Class Tiger.TigerPassiveFinalActConfig
// 0x0000 (FullSize[0x0138] - InheritedSize[0x0138])
class UTigerPassiveFinalActConfig : public UTigerPassiveConfig
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerPassiveFinalActConfig");
		return ptr;
	}



};

// Class Tiger.TigerPassiveFinalActLogic
// 0x0000 (FullSize[0x00C0] - InheritedSize[0x00C0])
class UTigerPassiveFinalActLogic : public UTigerPassiveComponent
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerPassiveFinalActLogic");
		return ptr;
	}



};

// Class Tiger.TigerPassiveHideousConfig
// 0x0010 (FullSize[0x0148] - InheritedSize[0x0138])
class UTigerPassiveHideousConfig : public UTigerPassiveConfig
{
public:
	float                                              TimeUntilMasqueradeTicks;                                  // 0x0138(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              HideousReachDistance;                                      // 0x013C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                                 ScaleCurve;                                                // 0x0140(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerPassiveHideousConfig");
		return ptr;
	}



};

// Class Tiger.TigerPassiveHideousLogic
// 0x0060 (FullSize[0x0120] - InheritedSize[0x00C0])
class UTigerPassiveHideousLogic : public UTigerPassiveComponent
{
public:
	class UTigerPassiveHideousConfig*                  Config;                                                    // 0x00C0(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TMap<class ATigerBaseNPC*, struct FHideousTimingData> TimingData;                                                // 0x00C8(0x0050) (NativeAccessSpecifierPrivate)
	class ATigerPlayer*                                Player;                                                    // 0x0118(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerPassiveHideousLogic");
		return ptr;
	}



};

// Class Tiger.TigerPassiveKindredCharmConfig
// 0x0058 (FullSize[0x0190] - InheritedSize[0x0138])
class UTigerPassiveKindredCharmConfig : public UTigerPassiveConfig
{
public:
	class UClass*                                      EffectActor;                                               // 0x0138(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       EffectSocketR;                                             // 0x0140(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       EffectSocketL;                                             // 0x0148(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<float>                                      CharmCountCooldownSpeed;                                   // 0x0150(0x0010) (Edit, EditFixedSize, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	int                                                MaxCharmedCharacterCount;                                  // 0x0160(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_RZ73[0x4];                                     // 0x0164(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UClass*                                      CharmBuff;                                                 // 0x0168(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              PlayerPulseRange;                                          // 0x0170(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              PlayerPulseInterval;                                       // 0x0174(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              BuffDuration;                                              // 0x0178(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              NpcDamageBreakCharmRadius;                                 // 0x017C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              NpcDamageBreakCharmThreshold;                              // 0x0180(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              NpcDamageBreakCharmImmunityTime;                           // 0x0184(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              CharmedFeedingSpeedMultiplier;                             // 0x0188(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_1TZZ[0x4];                                     // 0x018C(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerPassiveKindredCharmConfig");
		return ptr;
	}



};

// Class Tiger.TigerPassiveKindredCharmLogic
// 0x0028 (FullSize[0x00E8] - InheritedSize[0x00C0])
class UTigerPassiveKindredCharmLogic : public UTigerPassiveComponent
{
public:
	class UTigerPassiveKindredCharmConfig*             Config;                                                    // 0x00C0(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class ATigerPlayer*                                Player;                                                    // 0x00C8(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class ATigerKindredCharmEffectActor*               EffectActorR;                                              // 0x00D0(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class ATigerKindredCharmEffectActor*               EffectActorL;                                              // 0x00D8(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_9Z13[0x8];                                     // 0x00E0(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerPassiveKindredCharmLogic");
		return ptr;
	}



	int GetKindredCharmCount();
};

// Class Tiger.TigerPassiveMomentum
// 0x0000 (FullSize[0x0138] - InheritedSize[0x0138])
class UTigerPassiveMomentum : public UTigerPassiveConfig
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerPassiveMomentum");
		return ptr;
	}



};

// Class Tiger.TigerPassiveMomentumLogicComponent
// 0x0018 (FullSize[0x00D8] - InheritedSize[0x00C0])
class UTigerPassiveMomentumLogicComponent : public UTigerPassiveComponent
{
public:
	float                                              CoolDownReduction;                                         // 0x00C0(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              PassiveCoolDown;                                           // 0x00C4(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ATigerPlayer*                                Player;                                                    // 0x00C8(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              EndTime;                                                   // 0x00D0(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               bIsInCooldown;                                             // 0x00D4(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_TL3A[0x3];                                     // 0x00D5(0x0003) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerPassiveMomentumLogicComponent");
		return ptr;
	}



};

// Class Tiger.TigerUtilityPowerHSenseComponent
// 0x0098 (FullSize[0x0148] - InheritedSize[0x00B0])
class UTigerUtilityPowerHSenseComponent : public UActorComponent
{
public:
	struct FScriptMulticastDelegate                    OnHeightenedSensesUsed;                                    // 0x00B0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TArray<struct FTigerNPCMasqueradeStateMessage>     NPCMasqueradeStates;                                       // 0x00C0(0x0010) (ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class AActor*>                              ActiveHeightenedSenseObjects;                              // 0x00D0(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	float                                              HeightenedSensesDirectLosExtent;                           // 0x00E0(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              HeightenedSensesIndirectLosExtent;                         // 0x00E4(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaxFadeInTimer;                                            // 0x00E8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              MaxFadeOutTimer;                                           // 0x00EC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              PulseDuration;                                             // 0x00F0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              CooldownTimeAfterActivation;                               // 0x00F4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              MovementMultiplierWhenActive;                              // 0x00F8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              CurrentFadeInTimer;                                        // 0x00FC(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              CurrentFadeOutTimer;                                       // 0x0100(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              CooldownEndTime;                                           // 0x0104(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              PulseTimeLeft;                                             // 0x0108(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_MSQZ[0x4];                                     // 0x010C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UAkAudioEvent*                               FailedUseAudioEvent;                                       // 0x0110(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                CancellingActions;                                         // 0x0118(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               ActivateHeightenedSensesStartupFinished;                   // 0x011C(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               DeactivateHeightenedSensesStartupFinished;                 // 0x011D(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bShouldStopSprintingWhenActive;                            // 0x011E(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bShouldPulse;                                              // 0x011F(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bIsHeightenedSensesActive;                                 // 0x0120(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_YWFV[0x7];                                     // 0x0121(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FTigerDisableHSenseTarget>           DisabledHeightenedSensesActors;                            // 0x0128(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_N4SA[0x10];                                    // 0x0138(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerUtilityPowerHSenseComponent");
		return ptr;
	}



	void UpdateHeightenedSensesEffects();
	void UpdateBloodResonanceBlendAudio();
	void TriggerHeightenedSensesEffects();
	void ToggledHeightenedSenses__DelegateSignature(bool bIsNowActive);
	void Server_UnsubscribeToHeightenedSenseData();
	void Server_OnActivateHeightenedSenses();
	void OnDeactivateHeightenedSenses();
	void OnActivateHeightenedSenses();
	bool IsWithinHeightenedSensesRanges(class AActor* InCharacter);
	bool IsHeightenedSensesActive();
	float GetHeightenedSensesViewLength();
	float GetCurrentHeightenedSensesViewLength();
	float GetCooldownTimeLeft();
	void DeactivateHeightenedSenseObjects();
	void Client_DeactivateHeightenedSenses();
};

// Class Tiger.TigerUtilityPowerLureComponent
// 0x0038 (FullSize[0x0120] - InheritedSize[0x00E8])
class UTigerUtilityPowerLureComponent : public UTigerUtilityPowerBaseComponent
{
public:
	float                                              TimeToLure;                                                // 0x00E8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_RTTC[0x4];                                     // 0x00EC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UAnimMontage*                                LureAnimation;                                             // 0x00F0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USoundBase*                                  LureWhistleSound;                                          // 0x00F8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              ClientFeedbackUpdateTickInterval;                          // 0x0100(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_URI9[0x1C];                                    // 0x0104(0x001C) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerUtilityPowerLureComponent");
		return ptr;
	}



	void Server_StopLureAttempt();
	void Server_StartLureAttempt(class ATigerNPC* TargetNpc);
	void OnSuccesfulLure(class ATigerNPC* TigerNPC);
	void OnStoppedChannelingLure(class ATigerNPC* TigerNPC);
	void OnStartedChannelingLure(class ATigerNPC* TigerNPC);
	void OnLureEffectEnded(class ATigerNPC* TigerNPC);
	void Multicast_StoppedLureAttempt(class ATigerNPC* TigerNPC);
	void Multicast_StartedLureAttempt(class ATigerNPC* TigerNPC);
	void Multicast_Lure(class ATigerNPC* TigerNPC);
	void Client_SyncSuccessfulLureTarget(class ATigerNPC* TargetNpc);
	void Client_StopLureAttempt();
};

// Class Tiger.TigerUtilityPowerRoar
// 0x0050 (FullSize[0x0138] - InheritedSize[0x00E8])
class UTigerUtilityPowerRoar : public UTigerUtilityPowerBaseComponent
{
public:
	float                                              DurationAIAreAffected;                                     // 0x00E8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              ConeEffectLength;                                          // 0x00EC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              SphereEffectRadius;                                        // 0x00F0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              ConeWidthAngle;                                            // 0x00F4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              Cooldown;                                                  // 0x00F8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_XHBH[0x4];                                     // 0x00FC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UAnimMontage*                                RoarStaggerAnimation;                                      // 0x0100(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAnimMontage*                                RoarAnimation;                                             // 0x0108(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAkAudioEvent*                               RoarSoundEvent;                                            // 0x0110(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_04Z5[0x20];                                    // 0x0118(0x0020) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerUtilityPowerRoar");
		return ptr;
	}



	void Server_AttemptRoar();
	void Multicast_Roar();
	void Client_ConfirmRoarUsage();
};

// Class Tiger.TigerVehicle
// 0x0010 (FullSize[0x0288] - InheritedSize[0x0278])
class ATigerVehicle : public ATigerActivatedObject
{
public:
	class ATigerLootableVehicleDoorSpawner*            LootableDoorSpawner;                                       // 0x0278(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ATigerLootContainer*                         LootContainer;                                             // 0x0280(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerVehicle");
		return ptr;
	}



	void ChangeLootableDoorActorClass(class UClass* InClass);
};

// Class Tiger.TigerItemPreviewAsset
// 0x0010 (FullSize[0x0040] - InheritedSize[0x0030])
class UTigerItemPreviewAsset : public UDataAsset
{
public:
	TArray<struct FTigerItemPreviewData>               ItemPreviews;                                              // 0x0030(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerItemPreviewAsset");
		return ptr;
	}



};

// Class Tiger.TigerSubLevelList
// 0x0010 (FullSize[0x0040] - InheritedSize[0x0030])
class UTigerSubLevelList : public UDataAsset
{
public:
	TArray<struct FTigerSubLevelBackground>            SubLevels;                                                 // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerSubLevelList");
		return ptr;
	}



};

// Class Tiger.TigerScreenshotMapGenerationSettings
// 0x0030 (FullSize[0x0068] - InheritedSize[0x0038])
class UTigerScreenshotMapGenerationSettings : public UDeveloperSettings
{
public:
	float                                              Width;                                                     // 0x0038(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                Resolution;                                                // 0x003C(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                                   Start;                                                     // 0x0040(0x0008) (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                                   End;                                                       // 0x0048(0x0008) (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              Height;                                                    // 0x0050(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_0C7U[0x4];                                     // 0x0054(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FTigerPostProcessSettingsSetup              PostProcessSetup;                                          // 0x0058(0x0010) (Edit, Config, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerScreenshotMapGenerationSettings");
		return ptr;
	}



};

// Class Tiger.TigerScreenshotMapBuilder
// 0x0038 (FullSize[0x0260] - InheritedSize[0x0228])
class ATigerScreenshotMapBuilder : public AActor
{
public:
	class ATigerPlayerController*                      PlayerController;                                          // 0x0228(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCameraComponent*                            CameraComponent;                                           // 0x0230(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_4QNO[0x28];                                    // 0x0238(0x0028) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerScreenshotMapBuilder");
		return ptr;
	}



	void TakeScreenshot();
	void HandleScreenShotTaken();
};

// Class Tiger.TigerScreenTransition
// 0x0040 (FullSize[0x02C0] - InheritedSize[0x0280])
class UTigerScreenTransition : public UTigerWidget
{
public:
	class UCurveFloat*                                 ScreenTransitionCurveIn;                                   // 0x0280(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                                 ScreenTransitionCurveOut;                                  // 0x0288(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnTransitionInFinished;                                    // 0x0290(0x0010) (BlueprintVisible, ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnTransitionOutFinished;                                   // 0x02A0(0x0010) (BlueprintVisible, ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	Tiger_EScreenTransitionState                       CurrentTransitionState;                                    // 0x02B0(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_DOH6[0xF];                                     // 0x02B1(0x000F) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerScreenTransition");
		return ptr;
	}



	float GetCurrentTransitionProgress();
	void BeginTransition();
};

// Class Tiger.TigerScriptedTexture
// 0x0078 (FullSize[0x02F8] - InheritedSize[0x0280])
class UTigerScriptedTexture : public UTigerWidget
{
public:
	class UTextureRenderTarget2D*                      ScriptedTexture;                                           // 0x0280(0x0008) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_K68B[0x70];                                    // 0x0288(0x0070) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerScriptedTexture");
		return ptr;
	}



};

// Class Tiger.TigerSeasonConfigAsset
// 0x0258 (FullSize[0x0288] - InheritedSize[0x0030])
class UTigerSeasonConfigAsset : public UDataAsset
{
public:
	struct FTigerSeasonConfig                          Config;                                                    // 0x0030(0x0258) (Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerSeasonConfigAsset");
		return ptr;
	}



};

// Class Tiger.TigerServerPushConnectionManager
// 0x0000 (FullSize[0x00A8] - InheritedSize[0x00A8])
class UTigerServerPushConnectionManager : public UTigerPushConnectionManager
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerServerPushConnectionManager");
		return ptr;
	}



};

// Class Tiger.TigerSessionSeeker
// 0x0170 (FullSize[0x0198] - InheritedSize[0x0028])
class UTigerSessionSeeker : public UObject
{
public:
	struct FScriptMulticastDelegate                    OnSessionFound;                                            // 0x0028(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnCouldNotFindSession;                                     // 0x0038(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnJoiningSession;                                          // 0x0048(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnCouldNotJoinSession;                                     // 0x0058(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UObject*                                     WorldContextObject;                                        // 0x0068(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTigerGameInstance*                          GameInstance;                                              // 0x0070(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ATigerPlayerController*                      PlayerController;                                          // 0x0078(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FTigerBpFindSessionSelectedSession          SelectedSession;                                           // 0x0080(0x0110) (BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	Tiger_ETigerSessionSearchStatus                    Status;                                                    // 0x0190(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_FS00[0x7];                                     // 0x0191(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerSessionSeeker");
		return ptr;
	}



	void SessionFound(const struct FTigerBpFindSessionSelectedSession& InSelectedSession);
	void SeekBPImpl();
	void Seek();
	void OnSessionFoundDelegate__DelegateSignature();
	void OnPartySessionAvailable();
	void OnLeftParty(const struct FTigerParty& InParty);
	void OnLeaderChanged();
	void OnJoiningSessionDelegate__DelegateSignature();
	void OnCreateGameSessionFailed();
	void OnCouldNotJoinSessionDelegate__DelegateSignature();
	void OnCouldNotFindSessionDelegate__DelegateSignature();
	void JoiningSession();
	void JoinBPImpl();
	void Join();
	void Init(class UObject* InWorldContextObject, class ATigerPlayerController* InPlayerController);
	class UTigerSessionSeeker* STATIC_CreateSessionSeeker(class UObject* InWorldContextObject, class UClass* InSessionSeekerClass, class ATigerPlayerController* InPlayerController);
	void CouldNotJoinSession();
	void CouldNotFindSession();
};

// Class Tiger.TigerSessionService
// 0x0018 (FullSize[0x0040] - InheritedSize[0x0028])
class UTigerSessionService : public UObject
{
public:
	unsigned char                                      UnknownData_TKRJ[0x18];                                    // 0x0028(0x0018) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerSessionService");
		return ptr;
	}



};

// Class Tiger.TigerSessionSettings
// 0x0018 (FullSize[0x0050] - InheritedSize[0x0038])
class UTigerSessionSettings : public UDeveloperSettings
{
public:
	bool                                               bFindOnlyLocalSessions;                                    // 0x0038(0x0001) (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_00BM[0x3];                                     // 0x0039(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                GroupSize;                                                 // 0x003C(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bEnableFakeMatchmakingDelayInElysium;                      // 0x0040(0x0001) (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_Q4IV[0x3];                                     // 0x0041(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                FakeMatchmakingDelayJoinWindowSeconds;                     // 0x0044(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bEnableCloudSessions;                                      // 0x0048(0x0001) (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_TYG8[0x7];                                     // 0x0049(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerSessionSettings");
		return ptr;
	}



};

// Class Tiger.TigerShacklesMine
// 0x0038 (FullSize[0x0260] - InheritedSize[0x0228])
class ATigerShacklesMine : public AActor
{
public:
	class UClass*                                      ThornsBuff;                                                // 0x0228(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UClass*                                      ShacklesBuff;                                              // 0x0230(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USceneComponent*                             Root;                                                      // 0x0238(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USceneComponent*                             IndicatorAnchor;                                           // 0x0240(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_RBCM[0x18];                                    // 0x0248(0x0018) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerShacklesMine");
		return ptr;
	}



	void OnShackleMineTriggered();
	void OnOverlapBegin(class AActor* OverlappedActor, class AActor* OtherActor);
};

// Class Tiger.TigerSharedMouseCursor
// 0x0010 (FullSize[0x0038] - InheritedSize[0x0028])
class UTigerSharedMouseCursor : public UObject
{
public:
	unsigned char                                      UnknownData_15ME[0x10];                                    // 0x0028(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerSharedMouseCursor");
		return ptr;
	}



};

// Class Tiger.TigerSharedVendorUI
// 0x0068 (FullSize[0x02E8] - InheritedSize[0x0280])
class UTigerSharedVendorUI : public UTigerWidget
{
public:
	struct FScriptMulticastDelegate                    OnShortcutHeaderClicked;                                   // 0x0280(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnMainHeaderClicked;                                       // 0x0290(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class ATigerPaperDoll>              VendorPaperDoll;                                           // 0x02A0(0x0008) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UClass*                                      PaperDollClass;                                            // 0x02A8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_Z8JT[0x8];                                     // 0x02B0(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FText                                       VendorName;                                                // 0x02B8(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, Protected, ExposeOnSpawn, NativeAccessSpecifierProtected)
	struct FText                                       VendorPurpose;                                             // 0x02D0(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, Protected, ExposeOnSpawn, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerSharedVendorUI");
		return ptr;
	}



	void TabMenuRightGamepad();
	void TabMenuLeftGamepad();
	void SwitchToDialogueWindow();
	void SwitchToBlockingDialogueWindow();
	void SpawnPaperDoll();
	void OnHeaderTabClicked__DelegateSignature();
};

// Class Tiger.TigerSharkDeathTriggerVolume
// 0x0038 (FullSize[0x0298] - InheritedSize[0x0260])
class ATigerSharkDeathTriggerVolume : public ATriggerVolume
{
public:
	class UClass*                                      Shark;                                                     // 0x0260(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               SharkEatingAudioEvent;                                     // 0x0268(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               WaterSplashAudioEvent;                                     // 0x0270(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               DeathScreamAudioEvent;                                     // 0x0278(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                                    SharkRotation;                                             // 0x0280(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FVector                                     SharkSpawnLocationOffset;                                  // 0x028C(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerSharkDeathTriggerVolume");
		return ptr;
	}



	void OnBeginOverlap(class AActor* OverlappedActor, class AActor* OtherActor);
	void HandleSharkVictim(class ATigerCharacter* InVictim);
};

// Class Tiger.TigerSharknetAgent
// 0x00D8 (FullSize[0x0128] - InheritedSize[0x0050])
class UTigerSharknetAgent : public UTigerDsBackendAgent
{
public:
	struct FString                                     DsVersion;                                                 // 0x0050(0x0010) (ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_YZEC[0xA8];                                    // 0x0060(0x00A8) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              MaxRegisterRetryDelaySeconds;                              // 0x0108(0x0004) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_U4BS[0x1C];                                    // 0x010C(0x001C) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerSharknetAgent");
		return ptr;
	}



};

// Class Tiger.TigerShockwaveWall
// 0x0098 (FullSize[0x02C0] - InheritedSize[0x0228])
class ATigerShockwaveWall : public AActor
{
public:
	unsigned char                                      UnknownData_H39A[0x8];                                     // 0x0228(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UBoxComponent*                               EffectBoxComponent;                                        // 0x0230(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FTigerShockwaveWallData                     ShockwaveData;                                             // 0x0238(0x0060) (BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	struct FVector                                     TargetLocation;                                            // 0x0298(0x000C) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class ATigerPlayer>                 TigerInstigator;                                           // 0x02A4(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              CurrentLifetime;                                           // 0x02AC(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                PowerLevel;                                                // 0x02B0(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_RQ03[0xC];                                     // 0x02B4(0x000C) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerShockwaveWall");
		return ptr;
	}



	struct FVector UpdateEffectCollisionBoxExtents();
	void OnShockwaveWallDestroyed(Tiger_EShockwaveWallDestroyReason InDestroyReason);
	void OnOverlapBeginEffect(class UPrimitiveComponent* InOverlappedComp, class AActor* InOtherActor, class UPrimitiveComponent* InOtherComp, int InOtherBodyIndex, bool bInFromSweep, const struct FHitResult& InSweepResult);
	void OnCharacterHit(class ATigerCharacter* InCharacterHit);
	void Multicast_OnCharacterHit(class ATigerCharacter* InCharacterHit);
	void InitShockwaveData(struct FTigerShockwaveWallData* OutShockwaveData);
	float DetermineDamageOnEnemy(class ATigerCharacter* InEnemyCharacter);
	float CalculateSpeed();
	struct FVector CalculateKnockbackVector(class ATigerCharacter* InHitEnemyCharacter);
};

// Class Tiger.TigerSHPBCoordinator
// 0x0070 (FullSize[0x0120] - InheritedSize[0x00B0])
class UTigerSHPBCoordinator : public UActorComponent
{
public:
	class UTigerNPCAsset*                              SHPBNPCAsset;                                              // 0x00B0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UClass*                                      SHPBWorldMarker;                                           // 0x00B8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FName                                       WaypointKeyName;                                           // 0x00C0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FName                                       WaypointIndexKeyName;                                      // 0x00C8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bIsEnabled;                                                // 0x00D0(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_AMMG[0x7];                                     // 0x00D1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class ATigerNPC*>                           ActiveSHPB;                                                // 0x00D8(0x0010) (ZeroConstructor, NativeAccessSpecifierPrivate)
	struct FTigerSHPBSettings                          Settings;                                                  // 0x00E8(0x001C) (Transient, NoDestructor, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_GI6Z[0x4];                                     // 0x0104(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class ATigerNPCInstantSpawner*                     SHPBSpawner;                                               // 0x0108(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class ATigerMatchGameMode*                         MatchGameMode;                                             // 0x0110(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class ATigerMatchGameState*                        MatchGameState;                                            // 0x0118(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerSHPBCoordinator");
		return ptr;
	}



	void MatchStateChanged(Tiger_ETigerMatchState OldMatchState, Tiger_ETigerMatchState NewMatchState);
};

// Class Tiger.TigerWorldMarker
// 0x0020 (FullSize[0x0248] - InheritedSize[0x0228])
class ATigerWorldMarker : public AActor
{
public:
	class UClass*                                      MarkerClass;                                               // 0x0228(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bAutoCreateMapMarker;                                      // 0x0230(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bWaitForMapData;                                           // 0x0231(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_M0K2[0x6];                                     // 0x0232(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UTigerMapMarkerProxy*                        MapMarkerProxy;                                            // 0x0238(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USceneComponent*                             MarkerRoot;                                                // 0x0240(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerWorldMarker");
		return ptr;
	}



	bool TryToScheduleCreation();
	void OnPlayerControllerBeginPlay();
	bool HasMapMarker();
	void CreateMapMarker();
	bool CanBeCreated();
};

// Class Tiger.TigerSHPBMarker
// 0x0068 (FullSize[0x02B0] - InheritedSize[0x0248])
class ATigerSHPBMarker : public ATigerWorldMarker
{
public:
	class ATigerNPC*                                   FollowingNPC;                                              // 0x0248(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FVector                                     NPCLocation;                                               // 0x0250(0x000C) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_ZXGI[0x4];                                     // 0x025C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	unsigned char                                      PerceivedBy[0x50];                                         // 0x025C(0x0050) UNKNOWN PROPERTY: SetProperty


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerSHPBMarker");
		return ptr;
	}



	void OnRep_NPCLocation();
};

// Class Tiger.TigerGeneratedStaticMeshActor
// 0x0008 (FullSize[0x0230] - InheritedSize[0x0228])
class ATigerGeneratedStaticMeshActor : public AActor
{
public:
	class UStaticMeshComponent*                        MeshComponent;                                             // 0x0228(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerGeneratedStaticMeshActor");
		return ptr;
	}



};

// Class Tiger.TigerSidewalkSpline
// 0x0010 (FullSize[0x0250] - InheritedSize[0x0240])
class ATigerSidewalkSpline : public ATigerRebuildableActor
{
public:
	TArray<class UPrimitiveComponent*>                 OrderedComponentsToMerge;                                  // 0x0240(0x0010) (BlueprintVisible, ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerSidewalkSpline");
		return ptr;
	}



};

// Class Tiger.TigerSignificanceManager
// 0x0020 (FullSize[0x0140] - InheritedSize[0x0120])
class UTigerSignificanceManager : public USignificanceManager
{
public:
	unsigned char                                      UnknownData_OUIM[0x20];                                    // 0x0120(0x0020) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerSignificanceManager");
		return ptr;
	}



};

// Class Tiger.TigerSignificanceSettings
// 0x0080 (FullSize[0x00B8] - InheritedSize[0x0038])
class UTigerSignificanceSettings : public UDeveloperSettings
{
public:
	struct FTigerSignificanceBudget                    Budgets[0x2];                                              // 0x0038(0x0080) (Edit, Config, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerSignificanceSettings");
		return ptr;
	}



};

// Class Tiger.TigerSingleChildActor
// 0x0008 (FullSize[0x0230] - InheritedSize[0x0228])
class ATigerSingleChildActor : public AActor
{
public:
	class AActor*                                      ChildActor;                                                // 0x0228(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerSingleChildActor");
		return ptr;
	}



	void SetChildActorClass(class UClass* ChildActorClass);
};

// Class Tiger.TigerSingleItemSpawner
// 0x0008 (FullSize[0x0260] - InheritedSize[0x0258])
class ATigerSingleItemSpawner : public ATigerLootSpawner
{
public:
	Tiger_ETigerTelemetryItemSourceID                  TelemetryIDSource;                                         // 0x0258(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_TMR3[0x7];                                     // 0x0259(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerSingleItemSpawner");
		return ptr;
	}



	struct FTransform GetSecondaryItemTransform();
	struct FTransform GetPrimaryItemTransform();
};

// Class Tiger.TigerSocialSubscreenUI
// 0x0008 (FullSize[0x0288] - InheritedSize[0x0280])
class UTigerSocialSubscreenUI : public UTigerWidget
{
public:
	unsigned char                                      UnknownData_0MTR[0x8];                                     // 0x0280(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerSocialSubscreenUI");
		return ptr;
	}



	void Open();
	void OnOpen();
	void OnClose();
	bool IsOpen();
	void Close();
};

// Class Tiger.TigerSocialElysiumUI
// 0x0000 (FullSize[0x0288] - InheritedSize[0x0288])
class UTigerSocialElysiumUI : public UTigerSocialSubscreenUI
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerSocialElysiumUI");
		return ptr;
	}



	TArray<struct FTigerPlayerStateFriendPair> GetSortedPlayerList();
};

// Class Tiger.TigerSocialFriendInviteListUI
// 0x0028 (FullSize[0x02A8] - InheritedSize[0x0280])
class UTigerSocialFriendInviteListUI : public UTigerWidget
{
public:
	unsigned char                                      UnknownData_8D2M[0x28];                                    // 0x0280(0x0028) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerSocialFriendInviteListUI");
		return ptr;
	}



	void StopMonitoring();
	void PopulateListAndMonitorChanges();
	void OnPopulateInvites(TArray<class UTigerFriendInvite*> InFriendInvites);
	void OnInviteRemoved(class UTigerFriendInvite* InInvite);
	void OnInviteReceived(class UTigerFriendInvite* InInvite);
	void OnFriendAdded(class UTigerFriend* InNewFriend);
};

// Class Tiger.TigerSocialFriendsUI
// 0x0020 (FullSize[0x02A8] - InheritedSize[0x0288])
class UTigerSocialFriendsUI : public UTigerSocialSubscreenUI
{
public:
	unsigned char                                      UnknownData_GERZ[0x20];                                    // 0x0288(0x0020) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerSocialFriendsUI");
		return ptr;
	}



	void OnFriendsLoaded();
	void OnFriendServiceStatusChanged(Tiger_ETigerOnlineServiceStatus InServiceStatus);
	void OnFriendRemoved(class UTigerFriend* InLostFriend);
	void OnFriendAdded(class UTigerFriend* InNewFriend);
};

// Class Tiger.TigerSocialInboxUI
// 0x0008 (FullSize[0x0290] - InheritedSize[0x0288])
class UTigerSocialInboxUI : public UTigerSocialSubscreenUI
{
public:
	unsigned char                                      UnknownData_JALI[0x8];                                     // 0x0288(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerSocialInboxUI");
		return ptr;
	}



	void OnFriendServiceStatusChanged(Tiger_ETigerOnlineServiceStatus InServiceStatus);
};

// Class Tiger.TigerSocialPartyInviteListUI
// 0x0008 (FullSize[0x0288] - InheritedSize[0x0280])
class UTigerSocialPartyInviteListUI : public UTigerWidget
{
public:
	unsigned char                                      UnknownData_KTDR[0x8];                                     // 0x0280(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerSocialPartyInviteListUI");
		return ptr;
	}



	void StopMonitoring();
	void OnInviteRemoved(class UTigerPartyInvite* InInvite);
	void OnInviteReceived(class UTigerPartyInvite* InInvite);
	void MonitorInvites();
};

// Class Tiger.TigerSocialUI
// 0x0008 (FullSize[0x03B8] - InheritedSize[0x03B0])
class UTigerSocialUI : public UTigerSceneBackgroundUI
{
public:
	class UTigerSocialSubscreenUI*                     CurrentSubscreen;                                          // 0x03B0(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerSocialUI");
		return ptr;
	}



	void OpenSubscreen(class UTigerSocialSubscreenUI* InSubscreen);
	void OnSubscreenOpen(class UTigerSocialSubscreenUI* InSubscreen);
	void CloseCurrentSubscreen();
};

// Class Tiger.TigerSpawnMechanicBattleRoyaleRandomStart
// 0x00C8 (FullSize[0x0118] - InheritedSize[0x0050])
class UTigerSpawnMechanicBattleRoyaleRandomStart : public UTigerSpawnMechanicBattleRoyaleBase
{
public:
	class UClass*                                      TestSpawnPointsMapMarkerClass;                             // 0x0050(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FVector2D>                           GroupSpawnLocations;                                       // 0x0058(0x0010) (ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_CIGC[0x50];                                    // 0x0068(0x0050) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TMap<class ATigerPlayerState*, struct FTigerGroupId> FakeGroupIds;                                              // 0x00B8(0x0050) (Transient, NativeAccessSpecifierPrivate)
	class UTigerGroupCoordinator*                      GroupCoordinator;                                          // 0x0108(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              MinimumDistanceBetweenGroups;                              // 0x0110(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              DistanceBetweenGroupsFalloffLength;                        // 0x0114(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerSpawnMechanicBattleRoyaleRandomStart");
		return ptr;
	}



};

// Class Tiger.TigerSpawnMechanicBloodVein
// 0x0008 (FullSize[0x0030] - InheritedSize[0x0028])
class UTigerSpawnMechanicBloodVein : public UTigerSpawnMechanic
{
public:
	class ATigerBloodVein*                             StartBloodVein;                                            // 0x0028(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerSpawnMechanicBloodVein");
		return ptr;
	}



};

// Class Tiger.TigerSpawnMechanicPlayInEditor
// 0x0008 (FullSize[0x0030] - InheritedSize[0x0028])
class UTigerSpawnMechanicPlayInEditor : public UTigerSpawnMechanic
{
public:
	unsigned char                                      UnknownData_OF5C[0x8];                                     // 0x0028(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerSpawnMechanicPlayInEditor");
		return ptr;
	}



};

// Class Tiger.TigerSpawnMechanicRandomPlayerStart
// 0x0028 (FullSize[0x0050] - InheritedSize[0x0028])
class UTigerSpawnMechanicRandomPlayerStart : public UTigerSpawnMechanic
{
public:
	class ATigerGameMode*                              GameMode;                                                  // 0x0028(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class AActor*>                              AllPlayerStarts;                                           // 0x0030(0x0010) (ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	TArray<class AActor*>                              UnusedPlayerStarts;                                        // 0x0040(0x0010) (ZeroConstructor, Transient, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerSpawnMechanicRandomPlayerStart");
		return ptr;
	}



};

// Class Tiger.TigerSpawnMechanicTutorial
// 0x0000 (FullSize[0x0050] - InheritedSize[0x0050])
class UTigerSpawnMechanicTutorial : public UTigerSpawnMechanicRandomPlayerStart
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerSpawnMechanicTutorial");
		return ptr;
	}



};

// Class Tiger.TigerSpawnPointSelectionUi
// 0x00A0 (FullSize[0x0330] - InheritedSize[0x0290])
class UTigerSpawnPointSelectionUi : public UTigerMenuWidget
{
public:
	struct FVector2D                                   CurrentCanvasSize;                                         // 0x0290(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                PreGameStateEndTime;                                       // 0x0298(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	Tiger_ETigerPreMatchState                          CurrentPreMatchState;                                      // 0x029C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_RXPH[0x3];                                     // 0x029D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FTigerClientSpawnLocationInfo>       CurrentSpawnSelectionInfo;                                 // 0x02A0(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TMap<int, class UTigerWidget*>                     GroupSpawnLocationWidgets;                                 // 0x02B0(0x0050) (BlueprintVisible, ExportObject, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	class UWidget*                                     CanvasSizeWidget;                                          // 0x0300(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_VXB8[0x14];                                    // 0x0308(0x0014) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               bAllowOutOfBoundsSelection;                                // 0x031C(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_SMKE[0x3];                                     // 0x031D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class UTigerWidget*>                        EnemySpawnLocationWidgets;                                 // 0x0320(0x0010) (ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerSpawnPointSelectionUi");
		return ptr;
	}



	void UpdateWidgetLocation(class UTigerWidget* InWidget, const struct FVector& InLocation);
	void SetPreMatchState(const struct FTigerPreMatchStateInfo& InPreMatchState);
	bool RequestNewSpawnLocation(const struct FVector& InDesiredSpawnLocation);
	void OnNewSpawnAssignedFromServerToLocalPlayer(const struct FVector2D& InNewLocation);
	bool IsLocationOutOfBounds(const struct FVector& InLocation);
	int GetRemainingStateTime();
	class UTigerWidget* CreateGroupMarkerWidget(const struct FTigerClientSpawnLocationInfo& InSpawnLocationInfo);
	class UTigerWidget* CreateEnemyMarkerWidget();
};

// Class Tiger.TigerSpectateCameraBehavior
// 0x0050 (FullSize[0x0178] - InheritedSize[0x0128])
class UTigerSpectateCameraBehavior : public UTigerActiveCameraBehavior
{
public:
	float                                              FollowCameraDelay;                                         // 0x0128(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              CameraFollowSpeedMultiplier;                               // 0x012C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ConstantAddedCameraFollowSpeed;                            // 0x0130(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              NewFollowPointOffsetMultiplier;                            // 0x0134(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ATigerSpectatorPawn*                         SpectatorPawn;                                             // 0x0138(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_O10Z[0x38];                                    // 0x0140(0x0038) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerSpectateCameraBehavior");
		return ptr;
	}



};

// Class Tiger.TigerSpectatorPawn
// 0x0058 (FullSize[0x0308] - InheritedSize[0x02B0])
class ATigerSpectatorPawn : public ASpectatorPawn
{
public:
	class UTigerSpringArmComponent*                    SpringArm;                                                 // 0x02B0(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnSpectateeChanged;                                        // 0x02B8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnEnoughStreamingDoneToSpectate;                           // 0x02C8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class ATigerPlayerState*                           CurrentSpectatee;                                          // 0x02D8(0x0008) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class ATigerPlayer>                 CurrentSpectateePlayer;                                    // 0x02E0(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bIsWaitingForStreaming;                                    // 0x02E8(0x0001) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_HHVI[0x3];                                     // 0x02E9(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              LastSpectateeSwitchTime;                                   // 0x02EC(0x0004) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              MaxLoadingScreenTime;                                      // 0x02F0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_O1GZ[0x14];                                    // 0x02F4(0x0014) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerSpectatorPawn");
		return ptr;
	}



	void Server_SpectateAdjacentGroupMember(Tiger_ETigerSelectNewSpectatorDirection InDirection);
	void OnStreamingCellLoaded(class UTigerWorldCompositionCellComponent* InCell);
	void OnSpectateeChanged__DelegateSignature(class ATigerPlayerState* InSpectateePlayerState);
	void OnRep_CurrentSpectatee();
	void OnEnoughStreamingDoneToSpectate__DelegateSignature();
	class ATigerPlayer* GetCurrentSpectatedPlayer();
};

// Class Tiger.TigerSplatmapSettings
// 0x0068 (FullSize[0x00A0] - InheritedSize[0x0038])
class UTigerSplatmapSettings : public USharkLocalDeveloperSettings
{
public:
	bool                                               bRenderSplatmap;                                           // 0x0038(0x0001) (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_E2VU[0x7];                                     // 0x0039(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	unsigned char                                      DefaultStamp[0x28];                                        // 0x0039(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	float                                              TimeBetweenAutoExportInSeconds;                            // 0x0068(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bUseCtrlToDraw;                                            // 0x006C(0x0001) (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_8DFN[0x3];                                     // 0x006D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	unsigned char                                      DrawMaterialMaster[0x28];                                  // 0x006D(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	struct FName                                       DrawMaterialTextureParamName;                              // 0x0098(0x0008) (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerSplatmapSettings");
		return ptr;
	}



};

// Class Tiger.TigerSplatmapPaintingSettings
// 0x0020 (FullSize[0x0048] - InheritedSize[0x0028])
class UTigerSplatmapPaintingSettings : public UObject
{
public:
	TWeakObjectPtr<class UTexture2D>                   Stamp;                                                     // 0x0028(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<bool>                                       Channels;                                                  // 0x0030(0x0010) (Edit, EditFixedSize, ZeroConstructor, NativeAccessSpecifierPublic)
	float                                              Opacity;                                                   // 0x0040(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              StampWorldSize;                                            // 0x0044(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerSplatmapPaintingSettings");
		return ptr;
	}



};

// Class Tiger.TigerVoSubsystem
// 0x00B8 (FullSize[0x00E8] - InheritedSize[0x0030])
class UTigerVoSubsystem : public UGameInstanceSubsystem
{
public:
	class UAkAudioEvent*                               AudioEvent;                                                // 0x0030(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_H98J[0xA0];                                    // 0x0038(0x00A0) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FTigerVoEvent>                       VoEvents;                                                  // 0x00D8(0x0010) (ZeroConstructor, Transient, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerVoSubsystem");
		return ptr;
	}



	float AddVoEvent(const struct FTigerVoEvent& InVoEvent);
};

// Class Tiger.TigerWardrobeUI
// 0x00D0 (FullSize[0x0480] - InheritedSize[0x03B0])
class UTigerWardrobeUI : public UTigerSceneBackgroundUI
{
public:
	class UTigerVendorComponent*                       VendorComponent;                                           // 0x03B0(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UTigerVendorStoreCategory*>           InventoryCategories;                                       // 0x03B8(0x0010) (ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	class UTigerVendorStoreCategory*                   CurrentCategory;                                           // 0x03C8(0x0008) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_F70F[0xB0];                                    // 0x03D0(0x00B0) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerWardrobeUI");
		return ptr;
	}



	void OnSelectedCharacterChanged(class UTigerPersistentPlayerState* InPersistentPlayerState);
	void OnPlayerInventoryChanged(class UTigerPersistentPlayerState* InPersistentPlayerState);
	void OnCategoryItemsReceived(Tiger_ETigerPersistentStoreCategory CategoryType, TArray<struct FTigerVendorStoreCategoryItem> CategoryItems);
	void OnBodyTypeChanged(Tiger_ETigerGender InBodyType);
	void FetchCategoryItems(Tiger_ETigerPersistentStoreCategory CategoryType);
};

// Class Tiger.TigerThrowingAxeConfig
// 0x0070 (FullSize[0x01E0] - InheritedSize[0x0170])
class UTigerThrowingAxeConfig : public UTigerDisciplineAnimTriggeredConfig
{
public:
	class UAnimMontage*                                StartAimingPoseMontage;                                    // 0x0170(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                                ReadyAxeMontage;                                           // 0x0178(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bDebugInfiniteAxes;                                        // 0x0180(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bDebugDrawPredictedProjectilePath;                         // 0x0181(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_50XS[0x2];                                     // 0x0182(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FName                                       CastAnimationName;                                         // 0x0184(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_GCN6[0x4];                                     // 0x018C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UClass*                                      ThrowingAxeProjectile;                                     // 0x0190(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTigerItemAsset*                             AxeItem;                                                   // 0x0198(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       AxeSpawnSocket;                                            // 0x01A0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ForwardOffset;                                             // 0x01A8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                                    AxeSpawnRotationOffset;                                    // 0x01AC(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	float                                              ProjectileDamage;                                          // 0x01B8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ProjectileStartSpeed;                                      // 0x01BC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ProjectileMaxSpeed;                                        // 0x01C0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ProjectileMassInKg;                                        // 0x01C4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                                    ProjectileRotationPerSecond;                               // 0x01C8(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	float                                              ProjectileGravityScale;                                    // 0x01D4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MovementMultiplierAimState;                                // 0x01D8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_32QR[0x4];                                     // 0x01DC(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerThrowingAxeConfig");
		return ptr;
	}



};

// Class Tiger.TigerWeaponAbilityAxeThrow
// 0x0018 (FullSize[0x0108] - InheritedSize[0x00F0])
class UTigerWeaponAbilityAxeThrow : public UTigerDisciplineAnimTriggered
{
public:
	class UTigerThrowingAxeConfig*                     Config;                                                    // 0x00F0(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class ATigerPlayer*                                Player;                                                    // 0x00F8(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_YYA4[0x8];                                     // 0x0100(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerWeaponAbilityAxeThrow");
		return ptr;
	}



	void ThrowMontageEnded(class UAnimMontage* Montage, bool bWasInterrupted);
	void Multicast_RevertWeaponVisibilityOnSimulatedProxy();
};

// Class Tiger.TigerDashConfig
// 0x0060 (FullSize[0x01D0] - InheritedSize[0x0170])
class UTigerDashConfig : public UTigerDisciplineAnimTriggeredConfig
{
public:
	struct FVector                                     HitBoxExtents;                                             // 0x0170(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     HitBoxOffset;                                              // 0x017C(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              DashDistance;                                              // 0x0188(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              DashDuration;                                              // 0x018C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              Damage;                                                    // 0x0190(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              DashExitVelocity;                                          // 0x0194(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SurfaceStopThreshold;                                      // 0x0198(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_J9PO[0x4];                                     // 0x019C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UAnimMontage*                                RecoveryMontage;                                           // 0x01A0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                                RecoveryMontageInAir;                                      // 0x01A8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              RecoveryCancelledBlendOut;                                 // 0x01B0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              RecoveryCancelledBlendOutInAir;                            // 0x01B4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystem*                             DashPSTemplate;                                            // 0x01B8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                                AirDashMontage;                                            // 0x01C0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              PlayAirAnimAngleToSurfaceThreshold;                        // 0x01C8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_TRUG[0x4];                                     // 0x01CC(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class Tiger.TigerDashConfig");
		return ptr;
	}



};

}

#ifdef _MSC_VER
	#pragma pack(pop)
#endif
